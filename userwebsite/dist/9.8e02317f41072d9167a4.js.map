{"version":3,"sources":["webpack:////drone/src/packages/userpage-core/src/landings/UI/LightBox/LightBox.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/LightBox/LightBox.js"],"names":["SwiperCore","use","Pagination","Navigation","Lazy","animate","from","to","transition","startAnimation","stop","LightBox","_ref","images","activeIndex","onClose","onClosing","getMediaSizeUrl","useUploads","opacity","useMotionValue","hasPagination","length","navigationPrevRef","React","useRef","navigationNextRef","handleClose","useCallback","type","stiffness","onComplete","useEffect","ReactDom","createPortal","createElement","motion","div","className","styles","style","onClick","FiX","size","color","Swiper","initialSlide","spaceBetween","slidesPerView","allowTouchMove","pagination","clickable","clickableClass","bulletActiveClass","navigation","prevEl","current","undefined","nextEl","speed","watchOverflow","loop","lazy","loadPrevNext","preloaderClass","loadedClass","onInit","swiper","params","update","map","_ref2","index","url","annotation","SwiperSlide","key","_ref3","isActive","cn","_defineProperty","data-src","alt","LoadingIndicator","Fragment","ref","FiChevronLeft","FiChevronRight","document","querySelector"],"mappings":"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","file":"9.8e02317f41072d9167a4.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_1jYN9G3M\",\"closeBtn\":\"_3wcuJopB\",\"content\":\"_1utuJY31\",\"swiper\":\"rIzdLzty\",\"slide\":\"_1_N7vOiE\",\"slideContent\":\"_2J3eLVxZ\",\"active\":\"_3ZvnEBeH\",\"annotation\":\"_2x0EGbKt\",\"imageBox\":\"_10nsMwur\",\"loaded\":\"_1uvL4jMC\",\"closableOverlay\":\"_1WXUwBQ5\",\"noPagination\":\"_2CtgHFUN\",\"reveal\":\"_2FuIv9Q6\",\"clickablePagination\":\"_3W-f93bV\",\"activeBullet\":\"_1Qe2kQ_W\",\"navButton\":\"xAIEZ-Co\",\"prev\":\"_1in3Yu1k\",\"next\":\"_2b2hZXI4\",\"preloader\":\"sMLoNJWR\"};","import cn from 'classnames';\nimport ReactDom from 'react-dom';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect } from 'react';\nimport SwiperCore, { Pagination, Navigation, Lazy } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { FiX, FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { motion, startAnimation, useMotionValue } from 'framer-motion';\n\nimport { LoadingIndicator } from '@mssgme/ui';\nimport { useUploads } from '../../hooks';\n\nimport styles from './LightBox.scss';\n\nSwiperCore.use([Pagination, Navigation, Lazy]);\n\nconst animate = (from, to, transition) => {\n    void startAnimation('', from, to, transition);\n\n    return {\n        stop: () => from.stop(),\n    };\n};\n\nexport default function LightBox({ images, activeIndex, onClose, onClosing }) {\n    const { getMediaSizeUrl } = useUploads();\n    const opacity = useMotionValue(0);\n    const hasPagination = images.length > 1;\n    const navigationPrevRef = React.useRef(null);\n    const navigationNextRef = React.useRef(null);\n\n    const handleClose = useCallback(() => {\n        onClosing && onClosing();\n\n        animate(opacity, 0, {\n            type: 'spring',\n            stiffness: 100,\n            onComplete: onClose,\n        });\n    }, [onClose, onClosing]);\n\n    useEffect(() => {\n        const controls = animate(opacity, 1, {\n            type: 'spring',\n            stiffness: 100,\n        });\n\n        return controls.stop;\n    }, []);\n\n    return ReactDom.createPortal(\n        <motion.div className={styles.root} style={{ opacity }}>\n            <div className={styles.closeBtn} onClick={handleClose}>\n                <FiX size=\"30\" color=\"#f5f5f5\" />\n            </div>\n            <div className={styles.content}>\n                <Swiper\n                    className={styles.swiper}\n                    initialSlide={activeIndex}\n                    spaceBetween={0}\n                    slidesPerView={1}\n                    allowTouchMove={hasPagination}\n                    pagination={\n                        hasPagination\n                            ? {\n                                clickable: true,\n                                clickableClass: styles.clickablePagination,\n                                bulletActiveClass: styles.activeBullet,\n                            }\n                            : false\n                    }\n                    navigation={{\n                        prevEl: navigationPrevRef.current ? navigationPrevRef.current : undefined,\n                        nextEl: navigationNextRef.current ? navigationNextRef.current : undefined,\n                    }}\n                    speed={600}\n                    watchOverflow={images.length > 1}\n                    loop={images.length > 1}\n                    lazy={{ loadPrevNext: true, preloaderClass: styles.preloader, loadedClass: styles.loaded }}\n                    onInit={(swiper) => {\n                        swiper.params.navigation.prevEl = navigationPrevRef.current;\n                        swiper.params.navigation.nextEl = navigationNextRef.current;\n                        swiper.navigation.update();\n                    }}\n                >\n                    {images.map(({ url, annotation }, index) => (\n                        <SwiperSlide key={index} className={styles.slide}>\n                            {({ isActive }) => (\n                                <div\n                                    className={cn({\n                                        [styles.slideContent]: true,\n                                        [styles.active]: isActive,\n                                    })}\n                                >\n                                    <div\n                                        className={cn({\n                                            [styles.imageBox]: true,\n                                            [styles.noPagination]: images.length === 1,\n                                        })}\n                                    >\n                                        <div className={styles.closableOverlay} onClick={handleClose} />\n                                        <img\n                                            data-src={getMediaSizeUrl(url)}\n                                            className=\"swiper-lazy\"\n                                            alt={annotation || 'Image'}\n                                        />\n                                        <div className={styles.preloader}>\n                                            <LoadingIndicator />\n                                        </div>\n                                    </div>\n                                    {annotation && <div className={styles.annotation}>{annotation}</div>}\n                                </div>\n                            )}\n                        </SwiperSlide>\n                    ))}\n                    {hasPagination && (\n                        <>\n                            <div className={cn(styles.navButton, styles.prev)} ref={navigationPrevRef}>\n                                <FiChevronLeft size={24} />\n                            </div>\n                            <div className={cn(styles.navButton, styles.next)} ref={navigationNextRef}>\n                                <FiChevronRight size={24} />\n                            </div>\n                        </>\n                    )}\n                </Swiper>\n            </div>\n        </motion.div>,\n        document.querySelector('body')\n    );\n}\n\nLightBox.propTypes = {\n    images: PropTypes.array.isRequired,\n    activeIndex: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onClosing: PropTypes.func,\n};\n"],"sourceRoot":""}