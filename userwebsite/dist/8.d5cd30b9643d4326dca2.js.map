{"version":3,"sources":["webpack:////drone/src/packages/ui/src/components/Swiper/Swiper.scss","webpack:////drone/src/packages/ui/src/components/Swiper/Swiper.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Giphy/Giphy.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Giphy/Giphy.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Giphy/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Audio/Audio.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Audio/Audio.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Audio/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Video/Video.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Video/Video.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/VideoGallery/VideoGallery.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/VideoGallery/VideoSlide.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/VideoGallery/VideoGallery.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/VideoGallery/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ImageGallery/ImageGallery.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ImageGallery/ImageSlide.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ImageGallery/ImageGallery.js","webpack:////drone/src/packages/hooks/src/useForceUpdate.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ImageGallery/index.js"],"names":["Swiper","_ref","children","flex","perView","initialSlide","allowTouchMove","interactive","forcePerView","slideClass","pagination","slideStyle","rest","array","Array","isArray","React","Children","toArray","filter","Boolean","count","length","exceedsPerView","showPagination","hasPagination","slidesPerView","paginationOptions","useMemo","clickable","el","createElement","BaseSwiper","_extends","key","observer","resizeObserver","spaceBetween","cls","styles","root","map","child","index","SwiperSlide","style","renderNode","className","cn","slide","nonInteractive","require","SwiperCore","use","Pagination","Lazy","Navigation","Autoplay","EffectFade","EffectFlip","Giphy","block","baseStyle","useBlockTheme","gif","setGif","useState","ref","width","containerWidth","useMeasure","giphyFetch","GiphyFetch","giphy_public_key","memoWidth","gifWidth","images","original","combined","useAsync","async","data","giphyId","BlockBase","Gif","backgroundColor","hideAttribution","borderRadius","noLink","defaultProps","kind","GiphyBlockKind","Audio","url","insets","theme","hasAudio","ReactPlayer","canPlay","blockInsets","useBlockHorizontalInsetsPadding","padding","includes","height","config","mixcloud","options","hide_cover","hide_tracklist","hide_artwork","AudioBlockKind","Video","fixed","replace","fixShorts","hasVideo","wrapper","ratio","player","light","playing","controls","VideoBlockKind","YOUTUBE_TEST","YOUTUBE_ID_SPLITTER","VideoSlide","annotation","isActive","isLoaded","setIsLoaded","useBooleanHandler","isPlaying","play","stop","attributes","cover","_url$split$","youtubeVideoId","match","split","extractCover","useEffect","videoContainer","onPause","onPlay","onReady","fade","crossFade","VideoGallery","swiper","setSwiper","autoplay","effect","color","hasImage","useContrastingPageColor","resolvedInsets","margin","useDoubleNestedInsets","borderColor","isLightColor","videos","renderBullet","bullet","clickableClass","clickablePagination","bulletActiveClass","activeBullet","delay","autoplayOpts","stopAutoplay","useCallback","lazy","preview","placeholder","undefined","embedded","fadeEffect","onSliderMove","onSwiper","video","Object","assign","_ref2","onClick","_id","VideoGalleryBlockKind","ImageSlide","image","isViewMode","Tag","tagAttributes","scrollToHash","useAction","action","getMediaSizeUrl","useUploads","absoluteUrl","MediaSizes","Large","shouldFit","handleLoad","updateAutoHeight","handleClick","type","_swiper$lazy","initialImageLoaded","loadInSlide","imageBlock","fitOutside","imageContainer","alt","data-src","onLoad","preloader","LoadingIndicator","loadPrevNext","preloaderClass","loadedClass","loaded","ImageGallery","sortable","rawWidth","currentLightBoxSlideIndex","setCurrentLightBoxSlideIndex","isLightbox","openLightBox","closeLightBox","total","restartDelay","Math","max","delayRestart","throttleMs","arguments","callback","setCallback","setter","fn","timer","setTimeout","clearTimeout","useThrottledCallback","handleChange","running","start","handleSlide","forceUpdate","setCount","prev","useForceUpdate","hashItems","externalUrl","join","watchOverflow","autoHeight","loop","onUpdate","LightBox","activeIndex","onClose","ImageGalleryBlockKind"],"mappings":"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","file":"8.d5cd30b9643d4326dca2.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"flex\":\"_13OHpFIB\",\"slide\":\"_1u67jLhO\",\"nonInteractive\":\"_3X7yDO_4\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport { Swiper as BaseSwiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Autoplay, EffectFade, EffectFlip, Pagination, Lazy, Navigation } from 'swiper';\n\nimport { cls } from '@mssgme/helpers';\nimport { renderNode } from '../../helpers';\n\nimport styles from './Swiper.scss';\n\n// todo: direct \"import 'swiper/swiper.scss'\" mangles the identifiers and :global can't be used due to sass bug\n//  should either update swiper (if styles import was changed in newer versions) or fix scss-build stack (downgrade?)\nrequire('swiper/swiper.scss');\nrequire('swiper/components/pagination/pagination.scss');\nrequire('swiper/components/effect-flip/effect-flip.scss');\nrequire('swiper/components/effect-fade/effect-fade.scss');\n\nSwiperCore.use([Pagination, Lazy, Navigation, Autoplay, EffectFade, EffectFlip]);\n\nexport function Swiper({\n    children,\n    flex,\n    perView = 1,\n    initialSlide = 0,\n    allowTouchMove = true,\n    interactive = true,\n    forcePerView,\n    slideClass,\n    pagination,\n    slideStyle,\n    ...rest\n}) {\n    const array = (Array.isArray(children) ? children : React.Children.toArray(children)).filter(Boolean);\n    const count = array.length;\n    const exceedsPerView = count > perView;\n    const showPagination = pagination !== false;\n    const hasPagination = exceedsPerView && showPagination;\n    const slidesPerView = forcePerView || exceedsPerView ? perView : count;\n    const paginationOptions = useMemo(() => {\n        if (!hasPagination) {\n            return false; // this will hide pagination AND disable swiping behavior\n        }\n\n        return showPagination\n            ? { clickable: true, ...pagination } // pagination + swiping enabled\n            : { el: null }; // this will hide pagination but preserve swiping behavior\n    }, [hasPagination, showPagination, pagination]);\n\n    return (\n        <BaseSwiper\n            key={`${exceedsPerView}-${showPagination}-${count}`}\n            observer\n            resizeObserver\n            spaceBetween={0}\n            slidesPerView={slidesPerView}\n            allowTouchMove={allowTouchMove && exceedsPerView}\n            initialSlide={initialSlide}\n            pagination={paginationOptions}\n            {...cls([styles.root, flex && styles.flex], rest)}\n        >\n            {array.map((child, index) => (\n                <SwiperSlide\n                    key={child.key}\n                    style={renderNode(slideStyle, index)}\n                    className={cn(styles.slide, !interactive && styles.nonInteractive, slideClass)}\n                >\n                    {child}\n                </SwiperSlide>\n            ))}\n        </BaseSwiper>\n    );\n}\n\nSwiper.propTypes = {\n    children: PropTypes.any.isRequired,\n    initialSlide: PropTypes.number,\n    perView: PropTypes.number,\n    forcePerView: PropTypes.bool,\n    interactive: PropTypes.bool,\n    allowTouchMove: PropTypes.bool,\n    flex: PropTypes.bool,\n    slideClass: PropTypes.string,\n    slideStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    pagination: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3ISPBjHC\",\"content\":\"_15yqqiRH\",\"placeholder\":\"_3VpReIeK\"};","import cn from 'classnames';\nimport React, { useMemo, useState } from 'react';\nimport { useAsync, useMeasure } from 'react-use';\nimport { Gif } from '@giphy/react-components';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\n\nimport { giphy_public_key } from 'config';\nimport { GiphyBlockKind } from '@mssgme/shared';\nimport { cls } from '@mssgme/helpers';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { BlockBase } from '../BlockBase';\n\nimport styles from './Giphy.scss';\n\nexport default function Giphy({ block, style: baseStyle, ...rest }) {\n    const { style } = useBlockTheme(block);\n    const [gif, setGif] = useState(null);\n    const [ref, { width: containerWidth }] = useMeasure();\n    const giphyFetch = useMemo(() => new GiphyFetch(giphy_public_key), []);\n    const memoWidth = useMemo(() => containerWidth, [!!containerWidth]);\n    const gifWidth = gif?.images.original.width > memoWidth ? memoWidth : gif?.images.original.width;\n    const combined = useMemo(() => (baseStyle ? { ...style, ...baseStyle } : style), [style, baseStyle]);\n\n    useAsync(async () => {\n        const { data } = await giphyFetch.gif(block.giphyId);\n\n        setGif(data);\n    }, [block.giphyId]);\n\n    return (\n        <BlockBase style={combined} {...cls(styles.root, rest)}>\n            <div className={cn({ [styles.content]: true, [styles.placeholder]: !gif })} ref={ref}>\n                {gif && (\n                    <Gif\n                        gif={gif}\n                        backgroundColor=\"transparent\"\n                        hideAttribution\n                        width={gifWidth || 200}\n                        borderRadius={16}\n                        noLink\n                    />\n                )}\n            </div>\n        </BlockBase>\n    );\n}\n\nGiphy.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nGiphy.defaultProps = BlockBase.defaultProps;\n\nGiphy.kind = GiphyBlockKind;\n","import Giphy from './Giphy';\n\nexport default Giphy;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_34Sz_TzY\",\"hasAudio\":\"_2nVbQ7tq\",\"player\":\"_2WAlTW55\",\"mixcloud\":\"_3g4Vq4zq\"};","import cn from 'classnames';\nimport ReactPlayer from 'react-player';\nimport React, { useMemo } from 'react';\n\nimport { cls } from '@mssgme/helpers';\nimport { AudioBlockKind } from '@mssgme/shared';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { BlockBase, useBlockHorizontalInsetsPadding } from '../BlockBase';\n\nimport styles from './Audio.scss';\n\nexport default function Audio({ block, block: { url }, insets, ...rest }) {\n    const { theme, style } = useBlockTheme(block);\n    const hasAudio = ReactPlayer.canPlay(url);\n    const blockInsets = useBlockHorizontalInsetsPadding(insets, theme.padding === 'yes');\n\n    return (\n        <BlockBase insets={blockInsets} {...cls(rest)}>\n            <div className={cn(styles.root, { [styles.hasAudio]: hasAudio })} style={style}>\n                {hasAudio && (\n                    <ReactPlayer\n                        className={cn({ [styles.player]: true, [styles.mixcloud]: url.includes('mixcloud.com') })}\n                        url={url}\n                        width=\"100%\"\n                        height=\"100%\"\n                        config={{\n                            mixcloud: {\n                                options: {\n                                    hide_cover: false,\n                                    hide_tracklist: false,\n                                    hide_artwork: false,\n                                },\n                            },\n                        }}\n                    />\n                )}\n            </div>\n        </BlockBase>\n    );\n}\n\nAudio.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nAudio.defaultProps = BlockBase.defaultProps;\n\nAudio.kind = AudioBlockKind;\n","import Audio from './Audio';\n\nexport default Audio;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3FRtghnH\",\"hasVideo\":\"_3Aj67paT\",\"square\":\"_2YR5Euqa\",\"vertical\":\"_1xfKGWnN\",\"yes\":\"_1ugyYonT\",\"player\":\"IpnyRsKe\"};","import cn from 'classnames';\nimport ReactPlayer from 'react-player';\nimport React from 'react';\n\nimport { VideoBlockKind } from '@mssgme/shared';\nimport { cls } from '@mssgme/helpers';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { BlockBase, useBlockHorizontalInsetsPadding } from '../BlockBase';\n\nimport styles from './Video.scss';\n\nconst fixShorts = (url) => {\n    return url && url.replace(/(youtu(?:.be|be.com))\\/shorts/i, '$1/embed');\n};\n\nexport default function Video({ block, block: { url }, insets, ...rest }) {\n    const { theme, style } = useBlockTheme(block);\n    const fixed = fixShorts(url);\n    const hasVideo = ReactPlayer.canPlay(fixed);\n\n    const blockInsets = useBlockHorizontalInsetsPadding(insets, theme.padding === 'yes');\n\n    return (\n        <BlockBase insets={blockInsets} {...cls(styles.wrapper, rest)}>\n            <div className={cn(styles.root, styles[theme.ratio], { [styles.hasVideo]: hasVideo })} style={style}>\n                {hasVideo && (\n                    <ReactPlayer\n                        className={styles.player}\n                        light\n                        playing\n                        controls\n                        url={fixed}\n                        width=\"100%\"\n                        height=\"100%\"\n                    />\n                )}\n            </div>\n        </BlockBase>\n    );\n}\n\nVideo.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nVideo.defaultProps = BlockBase.defaultProps;\n\nVideo.kind = VideoBlockKind;\n","// extracted by mini-css-extract-plugin\nexport default {\"inList\":\"_3ir0lTB7\",\"clickablePagination\":\"_2dI5vLAe\",\"bullet\":\"O1Bh9zR7\",\"activeBullet\":\"i0wkGPHl\",\"videoContainer\":\"_1UDdl4GO\",\"hasVideo\":\"_7LTOnhgp\",\"square\":\"H0L-bW_T\",\"vertical\":\"_1ekZWqw3\",\"yes\":\"_2UtHsL93\",\"player\":\"GkWss4MK\",\"annotation\":\"xzfbHz2b\",\"preview\":\"_340yrqN2\",\"placeholder\":\"_3OIPciSq\",\"rectangle\":\"Y2zj_2-K\"};","import PropTypes from 'prop-types';\nimport ReactPlayer from 'react-player';\nimport React, { useEffect, useMemo } from 'react';\n\nimport { cls } from '@mssgme/helpers';\nimport { useBooleanHandler } from '@mssgme/hooks';\n\nimport styles from './VideoGallery.scss';\n\nconst YOUTUBE_TEST = /^https:\\/\\/(www.)?youtu\\.?be/;\nconst YOUTUBE_ID_SPLITTER = /v\\/|v=|youtu\\.be\\//;\nconst fixShorts = (url) => url && url.replace(/(youtu(?:\\.be|be\\.com))\\/shorts/i, '$1/embed');\nconst extractCover = (url) => {\n    const youtubeVideoId = url.match(YOUTUBE_TEST) ? url.split(YOUTUBE_ID_SPLITTER)[1]?.split(/[?&]/)[0] : null;\n\n    if (youtubeVideoId) {\n        return `https://i.ytimg.com/vi/${youtubeVideoId}/hqdefault.jpg`;\n    }\n};\n\nexport const VideoSlide = ({ url, annotation = '', isActive = true, ratio, ...rest }) => {\n    const [isLoaded, setIsLoaded] = useBooleanHandler(false);\n    const [isPlaying, play, stop] = useBooleanHandler(false);\n    const [hasVideo, attributes] = useMemo(() => {\n        const fixed = fixShorts(url) || '';\n        const cover = extractCover(fixed);\n\n        return [\n            ReactPlayer.canPlay(fixed),\n            {\n                light: cover || true,\n                url: fixed,\n            },\n        ];\n    }, [url]);\n\n    useEffect(() => {\n        if (isLoaded) {\n            play();\n        }\n    }, [isLoaded]);\n\n    return (\n        <div {...cls([styles.videoContainer, styles[ratio], { [styles.hasVideo]: hasVideo }], rest)}>\n            {hasVideo && (\n                <ReactPlayer\n                    className={styles.player}\n                    controls\n                    playing={isPlaying && isActive}\n                    width=\"100%\"\n                    height=\"100%\"\n                    onPause={stop}\n                    onPlay={play}\n                    onReady={setIsLoaded}\n                    {...attributes}\n                />\n            )}\n            {annotation && !isLoaded && !isPlaying && <div className={styles.annotation}>{annotation}</div>}\n        </div>\n    );\n};\n\nVideoSlide.propTypes = {\n    url: PropTypes.string.isRequired,\n    annotation: PropTypes.string,\n    isActive: PropTypes.bool,\n    ratio: PropTypes.string.isRequired,\n    style: PropTypes.object,\n    onClick: PropTypes.func.isRequired,\n};\n","import cn from 'classnames';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useMeasure } from 'react-use';\n\nimport { cls, isLightColor } from '@mssgme/helpers';\nimport { VideoGalleryBlockKind } from '@mssgme/shared';\nimport { LandingsPropTypes, Swiper } from '@mssgme/ui';\nimport { useBlockTheme, useContrastingPageColor } from '../../../hooks';\nimport { useDoubleNestedInsets } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { VideoSlide } from './VideoSlide';\n\nimport styles from './VideoGallery.scss';\n\nconst fade = { crossFade: true };\n\nexport default function VideoGallery({ block, insets, style: baseStyle, ...rest }) {\n    const [ref, { width }] = useMeasure();\n    const [swiper, setSwiper] = useState(null);\n    const {\n        theme: { ratio, padding, autoplay, effect },\n        style,\n    } = useBlockTheme(block);\n    const { color, hasImage } = useContrastingPageColor();\n    const { resolvedInsets, margin } = useDoubleNestedInsets(insets, padding);\n    const borderColor = hasImage && (isLightColor(color) ? '#333' : '#eee');\n    const hasPagination = block.videos.length > 1;\n    const pagination = useMemo(() => {\n        return hasPagination\n            ? {\n                renderBullet: (index, className) =>\n                    `<span style=\"background-color: ${color};${\n                        borderColor ? `border: 1px solid ${borderColor}` : ''\n                    };\" class=\"${className + ' ' + styles.bullet}\"></span>`,\n                clickable: true,\n                clickableClass: styles.clickablePagination,\n                bulletActiveClass: styles.activeBullet,\n            }\n            : false;\n    }, [hasPagination, color]);\n    const delay = autoplay * 1000;\n    const autoplayOpts = useMemo(() => hasPagination && !!delay && { delay }, [hasPagination, delay]);\n\n    const stopAutoplay = useCallback(() => void swiper?.autoplay.stop(), []);\n\n    return (\n        <BlockBase lazy ref={ref} insets={resolvedInsets} {...cls(styles.root, rest)}>\n            {block.videos.length === 0 ? (\n                <div className={styles.preview}>\n                    <div className={cn(styles.placeholder, styles[ratio])} />\n                </div>\n            ) : (\n                <Swiper\n                    key={`${block.videos.length}-${autoplay}-${effect}-${width}-${color}`}\n                    flex\n                    slideStyle={padding ? { padding: `0 ${margin}px` } : undefined}\n                    interactive={rest.interactive}\n                    allowTouchMove={hasPagination && !rest.embedded}\n                    autoplay={autoplayOpts}\n                    effect={effect}\n                    pagination={pagination}\n                    fadeEffect={fade}\n                    onSliderMove={stopAutoplay}\n                    onSwiper={setSwiper}\n                >\n                    {block.videos.map((video, index) =>\n                        Object.assign(\n                            ({ isActive }) => (\n                                <VideoSlide\n                                    url={video.url}\n                                    annotation={video.annotation}\n                                    style={style}\n                                    ratio={ratio}\n                                    isActive={isActive}\n                                    onClick={stopAutoplay}\n                                />\n                            ),\n                            { key: video._id || `${video.url}-${index}` }\n                        )\n                    )}\n                </Swiper>\n            )}\n        </BlockBase>\n    );\n}\n\nVideoGallery.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nVideoGallery.defaultProps = BlockBase.defaultProps;\n\nVideoGallery.kind = VideoGalleryBlockKind;\n","import VideoGallery from './VideoGallery';\n\nexport default VideoGallery;\n","// extracted by mini-css-extract-plugin\nexport default {\"blurred\":\"_251K1cse\",\"slide\":\"_2_gsfIu5\",\"clickablePagination\":\"_3XJQ6puG\",\"bullet\":\"_2VIBQrdW\",\"activeBullet\":\"_1aTahp4u\",\"imageBlock\":\"_3GUIjoJS\",\"annotation\":\"KTkjYbis\",\"imageContainer\":\"_1-tgI8sz\",\"preloader\":\"_2tOe0o8y\",\"placeholder\":\"_3cKn-sRE\",\"original\":\"_1ZSVkp4I\",\"loaded\":\"_3R0DaN2b\",\"square\":\"KFmfISnG\",\"image\":\"_3LN39vZd\",\"rectangle\":\"_2pksWdsk\",\"fit-inside\":\"Am3gE8ry\",\"fitInside\":\"Am3gE8ry\",\"fit-outside\":\"_36CDNn75\",\"fitOutside\":\"_36CDNn75\",\"stretch\":\"_1l7WBzhg\",\"fill\":\"_1gsgNUXV\",\"perView-2\":\"_3S9K9Wu5\",\"perView2\":\"_3S9K9Wu5\",\"perView-3\":\"_2ZF09eZO\",\"perView3\":\"_2ZF09eZO\",\"perView-4\":\"ZjBGwFK5\",\"perView4\":\"ZjBGwFK5\",\"perView-5\":\"_7k6yJXBF\",\"perView5\":\"_7k6yJXBF\",\"preview\":\"Kxv_08hZ\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect } from 'react';\n\nimport { LoadingIndicator } from '@mssgme/ui';\nimport { useUploads, MediaSizes, useAction } from '../../../hooks';\n\nimport styles from './ImageGallery.scss';\n\nexport const ImageSlide = ({ index, image, style, theme: { ratio }, onClick, swiper, isViewMode, interactive }) => {\n    const { Tag, tagAttributes, scrollToHash } = useAction({ action: image.action, isViewMode, interactive });\n    const { getMediaSizeUrl } = useUploads();\n    const absoluteUrl = getMediaSizeUrl(image.url, MediaSizes.Large);\n    const shouldFit = ratio !== 'original';\n\n    const handleLoad = useCallback(() => void (swiper && swiper.updateAutoHeight()), [swiper]);\n    const handleClick = interactive && image.action.type === 'fullImage' ? () => onClick(index) : null;\n\n    useEffect(() => {\n        if (swiper?.lazy?.initialImageLoaded) {\n            swiper.lazy.loadInSlide(index);\n        }\n    }, [index, image]);\n\n    return (\n        <div\n            className={cn(styles.imageBlock, {\n                [styles.placeholder]: !absoluteUrl,\n                [styles.fitOutside]: shouldFit,\n                [styles[ratio]]: styles[ratio],\n            })}\n            style={style}\n            onClick={scrollToHash}\n        >\n            <Tag className={styles.imageContainer} onClick={handleClick} {...tagAttributes}>\n                <div className={styles.image}>\n                    <img\n                        alt={image.annotation || 'Image'}\n                        className=\"swiper-lazy\"\n                        data-src={absoluteUrl}\n                        onLoad={handleLoad}\n                    />\n                </div>\n                <div className={styles.preloader}>\n                    <LoadingIndicator />\n                </div>\n            </Tag>\n\n            {image.annotation && <div className={styles.annotation}>{image.annotation}</div>}\n        </div>\n    );\n};\n\nImageSlide.propTypes = {\n    index: PropTypes.number.isRequired,\n    image: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n        externalUrl: PropTypes.string,\n        modal: PropTypes.bool,\n        annotation: PropTypes.string,\n        action: PropTypes.object,\n    }).isRequired,\n    theme: PropTypes.object.isRequired,\n    style: PropTypes.object,\n    onClick: PropTypes.func,\n    swiper: PropTypes.object,\n    isViewMode: PropTypes.bool,\n    interactive: PropTypes.bool,\n};\n","import cn from 'classnames';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useMeasure } from 'react-use';\n\nimport { ImageGalleryBlockKind } from '@mssgme/shared';\nimport { cls, isLightColor } from '@mssgme/helpers';\nimport { useBooleanHandler, useForceUpdate } from '@mssgme/hooks';\nimport { LandingsPropTypes, Swiper } from '@mssgme/ui';\nimport { useBlockTheme, useContrastingPageColor } from '../../../hooks';\nimport { LightBox, useDoubleNestedInsets } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { ImageSlide } from './ImageSlide';\n\nimport styles from './ImageGallery.scss';\n\nexport const useThrottledCallback = (throttleMs = 1000) => {\n    const [callback, setCallback] = useState(null);\n    const setter = useCallback((fn) => setCallback(() => fn), []);\n\n    useEffect(() => {\n        if (!callback) {\n            return;\n        }\n\n        const timer = setTimeout(callback, throttleMs);\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [callback, throttleMs]);\n\n    return setter;\n};\n\nconst fade = { crossFade: true };\nconst lazy = { loadPrevNext: true, preloaderClass: styles.preloader, loadedClass: styles.loaded };\n\nexport default function ImageGallery({ block, insets, sortable, ...rest }) {\n    const [ref, { width: rawWidth }] = useMeasure();\n    const [swiper, setSwiper] = useState(null);\n    const [currentLightBoxSlideIndex, setCurrentLightBoxSlideIndex] = useState(0);\n    const [isLightbox, openLightBox, closeLightBox] = useBooleanHandler();\n    const { theme, style } = useBlockTheme(block);\n    const { color, hasImage } = useContrastingPageColor();\n    const { ratio, padding, perView, autoplay, effect } = theme;\n    const { resolvedInsets, margin } = useDoubleNestedInsets(insets, padding);\n    const width = useMemo(() => rawWidth, [!!rawWidth]);\n    const total = block.images.length;\n    const hasPagination = total > perView;\n    const delay = autoplay * 1000;\n    const restartDelay = Math.max(1000, 5000 - delay);\n    const pagination = useMemo(() => {\n        if (!hasPagination) {\n            return false;\n        }\n\n        const borderColor = hasImage ? `border: 1px solid ${isLightColor(color) ? '#333' : '#eee'}` : '';\n\n        return {\n            renderBullet: (index, className) =>\n                `<span style=\"background-color:${color};${borderColor};\" class=\"${className} ${styles.bullet}\"></span>`,\n            clickable: true,\n            clickableClass: styles.clickablePagination,\n            bulletActiveClass: styles.activeBullet,\n        };\n    }, [hasPagination, color]);\n    const autoplayOpts = useMemo(() => hasPagination && !!delay && { delay }, [hasPagination, delay]);\n\n    const delayRestart = useThrottledCallback(restartDelay);\n    const handleChange = useCallback(\n        (swiper) => {\n            if ((swiper.autoplay && swiper.autoplay.running) || !autoplayOpts) {\n                return;\n            }\n\n            delayRestart(() => {\n                swiper.autoplay && swiper.autoplay.start();\n            });\n        },\n        [autoplayOpts]\n    );\n\n    const handleSlide = useCallback((index) => {\n        setCurrentLightBoxSlideIndex(index);\n        openLightBox();\n    }, []);\n\n    const forceUpdate = useForceUpdate();\n    const hashItems = block.images.map(({ url, externalUrl }) => `${url}-${externalUrl}`).join(':');\n    const key = sortable\n        ? `${hashItems}-${perView}-${autoplay}-${effect}-${color}-${ratio}-${forceUpdate.count}-${width}`\n        : 'swiper';\n\n    return (\n        <BlockBase\n            lazy\n            ref={ref}\n            insets={resolvedInsets}\n            sortable={sortable}\n            {...cls([styles.root, styles[`perView-${perView}`]], rest)}\n        >\n            {total > 0 ? (\n                <Swiper\n                    key={key}\n                    interactive={rest.interactive}\n                    slideStyle={padding ? { padding: `0 ${margin}px` } : undefined}\n                    slidesPerView={perView}\n                    allowTouchMove={hasPagination && !rest.embedded}\n                    flex\n                    watchOverflow\n                    autoHeight\n                    loop\n                    autoplay={autoplayOpts}\n                    pagination={pagination}\n                    fadeEffect={fade}\n                    lazy={lazy}\n                    effect={effect}\n                    onSliderMove={handleChange}\n                    onSwiper={setSwiper}\n                    onUpdate={forceUpdate}\n                >\n                    {block.images.map((image, index) => (\n                        <ImageSlide\n                            key={image._id || `${image.url}-${index}`}\n                            index={index}\n                            image={image}\n                            swiper={swiper}\n                            style={style}\n                            theme={theme}\n                            onClick={handleSlide}\n                            isViewMode={rest.isViewMode}\n                            interactive={rest.interactive}\n                        />\n                    ))}\n                </Swiper>\n            ) : (\n                <div className={styles.preview}>\n                    <div className={cn(styles.placeholder, styles[ratio])} />\n                </div>\n            )}\n\n            {isLightbox && (\n                <LightBox activeIndex={currentLightBoxSlideIndex} images={block.images} onClose={closeLightBox} />\n            )}\n        </BlockBase>\n    );\n}\n\nImageGallery.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nImageGallery.defaultProps = BlockBase.defaultProps;\n\nImageGallery.kind = ImageGalleryBlockKind;\n","import { useCallback, useState } from 'react';\n\nexport function useForceUpdate() {\n    const [count, setCount] = useState(0);\n    const callback = useCallback(() => setCount((prev) => prev + 1), []);\n\n    callback.count = count;\n\n    return callback;\n}\n","import ImageGallery from './ImageGallery';\n\nexport default ImageGallery;\n"],"sourceRoot":""}