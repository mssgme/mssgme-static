{"version":3,"sources":["webpack:////drone/src/packages/userpage-core/src/landings/hooks/useContrastingColor.js","webpack:////drone/src/packages/shared/src/helpers/formatPrice.js","webpack:////drone/src/packages/shared/src/helpers/removeTrailingSlash.js","webpack:////drone/src/packages/shared/src/landings/feedbacks.js","webpack:////drone/src/packages/lib/src/baseApi.js","webpack:////drone/src/packages/lib/src/feedbackApi.js","webpack:////drone/src/packages/hooks/src/useFetching.js","webpack:////drone/src/packages/ui/src/components/Form/SubmitButton.js","webpack:////drone/src/packages/ui/src/components/Inputs/Input/styles.scss","webpack:////drone/src/packages/ui/src/components/Inputs/Input/index.js","webpack:////drone/src/packages/ui/src/components/Inputs/Textarea/styles.scss","webpack:////drone/src/packages/ui/src/components/Inputs/Textarea/index.js","webpack:////drone/src/packages/ui/src/components/FormRow/styles.scss","webpack:////drone/src/packages/ui/src/components/FormRow/index.js","webpack:////drone/src/packages/ui/src/components/Label/styles.scss","webpack:////drone/src/packages/ui/src/components/Label/index.js","webpack:////drone/src/packages/ui/src/components/FormErrors/styles.scss","webpack:////drone/src/packages/ui/src/components/FormErrors/index.js","webpack:////drone/src/packages/ui/src/components/FormField/styles.scss","webpack:////drone/src/packages/ui/src/components/FormField/index.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useModalThemes.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useCustomInputTheme.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useInputTheme.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/Inputs/TextField/TextField.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/Inputs/TextField/TextField.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInputs.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInputs.js","webpack:////drone/src/packages/helpers/src/getContourColor.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/ThemedButton/ThemedButton.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/ThemedButton/ThemedButton.js","webpack:////drone/src/packages/ui/src/hooks/usePresenceRemoval.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/ThemedModal/ThemedModal.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/ThemedModal/ThemedModal.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionForm.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionForm.js","webpack:////drone/src/packages/ui/src/components/Form/useEnhancedFormik.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/index.js","webpack:////drone/src/packages/ui/src/components/Spinner/Spinner.scss","webpack:////drone/src/packages/ui/src/components/Spinner/Spinner.js","webpack:////drone/src/packages/ui/src/components/Spinner/index.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/MoreButton/styles.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/MoreButton/index.js","webpack:////drone/src/packages/icons/src/dist-icons/ImageIcon.js","webpack:////drone/src/packages/ui/src/components/LazyImage/Thumbnail.scss","webpack:////drone/src/packages/ui/src/components/LazyImage/Thumbnail.js","webpack:////drone/src/packages/ui/src/components/LazyImage/LazyImage.scss","webpack:////drone/src/packages/ui/src/components/LazyImage/LazyImage.js","webpack:////drone/src/packages/ui/src/components/LazyImage/useIntersect.js","webpack:////drone/src/packages/ui/src/components/LazyImage/useLoadImage.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGridItem.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGridItem.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/ServiceContent/ServiceContent.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/ServiceContent/ServicePhoto.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/ServiceContent/ServicePhotos.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useCoreContext.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/ServiceContent/BuyButton.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/ServiceContent/BuyButton.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/ServiceContent/ServiceActionsPane.js","webpack:////drone/src/packages/helpers/src/parseUrl.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/ServiceContent/ExternalUrlButton.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/ServiceContent/ServiceContent.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesModal.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesModal.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGrid.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGrid.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/index.js","webpack:////drone/src/packages/icons/src/dist-icons/SearchIcon.js","webpack:////drone/src/packages/userpage-core/src/products/Elements/ProductItem/styles.scss","webpack:////drone/src/packages/userpage-core/src/products/Elements/ProductItem/index.js","webpack:////drone/src/packages/lib/src/productsApi.js","webpack:////drone/src/packages/lib/src/handleError.js","webpack:////drone/src/packages/ui/src/hooks/useBreakpoints.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/ButtonsMenu.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/ButtonsMenu.js","webpack:////drone/src/packages/ui/src/hooks/useHorizontalTabbedScroll.js","webpack:////drone/src/packages/icons/src/dist-icons/ChevronDownIcon.js","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/PureButton.js","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/TextButton.scss","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/TextButton.js","webpack:////drone/src/packages/ui/src/components/Transitions/createTransition.js","webpack:////drone/src/packages/ui/src/components/Transitions/Fade.scss","webpack:////drone/src/packages/ui/src/components/Transitions/Fade.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/FilterMenu.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/FilterMenu.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/CollectionsBar.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/Products.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/Products.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useProductsApi.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/index.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/Grid/styles.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/Grid/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Product/CollectionView/CollectionView.scss","webpack:////drone/src/packages/userpage-core/src/landings/Product/CollectionView/CollectionView.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useCRMData.js","webpack:////drone/src/packages/userpage-core/src/landings/Product/ProductView/ProductView.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/UserOrdersPage/UserOrdersPage.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/UserOrdersPage/UserOrdersPage.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/usePaymentConfigs.js","webpack:////drone/src/packages/shared/src/payments/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/PayButton/PayButton.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/StripeCheckoutForm.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/StripeCheckoutForm.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/PayPalPayment.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/Buttons/WayforpayButton.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/WayforpayPayment.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/Buttons/RobokassaButton.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/Buttons/LiqpayButton.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/CashOnDeliveryPayment.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/StripePayment.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/PayPalPayment.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/RobokassaPayment.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/LiqpayPayment.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Providers/OtherPayment.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/UserOrderPage/UserOrderPage.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/UserOrderPage/UserOrderPage.js","webpack:////drone/src/packages/icons/src/dist-icons/ShoppingBagIcon.js","webpack:////drone/src/packages/icons/src/dist-icons/MapPinIcon.js","webpack:////drone/src/packages/icons/src/dist-icons/CreditCardIcon.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/usePageColors.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/Steps/StepContext.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/Steps/useStep.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/Steps/StepSwitch.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/Steps/StepIcon.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/Steps/StepSwitch.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/Steps/Step.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/Steps/Step.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/printPrice.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/Row.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/Row.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useOrderProducts.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/Divider/Divider.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/Divider/Divider.js","webpack:////drone/src/packages/helpers/src/getTransparentColor.js","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/IconButton.scss","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/IconButton.js","webpack:////drone/src/packages/icons/src/dist-icons/CloseIcon.js","webpack:////drone/src/packages/icons/src/dist-icons/MinusIcon.js","webpack:////drone/src/packages/icons/src/dist-icons/PlusIcon.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderItem/OrderItem.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderItem/OrderItem.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderItem/OrderItemsList.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Steps/StepsFooter.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Steps/StepsFooter.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Steps/AdjustingStep.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/captureSubmitError.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/useOrderSubmit.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Steps/ShippingAddressStep.js","webpack:////drone/src/packages/icons/src/dist-icons/CheckCircleIcon.js","webpack:////drone/src/packages/icons/src/dist-icons/CircleIcon.js","webpack:////drone/src/packages/ui/src/components/CheckableItem/CheckableItem.scss","webpack:////drone/src/packages/ui/src/components/CheckableItem/CheckableItem.js","webpack:////drone/src/packages/ui/src/components/Inputs/ListInput/styles.scss","webpack:////drone/src/packages/ui/src/components/Inputs/ListInput/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Steps/PaymentStep.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Steps/PaymentStep.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/Steps/ContactInfoStep.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/OrderPage.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/OrderPage/OrderPage.js","webpack:////drone/src/packages/userpage-core/src/landings/Order/PaymentStatusPage.scss","webpack:////drone/src/packages/userpage-core/src/landings/Order/PaymentStatusPage.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PassthroughRoute.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/PageProductsRouting.js","webpack:////drone/src/packages/ui/src/components/Swiper/Swiper.scss","webpack:////drone/src/packages/ui/src/components/Swiper/Swiper.js"],"names":["useContrastingPageColor","theme","colors","backgroundImage","backgroundImageOpacity","style","backgroundColor","usePageTheme","isLightBG","isLightColor","isLightContrasting","buttonBackground","hasImage","TinyColor","equals","background","color","useBasePageColor","percent","arguments","length","undefined","backgroundDimmed","darken","lighten","toHexString","CURRENCY_SYMBOL","Map","resolveFormatter","memoize","locale","currency","has","get","Intl","NumberFormat","currencyDisplay","minimumFractionDigits","useGrouping","l","c","formatPrice","amount","format","url","options","lead","end","charAt","slice","mapDynamicFieldToName","_ref","index","_id","defaults","baseUrl","BaseApi","constructor","this","endpoint","request","post","body","method","put","delete","Array","isArray","params","obj","arr","prop","val","push","join","urlSearch","startsWith","isAbsolute","headers","rest","response","fetch","includes","toUpperCase","Accept","JSON","stringify","ok","status","errors","json","error","Error","type","ValidationError","message","AuthorizationError","statusText","ApiError","FeedbackApi","submit","workspaceId","websiteId","payload","lastRequestId","defaultState","pending","fulfilled","rejected","result","initialState","requestId","requestCount","reducer","state","useFetching","fn","deps","ref","useRef","isMounted","useMountedState","dispatch","useReducer","current","run","useCallback","async","safeDispatch","useMemo","validationErrors","is","getValidationError","name","SubmitButton","as","Component","Button","isInitialHidden","onClick","submitForm","dirty","isSubmitting","useFormikContext","isHidden","handleClick","e","preventDefault","React","createElement","_extends","isFetching","disabled","Input","defaultProps","containerClassName","hasError","inputStyle","builderInput","autoFocus","isSelectAddon","renderAddon","node","className","isSelect","addon","renderNode","cloneElement","cls","classNames","props","styles","select","contextBlock","inputClassName","icon","Icon","size","beforeInput","afterInput","hexInput","hidden","maxLength","value","refInput","clearable","isFilled","handleClear","_rest$onChange","onChange","call","target","_beforeInput","_afterInput","_rootClassName","root","before","after","_inputClassName","input","paddingRight","small","sizeNormal","valueLength","String","trim","useMount","setTimeout","_ref$current","focus","inputWrapper","composeRefs","counter","clearAddon","hasRightAddon","FiX","marginBottom","Textarea","_className","_value","container","TextareaAutosize","minRows","maxRows","FormRow","align","children","Tag","Label","FormErrors","critical","shake","errorStyle","map","msg","key","labelStyle","paddingLeft","FormField","component","id","label","required","labelClassName","shakeError","wrapAs","htmlFor","useModalThemes","kind","ProductsBlockKind","baseTheme","useTheme","useElementTheme","elementPath","toLowerCase","compile","modalStyle","contentStyle","useCustomInputTheme","customTheme","inputBackgroundColor","inputTextColor","border","borderRadius","padding","display","useInputTheme","SubscriptionFormBlockKind","TextField","defaultStyle","customStyle","field","meta","useField","touched","__t","handleEnterKey","DynamicFormInput","defaultMaxSize","isTextField","onKeyPress","inputTypes","email","phone","text","DynamicFormInputs","_ref2","block","gridMode","items","item","wrap","getBrightness","TinyColor2","factor1","factor2","Math","abs","setAlpha","toRgbString","ThemedButton","contour","baseStyle","contentAlignLeft","getContourColor","buttonTextColor","keyHash","tag","loaderColor","usePresenceRemoval","isPresent","safeToRemove","usePresence","useEffect","noop","stopPropagation","animateValue","from","to","transition","startAnimation","stop","ThemedModal","handleHash","compact","overlay","fullWidth","showHeader","title","onClose","onClosing","history","useHistory","y","useMotionValue","close","targetNode","document","querySelector","isClosing","setClosing","useState","handleClose","_len","args","_key","replace","location","pathname","duration","onComplete","goBack","ReactDom","createPortal","motion","div","initial","opacity","animate","exit","ease","cn","pointerEvents","SubscriptionFormContent","onSubmit","rawSubmit","interactive","sent","setSent","validationSchema","object","reduce","acc","validator","string","max","matches","excludeEmptyString","mapDynamicInputsToValidationSchema","FormTag","loading","useAsyncFn","values","pairs","_values$item$_id","filter","Object","entries","_ref3","formik","initialValues","errorsPrefix","resetOnSuccess","autoSubmit","autoSubmitDebounce","warnings","setWarnings","useFormik","shouldAutoSubmit","setSubmitting","setStatus","resetForm","setErrors","useUpdateEffect","debouncedSubmit","debounce","useEnhancedFormik","handleSentModalClosed","hasUrl","sentUrl","timer","window","clearTimeout","useDeepCompareEffect","FormikProvider","buttonContainer","sendLabel","AnimatePresence","successContent","closeIcon","FiCheck","sentText","SubscriptionForm","_ref4","useBlockTheme","website","useWebsiteData","combined","handleSubmit","feedbackApi","workspace","blockId","data","submitEvent","CustomEvent","detail","dispatchEvent","BlockBase","POINTS","Spinner","borderWidth","normalized","normalizeSize","width","height","round","animationDuration","WebkitAnimationDuration","MozAnimationDuration","spinner","def","str","withPoints","find","points","indexOf","MoreButton","ImageIcon","svgRef","IconBase","fill","viewBox","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","Thumbnail","LazyImage","mode","src","alt","isIntersecting","isIntersect","setIsIntersecting","setIsIntersect","observer","IntersectionObserver","entry","rootBounds","rootMargin","threshold","element","observe","unobserve","useIntersect","isLoaded","onLoad","onError","setState","useLoadImage","img","visible","ServicesGridItem","themeStyles","getMediaSizeUrl","useUploads","photoUrl","MediaSizes","Half","thumbnail","emptyPlaceholder","IoMdImage","price","formattedDiscount","discount","discountPrice","lineThrough","formatted","ServicePhoto","forwardRef","slide","slideImage","Large","zoomIcon","common","FiZoomIn","imagePreloader","LoadingIndicator","lazy","loadPrevNext","preloaderClass","loadedClass","loaded","ServicePhotos","photos","isActive","isPrev","isNext","navigationPrevRef","navigationNextRef","paginationElRef","shouldSwiperLoad","setShouldSwiperLoad","swiper","setSwiper","isLightbox","setIsLightbox","currentLightBoxSlideIndex","setCurrentLightBoxSlideIndex","hasMultiplePhotos","hasNavElements","showSwiper","isSwipeable","openLightBox","closeLightBox","handleSlide","pagination","el","clickable","renderBullet","dot","clickableClass","clickablePagination","bulletActiveClass","activeBullet","handleLoad","updateAutoHeight","swiperContainer","Swiper","nested","autoHeight","navigation","prevEl","nextEl","speed","watchOverflow","loop","onSwiper","preloader","controlsContainer","controls","noSwiping","control","FiChevronLeft","FiChevronRight","closeButtonWrapper","closeButton","Suspense","fallback","LightBox","activeIndex","images","joinPath","a","b","removeTrailingSlash","CoreContext","createContext","path","router","isBackOverriddenBack","base","toEntry","toHome","product","toView","productSlug","collection","orders","orderId","basePath","toStatus","userOrders","toOrder","makeCoreRouter","setEntry","useCoreContext","useContext","BuyButton","service","onCartAdd","productCurrency","api","useFrontAPI","generateUrl","useNavigationUtils","currentOrder","saveOrderId","useSavedOrders","pageId","usePageData","isInCart","productId","orderPath","isDifferentCurrency","_currentOrder$items$","_currentOrder$items$$","orderCurrency","restrictCurrenciesMessage","toggleRestrictCurrenciesMessage","useToggle","handleBuy","quantity","modify","create","Fragment","beforeIcon","ShoppingCartIcon","Link","slug","backPath","textAlign","ServiceActionsPane","contacts","enabledPayments","renderBlock","useRenderer","actionsBuy","ExternalUrlButton","_service$externalButt","_service$externalButt2","externalButton","externalUrl","parsed","URL","err","parseUrl","LinkBlank","href","data-id","data-title","data-element","data-event-name","urlSafeComponent","buttonContent","hostname","ServiceContent","description","backUrl","isCartAddAnimation","toggleCartAddAnimation","rootEl","serviceTitle","isDarkTheme","substring","contactsEl","_e$preventDefault","scrollTop","scrollTo","top","behavior","wrapper","active","content","dark","fixedPane","cartBouncer","bottom","stiffness","ShoppingCart","position","right","ServicesModal","services","page","hasMultipleServices","contactBlocks","enabled","blocks","handleSlideChange","realIndex","allowTouchMove","initialSlide","noSwipingClass","onInit","onSlideChange","assign","_ref5","ServicesGrid","sortable","delay","useLocation","hashId","hash","slideIndexFromHash","findIndex","hasSlideFromHash","Number","isInteger","setPage","isDelayed","setDelayed","isServicesModal","setIsServicesModal","currentServiceIndex","setCurrentServiceIndex","total","hasMore","ceil","sliced","handleLoadMore","old","openServicesModal","closingServicesModal","closeServicesModal","useTimeoutFn","servicesList","moreButtonContainer","ServicesGridBlockKind","SearchIcon","ProductItem","published","mediaUtils","generateProductThumbnailUrl","ProductsApi","list","load","loadBySlug","collectionId","handleError","console","Sentry","captureException","MEDIA_BREAKPOINTS","minWidth","useIsDesktop","useMediaQuery","ButtonsMenu","activeCollectionId","onSelect","hasLeftBtn","moveLeft","hasRightBtn","moveRight","moveTo","isDesktop","setIndex","useMeasure","x","listScrollX","useScroll","listScrollWidth","scrollWidth","hasScroll","targetIndex","parentWidth","parentElement","clientWidth","nodes","querySelectorAll","scrollPosition","i","scrollLeft","currentIndex","useHorizontalTabbedScroll","themeStyle","button","productsCategoryTextColor","buttonActive","arrowButton","arrowBg","isTabbed","filterMode","ItemTag","_e$target$dataset","_items$index","dataset","col","data-index","data-slug","default","ChevronDownIcon","PureButton","startIcon","endIcon","getProps","out","role","tabIndex","TextButton","DURATION_MAP","fast","normal","slow","createTransition","displayName","Transition","in","inProp","appear","innerRest","timeout","transitionDuration","CSSTransition","unmountOnExit","FilterMenuItem","publishedProductsCount","FilterMenu","isOpen","toggle","selected","isMatchId","useClickAway","handleSelect","aria-pressed","Fade","CollectionsBar","Item","baseProductUrl","fromCollection","Products","_showCollections$","isMobileMode","collectionIds","activeCollections","collections","showCollections","Boolean","setActiveCollectionId","pick","query","limit","isMobile","include","hasNext","getProducts","store","setStore","next","publishedCount","results","productsStore","productsApi","resetStore","prevProducts","concat","useDebounce","catch","useProductsApi","handleMore","getFromCollection","keys","cols","_showCollections$2","firstId","Grid","itemClassName","Children","CollectionView","setProducts","initProducts","useCRMData","crm","WebsiteDataContext","merge","cloneDeep","CRM_IDENTITY","addUrl","finalUrl","encodeURIComponent","Date","now","documentElement","lang","start","messenger","ProductView","_history$location$sta","defaultCollectionId","getProduct","messengers","MessengersBlockKind","is404","UserOrdersPage","finalizedOrders","order","finalized","feedback","features","provider","paymentMethod","orderStatus","timestamp","toLocaleDateString","shouldRenderPaymentStatus","immediateCompletion","handlesPaymentsStatus","usePaymentConfigs","payments","providers","config","immediate","online","isSingular","isSingularOnline","PAYMENT_PROVIDERS","stripe","FaStripe","liqpay","FiChevronsRight","paypal","FaPaypal","supported_currencies","wayforpay","MdPayment","robokassa","PayButton","_PAYMENT_PROVIDERS$pr","_PAYMENT_PROVIDERS$pr2","CARD_OPTIONS","hidePostalCode","iconStyle","classes","webkitAutofill","StripeCheckoutForm","rawDisabled","onPay","useStripe","elements","useElements","inputStyles","succeeded","setSucceeded","processing","setProcessing","setDisabled","setError","iconColor","overflow","clientSecret","useAsync","signatures","createStripePaymentIntent","isDisabled","confirmCardPayment","payment_method","card","getElement","CardElement","handleChange","empty","marginTop","merchantDomainName","orderPaymentTimeout","WayforpayButton","merchantAccount","orderReference","orderDate","products","returnUrl","serviceUrl","createSignature","productName","productPrice","productCount","count","merchantSignature","setMerchantSignature","action","extractProduct","RobokassaButton","merchantLogin","invId","outSum","outSumCurrency","isTest","signature","setSignature","LiqpayButton","publicKey","resultUrl","serverUrl","public_key","version","order_id","encode","FiTruck","FaMoneyBillAlt","PAYMENT_PROVIDER_RENDERERS","cod","handleOrder","isModal","toggleModal","stripePromise","loadStripe","Elements","contactInfo","firstName","lastName","isSupportedCurrency","createOrder","actions","purchase_units","currency_code","breakdown","item_total","payer","given_name","surname","unit_amount","onApprove","details","capture","PayPalScriptProvider","clientId","PayPalButtons","layout","tagline","floor","random","createWayforpaySignature","BACKEND_ENDPOINTS","getWayforpayCallback","test","createRobokassaSignature","successUrl","getLiqPayCallback","createLiqpaySignature","other","handleModal","instructions","whiteSpace","UserOrderPage","setOrder","orderLoadCount","setOrderLoadCount","isPayNowModal","togglePayNowModal","isShowingCancelPrompt","showCancelPrompt","hideCancelPrompt","useBooleanHandler","orderLoading","loadedOrder","show","complete","mapper","finalizeLoading","handlePay","finalize","cancelLoading","handleCancelOrder","cancel","isJustOneOnlinePaymentMethod","onlineElements","Renderer","NotFoundError","phoneNumber","shippingAddress","city","address","postalCode","comment","ShoppingBagIcon","MapPinIcon","CreditCardIcon","usePageColors","StepContext","getPrevStep","first","getNextStep","last","min","useStep","currentStep","setCurrentStep","steps","lastStep","isFirstStep","isLastStep","nextStep","previousStep","gotoStep","step","_steps","isDone","gotoNextStep","gotoPreviousStep","getStepName","firstStep","StepIcon","number","isCurrent","stepCurrent","StepSwitch","setSteps","toArray","child","divider","borderColor","Provider","Step","printPrice","navigator","language","Row","getIdsByKind","Divider","borderTop","IconButton","CloseIcon","MinusIcon","PlusIcon","OrderItem","onAdjust","rawColor","isEditable","isMultiEditable","handleAdjust","delta","handleAdd","handleSubtract","handleRemove","Infinity","knob","row","quantityText","margin","fontWeight","subtotal","subTotal","OrderItemsList","useOrderProducts","retrieveFn","resolved","setResolved","pages","productIds","serviceIds","Promise","all","warn","missing","Set","StepsFooter","prev","isFetchingPrev","handlePrev","isFetchingNext","handleNext","AdjustingStep","useMatchUrl","removeOrderId","handleModifyItems","Redirect","captureSubmitError","helpers","fieldName","setFieldError","useOrderSubmit","update","INITIAL_SHIPPING_ADDRESS","ShippingAddressStep","_form$optional","_form$optional2","_form$optional3","form","doSubmit","requestCity","optional","requestState","requestPostalCode","Formik","Form","placeholder","CheckCircleIcon","CircleIcon","CheckableItem","contentClass","ListInput","groups","multiple","grid","choiceClassName","activeClassName","groupLabelClassName","fullWidthClassName","renderOption","isSelected","add","grouped","group","set","option","sort","indexA","renderOptions","checkMark","choice","rounded","bind","groupLabel","OptionValuePropType","PropTypes","oneOfType","bool","any","arrayOf","isRequired","onChoiceRef","PaymentStep","_immediate$","removeCurrentOrderId","hasOnlineMethods","hasImmediateMethods","isJustOneOnlinePaymentMethods","setSelected","optionStyles","found","INITIAL_CONTACT_INFO","ContactInfoStep","noLastName","OrderPage","_location$state","MdContactPhone","collectAddress","PaymentStatusPage","useViewOrder","resolvedStatus","_form$successURL","FaRegFrown","FaRegSmileBeam","successMessage","successURL","PassthroughRoute","exact","makeProps","p","render","match","Route","PageProductsRouting","contexts","collectionSlug","flex","perView","forcePerView","slideClass","slideStyle","array","exceedsPerView","showPagination","hasPagination","slidesPerView","paginationOptions","BaseSwiper","resizeObserver","spaceBetween","SwiperSlide","SwiperCore","use","Pagination","Lazy","Navigation","Autoplay","EffectFade","EffectFlip"],"mappings":"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","file":"6.1597bb06ddae7ff1a940.js","sourcesContent":["import TinyColor from 'tinycolor2';\nimport { isLightColor } from '@mssgme/helpers';\n\nimport { usePageTheme } from './useWebsiteTheme';\n\nexport const useContrastingPageColor = () => {\n    const {\n        theme: { colors, backgroundImage, backgroundImageOpacity },\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const isLightBG = isLightColor(backgroundColor);\n    const isLightContrasting = isLightColor(colors.buttonBackground);\n    const isBgUntouched = TinyColor.equals(backgroundColor, colors.background);\n    const hasImage = !!backgroundImage && backgroundImageOpacity > 0;\n\n    if (isBgUntouched && !(isLightBG && isLightContrasting)) {\n        return {\n            color: colors.buttonBackground,\n            hasImage,\n            backgroundColor,\n        };\n    }\n\n    return {\n        color: isLightBG ? '#333' : '#eee',\n        hasImage,\n        backgroundColor,\n    };\n};\nexport const useDimmedPageColor = (percent = 10) => {\n    const {\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const color = new TinyColor(backgroundColor);\n    const isLightBG = isLightColor(color);\n\n    return (isLightBG ? color.darken(percent) : color.lighten(percent)).toHexString();\n};\nexport const useBasePageColor = (percent = 10) => {\n    const {\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const color = new TinyColor(backgroundColor);\n    const isLightBG = isLightColor(color);\n\n    return {\n        isLightBG,\n        backgroundColor,\n        backgroundDimmed: (isLightBG ? color.darken(percent) : color.lighten(percent)).toHexString(),\n    };\n};\n","import { memoize } from 'lodash';\n\nconst CURRENCY_SYMBOL = new Map([['USD', 'en-US'], ['EUR', 'de-DE']]);\n\nconst resolveFormatter = memoize(\n    (locale, currency) => {\n        if (CURRENCY_SYMBOL.has(currency)) {\n            locale = CURRENCY_SYMBOL.get(currency);\n        }\n\n        return new Intl.NumberFormat(locale, {\n            style: 'currency',\n            currency: currency,\n            currencyDisplay: CURRENCY_SYMBOL.has(currency) ? 'symbol' : 'code',\n            minimumFractionDigits: 0,\n            useGrouping: false,\n        });\n    },\n    (l, c) => `${l}${c}`\n);\n\nconst formatPrice = (amount, currency, locale) => {\n    return resolveFormatter(locale, currency).format(amount);\n};\n\nexport default formatPrice;\n","/**\n * @param {string} url\n * @param {object} options\n * @param {boolean} [options.lead=false]\n * @param {boolean} [options.end=true]\n */\nexport default (url, options) => {\n    options = {\n        lead: false,\n        end: true,\n        ...options,\n    };\n\n    if (url.length === 0) return url;\n    if (options.lead && url.charAt(0) === '/') url = url.slice(1);\n    if (options.end && url.charAt(url.length - 1) === '/') url = url.slice(0, -1);\n\n    return url;\n};\n","import { object, string } from 'yup';\n\nimport { __t } from '../trans';\n\nexport const defaultDynamicFieldLengthLimit = 250;\nexport const mapDynamicFieldToName = ({ _id }, index) => _id || `field-${index}`;\nexport const mapDynamicInputsToValidationSchema = ({ items }) =>\n    object({\n        ...items.reduce((acc, item, index) => {\n            const field = mapDynamicFieldToName(item, index);\n            let validator = string()\n                .trim()\n                .max(item.size || defaultDynamicFieldLengthLimit, __t('field_too_long'));\n\n            if (item.required) {\n                validator = validator.required(__t('field_required'));\n            }\n\n            switch (item.type) {\n                case 'email': {\n                    validator = validator.email(__t('field_email'));\n\n                    break;\n                }\n                case 'phone': {\n                    validator = validator.matches(/\\+?[\\d\\-\\s()]{5,}/, {\n                        name: 'phone',\n                        message: __t('field_phone'),\n                        excludeEmptyString: true,\n                    });\n\n                    break;\n                }\n            }\n\n            acc[field] = validator;\n\n            return acc;\n        }, {}),\n    });\n","const defaults = {\n    baseUrl: '/api',\n};\n\n// const meta = document.querySelector('meta[name=\"csrf-token\"]');\n// const csrfToken = meta ? meta.content : undefined;\n\nconst ApiError = (status, statusText) => {\n    const error = Error(statusText);\n    error.status = status;\n    error.type = 'api';\n    return error;\n};\n\nfunction urlSearch(obj) {\n    if (typeof obj !== 'object') return '';\n    const arr = [];\n\n    for (let prop in obj) {\n        const val = obj[prop];\n        if (val !== null && val !== undefined) arr.push(`${prop}=${val}`);\n    }\n\n    return arr.length > 0 ? '?' + arr.join('&') : '';\n}\n\nconst ValidationError = (errors) => {\n    const error = new Error('Validation error');\n    error.type = 'validation';\n    error.errors = errors;\n    return error;\n};\n\nconst AuthorizationError = (message) => {\n    const error = new Error(message);\n    error.type = 'authorization';\n    return error;\n};\n\nfunction isAbsolute(endpoint) {\n    return endpoint.startsWith('http://') || endpoint.startsWith('https://');\n}\n\nexport class BaseApi {\n    constructor(options) {\n        this.options = { ...defaults, ...options };\n    }\n\n    get(endpoint) {\n        return this.request(endpoint);\n    }\n\n    post(endpoint, body) {\n        return this.request(endpoint, { method: 'POST', body });\n    }\n\n    put(endpoint, body) {\n        return this.request(endpoint, { method: 'PUT', body });\n    }\n\n    delete(endpoint) {\n        return this.request(endpoint, { method: 'DELETE' });\n    }\n\n    async request(endpoint, options) {\n        if (Array.isArray(endpoint)) {\n            let params;\n            [endpoint, params] = endpoint;\n            endpoint = endpoint + urlSearch(params);\n        }\n\n        if (!isAbsolute(endpoint)) endpoint = this.options.baseUrl + endpoint;\n\n        const { method, headers, body, ...rest } = { method: 'GET', ...options };\n\n        const response = await fetch(endpoint, {\n            method: ['PUT', 'DELETE'].includes(method.toUpperCase()) ? 'POST' : method,\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'X-HTTP-Method-Override': method.toUpperCase(),\n                // 'X-CSRF-Token': csrfToken,\n                ...headers,\n            },\n            body: body ? JSON.stringify(body) : undefined,\n            ...rest,\n        });\n\n        if (!response.ok) {\n            switch (response.status) {\n                case 400: {\n                    const { errors } = await response.json();\n                    throw ValidationError(errors);\n                }\n                case 401:\n                case 403:\n                    throw AuthorizationError(response.statusText);\n                default:\n                    throw ApiError(response.status, response.statusText);\n            }\n        }\n\n        if (response.status !== 204) {\n            return response.json();\n        }\n    }\n}\n\nexport default (options) => new BaseApi(options);\n","import { BaseApi } from './baseApi';\n\nexport class FeedbackApi extends BaseApi {\n    submit(workspaceId, websiteId, payload) {\n        return this.post(`/workspaces/${workspaceId}/websites/${websiteId}/feedback`, payload);\n    }\n}\n\nexport default ((options) => new FeedbackApi(options))();\n","import { useCallback, useMemo, useReducer, useRef } from 'react';\nimport { useMountedState } from 'react-use';\nimport { get } from 'lodash';\n\nimport { ValidationError } from '@mssgme/api-client';\n\nlet lastRequestId = 0;\n\nconst defaultState = {\n    pending: false,\n    fulfilled: false,\n    rejected: false,\n    error: null,\n    result: null,\n};\n\nconst initialState = {\n    ...defaultState,\n    requestId: -1,\n    requestCount: 0,\n};\n\nfunction reducer(state, { type, requestId, ...rest }) {\n    if (state.requestId > requestId) {\n        return state;\n    }\n\n    switch (type) {\n        case 'pending':\n            return { ...state, ...defaultState, requestId, pending: true, requestCount: state.requestCount + 1 };\n        case 'fulfilled':\n            return { ...state, ...defaultState, requestId, fulfilled: true, result: rest.result };\n        case 'rejected':\n            return { ...state, ...defaultState, requestId, rejected: true, error: rest.error };\n        default:\n            throw new Error();\n    }\n}\n\n/**\n * @template {*} R\n * @template {function(): Promise<R>} T\n * @param {T} fn Traced callback\n * @param {*[]} deps Callback dependencies\n * @returns {{\n *  pending: true,\n *  run: T\n * } | {\n *  fulfilled: true,\n *  result: R,\n *  run: T\n * } | {\n *  rejected: true,\n *  error: Error,\n *  validationErrors: *,\n *  getValidationError: function(string): *,\n *  run: T\n * }} Fetcher descriptor\n */\nexport function useFetching(fn, deps = []) {\n    const ref = useRef(fn);\n    const isMounted = useMountedState();\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    ref.current = fn;\n\n    const run = useCallback(async (...args) => {\n        function safeDispatch(...args) {\n            if (isMounted()) {\n                dispatch(...args);\n            }\n        }\n\n        const requestId = lastRequestId++;\n\n        safeDispatch({ type: 'pending', requestId });\n\n        try {\n            const result = await ref.current(...args);\n            safeDispatch({ type: 'fulfilled', requestId, result });\n        } catch (error) {\n            safeDispatch({ type: 'rejected', requestId, error });\n        }\n    }, deps);\n\n    return useMemo(() => {\n        const validationErrors = ValidationError.is(state.error) ? state.error.errors : {};\n        const getValidationError = (name) => get(validationErrors, name);\n\n        return {\n            ...state,\n            validationErrors,\n            getValidationError,\n            run,\n        };\n    }, [state, run]);\n}\n","import React, { useCallback } from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from '../Inputs';\nimport { SubmitButtonProps } from './types';\n\nexport default function SubmitButton({\n    as: Component = Button,\n    isInitialHidden = false,\n    onClick = undefined,\n    ...rest\n}) {\n    const { submitForm, dirty, isSubmitting } = useFormikContext();\n    const isHidden = !dirty && isInitialHidden;\n\n    const handleClick = useCallback((e) => {\n        e.preventDefault();\n        submitForm();\n    });\n\n    if (isHidden) return null;\n\n    return <Component isFetching={isSubmitting} disabled={!dirty} onClick={onClick || handleClick} {...rest} />;\n}\n\nSubmitButton.propTypes = SubmitButtonProps;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2B3ofJ5E\",\"counter\":\"_3-b9pfi-\",\"input\":\"_2DRCzfDh\",\"inlineEdit\":\"YPgCGw-v\",\"error\":\"_1_PCEXDn\",\"sizeNormal\":\"DzCEGuof\",\"small\":\"hVVuxPYt\",\"grey\":\"_2AB3cyPB\",\"disabled\":\"jZa3dVTS\",\"select\":\"_3ZdF5RHe\",\"input-wrapper\":\"_1GswEJx-\",\"inputWrapper\":\"_1GswEJx-\",\"builderInput\":\"_2jRUtpby\",\"hexInput\":\"_28ye7akn\",\"contextBlock\":\"_28j5RRRN\",\"clearAddon\":\"_26G-OSX_\",\"icon\":\"_1AAPpJVf\",\"root_grey\":\"rf7_RATV\",\"rootGrey\":\"rf7_RATV\",\"before\":\"_25tSvmqV\",\"after\":\"_3GByWsk_\",\"hasRightAddon\":\"_13_oLbQh\",\"hidden\":\"_2zAg-NV4\",\"padding-right\":\"_3o8wApXg\",\"paddingRight\":\"_3o8wApXg\",\"clearable\":\"_1NP8_n7i\"};","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport composeRefs from '@seznam/compose-react-refs';\nimport React, { useCallback, useRef } from 'react';\nimport { useMount } from 'react-use';\nimport { FiX } from 'react-icons/fi';\n\nimport { cls } from '@mssgme/helpers';\nimport { renderNode } from '../../../helpers';\n\nimport styles from './styles.scss';\n\nInput.propTypes = {\n    containerClassName: PropTypes.string,\n    inputClassName: PropTypes.string,\n    className: PropTypes.string,\n    hasError: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    refInput: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    icon: PropTypes.func,\n    beforeInput: PropTypes.any,\n    afterInput: PropTypes.any,\n    maxLength: PropTypes.number,\n    type: PropTypes.oneOf(['text', 'email', 'search', 'number', 'password', 'tel', 'datetime-local', 'hidden']),\n    size: PropTypes.oneOf(['small', 'normal']),\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    inputStyle: PropTypes.oneOf(['default', 'grey']),\n    isSelectAddon: PropTypes.bool,\n    clearable: PropTypes.bool,\n    hexInput: PropTypes.bool,\n    hidden: PropTypes.bool,\n    builderInput: PropTypes.bool,\n};\n\nInput.defaultProps = {\n    containerClassName: '',\n    hasError: false,\n    disabled: false,\n    type: 'text',\n    inputStyle: 'default',\n    builderInput: false,\n    autoFocus: false,\n    isSelectAddon: true,\n};\n\nconst renderAddon = (node, className, isSelect) => {\n    let addon = renderNode(node);\n\n    if (addon) {\n        if (typeof addon === 'string' || !isSelect) {\n            addon = <div className={classNames(styles.contextBlock, className)}>{addon}</div>;\n        } else if (isSelect) {\n            addon = React.cloneElement(addon, cls(classNames(addon.props.className, styles.select), addon.props));\n        }\n    }\n\n    return addon;\n};\n\nexport default function Input({\n    className,\n    containerClassName,\n    inputClassName,\n    hasError,\n    icon: Icon,\n    size,\n    beforeInput,\n    afterInput,\n    hexInput,\n    hidden,\n    maxLength,\n    value,\n    disabled,\n    refInput,\n    inputStyle,\n    builderInput,\n    autoFocus,\n    isSelectAddon,\n    clearable,\n    ...rest\n}) {\n    const isFilled = clearable && !!value;\n    const handleClear = useCallback(() => rest.onChange?.({ target: { name: rest.name, value: '' } }), [\n        rest.name,\n        rest.onChange,\n    ]);\n\n    const _beforeInput = renderAddon(beforeInput, className, isSelectAddon);\n    const _afterInput = renderAddon(afterInput, className, isSelectAddon);\n\n    const _rootClassName = classNames(\n        styles.root,\n        {\n            [styles.icon]: Icon,\n            [styles.before]: _beforeInput,\n            [styles.after]: _afterInput,\n            [styles.hidden]: hidden,\n            [styles.hexInput]: hexInput,\n            [styles.disabled]: disabled,\n            [styles.builderInput]: builderInput,\n            [styles.clearable]: isFilled,\n        },\n        inputStyle && styles[`root_${inputStyle}`],\n        containerClassName\n    );\n    const _inputClassName = classNames(\n        className,\n        styles.input,\n        {\n            [styles.error]: hasError,\n            [styles.paddingRight]: maxLength,\n            [styles.small]: size === 'small',\n            [styles.sizeNormal]: size === 'normal',\n        },\n        inputStyle && styles[inputStyle],\n        inputClassName\n    );\n    const valueLength = value ? String(value).trim().length : 0;\n    const ref = useRef();\n\n    useMount(() => {\n        if (autoFocus) {\n            setTimeout(() => ref.current?.focus(), 100);\n        }\n    });\n\n    return (\n        <div className={_rootClassName}>\n            {Icon && <Icon size={25} color=\"#C7C7CC\" />}\n            {_beforeInput}\n            <div className={styles.inputWrapper}>\n                <input\n                    ref={composeRefs(ref, refInput)}\n                    className={_inputClassName}\n                    value={value}\n                    maxLength={maxLength}\n                    disabled={disabled}\n                    {...rest}\n                />\n                {maxLength && <span className={styles.counter}>{maxLength - valueLength}</span>}\n                {isFilled && (\n                    <div\n                        className={classNames(styles.clearAddon, !_afterInput && styles.hasRightAddon)}\n                        onClick={handleClear}\n                    >\n                        <FiX size={14} style={{ marginBottom: -1 }} />\n                    </div>\n                )}\n            </div>\n            {_afterInput}\n        </div>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"j05O8Kqk\",\"root\":\"_1T-3Pm-I\",\"counter\":\"_3JWkk3hT\",\"error\":\"_1v3R6Nod\",\"padding-right\":\"KVOrN3Dt\",\"paddingRight\":\"KVOrN3Dt\",\"builderInput\":\"_1lP6I7Pv\",\"normal\":\"iJibajlA\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport styles from './styles.scss';\n\nexport default function Textarea({ className, hasError, maxLength, value, size, builderInput, ...rest }) {\n    const _className = classNames(styles.root, className, {\n        [styles.error]: hasError,\n        [styles.paddingRight]: maxLength,\n        [styles[size]]: !!size,\n        [styles.builderInput]: builderInput,\n    });\n    const _value = value || '';\n\n    return (\n        <div className={styles.container}>\n            <TextareaAutosize value={_value} className={_className} maxLength={maxLength} {...rest} />\n            {maxLength && <span className={styles.counter}>{maxLength - _value.trim().length}</span>}\n        </div>\n    );\n}\n\nTextarea.propTypes = {\n    className: PropTypes.string,\n    hasError: PropTypes.bool,\n    maxLength: PropTypes.number,\n    minRows: PropTypes.number,\n    maxRows: PropTypes.number,\n    size: PropTypes.oneOf(['normal']),\n    value: PropTypes.string,\n    builderInput: PropTypes.bool,\n};\n\nTextarea.defaultProps = {\n    minRows: 2,\n    maxRows: 5,\n    builderInput: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JbT8d0t8\",\"right\":\"_3fbTNNoe\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './styles.scss';\n\nconst FormRow = ({ className, hasError, align, children, as: Tag = 'div', ...rest }) => (\n    <Tag className={classNames(className, styles.root, { [styles.right]: align === 'right' })} {...rest}>\n        {children}\n    </Tag>\n);\n\nFormRow.propTypes = {\n    className: PropTypes.string,\n    hasError: PropTypes.bool,\n    children: PropTypes.any,\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType, PropTypes.func]),\n    align: PropTypes.oneOf(['left', 'right']),\n};\n\nFormRow.defaultProps = {\n    hasError: false,\n};\n\nexport default FormRow;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3bntFHH4\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './styles.scss';\n\nconst Label = ({ className, hasError, children, ...rest }) => (\n    <label className={classNames(styles.root, className)} {...rest}>\n        {children}\n    </label>\n);\n\nLabel.propTypes = {\n    className: PropTypes.string,\n    hasError: PropTypes.bool,\n    children: PropTypes.any,\n};\n\nLabel.defaultProps = {\n    hasError: false,\n};\n\nexport default Label;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_1cnTjnAM\",\"nonCritical\":\"_3hRipkpF\",\"shake\":\"_3QPDy911\",\"animated\":\"_2GF_HvGn\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './styles.scss';\n\nFormErrors.propTypes = {\n    error: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n    critical: PropTypes.bool,\n    shake: PropTypes.bool,\n    errorStyle: PropTypes.object,\n};\n\nexport default function FormErrors({ error, critical = true, shake, errorStyle }) {\n    if (!error) return null;\n\n    const errors = Array.isArray(error) ? error : [error];\n\n    return (\n        <ul\n            className={classNames(styles.root, {\n                [styles.nonCritical]: !critical,\n                [styles.shake]: shake,\n                [styles.animated]: shake,\n            })}\n            style={errorStyle}\n        >\n            {errors.map((msg, index) => (\n                <li key={index}>{msg}</li>\n            ))}\n        </ul>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label-container\":\"_3JlfBHF5\",\"labelContainer\":\"_3JlfBHF5\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from '../Inputs';\nimport FormRow from '../FormRow';\nimport Label from '../Label';\nimport FormErrors from '../FormErrors';\n\nimport styles from './styles.scss';\n\nconst labelStyle = { paddingLeft: 10, color: '#333', marginBottom: 4 };\nexport default function FormField({\n    component: Component = Input,\n    id,\n    label,\n    required,\n    labelClassName,\n    inputClassName,\n    errorStyle,\n    shakeError,\n    errors,\n    wrapAs,\n    children,\n    ...rest\n}) {\n    return (\n        <FormRow as={wrapAs}>\n            {label && (\n                <div className={styles.labelContainer}>\n                    <Label\n                        style={rest.builderInput ? labelStyle : null}\n                        htmlFor={id}\n                        hasError={!!errors}\n                        className={labelClassName}\n                    >\n                        {label} {required && <span>*</span>}\n                    </Label>\n                </div>\n            )}\n            <Component id={id} className={inputClassName} hasError={!!errors} {...rest} />\n            {children}\n            {errors && <FormErrors error={errors} errorStyle={errorStyle} shake={shakeError} />}\n        </FormRow>\n    );\n}\n\nFormField.propTypes = {\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n    wrapAs: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType, PropTypes.func]),\n    label: PropTypes.string,\n    id: PropTypes.string,\n    labelClassName: PropTypes.string,\n    inputClassName: PropTypes.string,\n    errorStyle: PropTypes.object,\n    children: PropTypes.node,\n    placeholder: PropTypes.string,\n    required: PropTypes.bool,\n    shakeError: PropTypes.bool,\n    errors: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.array]),\n};\n","import { useMemo } from 'react';\n\nimport { ProductsBlockKind } from '@mssgme/shared';\nimport { useElementTheme, useTheme } from '@mssgme/ui';\n\nexport const useModalThemes = (kind = ProductsBlockKind) => {\n    const baseTheme = useTheme();\n    const { theme, style } = useElementTheme({ baseTheme, elementPath: `blocks.${kind.toLowerCase()}`, compile: true });\n\n    return useMemo(\n        () => ({\n            theme,\n            style,\n            // todo: find out why this is needed (`colors.background` vs `page.backgroundColor`)\n            modalStyle: { ...style, backgroundColor: baseTheme.colors.background },\n            contentStyle: { ...theme, ...style, backgroundColor: baseTheme.colors.background },\n        }),\n        [theme, style]\n    );\n};\n","import { useMemo } from 'react';\n\nexport const useCustomInputTheme = (customTheme) => {\n    return useMemo(\n        () =>\n            customTheme && {\n                input: {\n                    backgroundColor: customTheme.inputBackgroundColor,\n                    color: customTheme.inputTextColor,\n                    border: 'none',\n                    borderRadius: customTheme.borderRadius,\n                },\n                error: {\n                    color: customTheme.inputTextColor,\n                    padding: '2px 8px',\n                    backgroundColor: customTheme.inputBackgroundColor,\n                    display: 'inline-block',\n                    borderRadius: customTheme.borderRadius,\n                },\n            },\n        [customTheme]\n    );\n};\n","import { SubscriptionFormBlockKind } from '@mssgme/shared';\nimport { useModalThemes } from './useModalThemes';\nimport { useCustomInputTheme } from './useCustomInputTheme';\n\nexport const useInputTheme = () => {\n    const { theme } = useModalThemes(SubscriptionFormBlockKind);\n\n    return useCustomInputTheme(theme);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"_2Hf-7TD7\",\"label\":\"VD2M--7_\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\n\nimport { __t } from '@mssgme/shared';\nimport { FormField } from '@mssgme/ui';\nimport { useInputTheme, useCustomInputTheme } from '../../../hooks';\n\nimport styles from './TextField.scss';\n\nconst propTypes = {\n    ...FormField.propTypes,\n    theme: PropTypes.object,\n    name: PropTypes.string.isRequired,\n};\n\nexport function TextField({ theme, ...props }) {\n    const defaultStyle = useInputTheme(theme);\n    const customStyle = useCustomInputTheme(theme);\n    const [field, meta] = useField(props);\n    const style = customStyle || defaultStyle;\n\n    return (\n        <FormField\n            shakeError\n            type=\"text\"\n            errors={meta.touched && meta.error}\n            label={props.label ? null : __t(props.name)}\n            style={style.input}\n            errorStyle={style.error}\n            inputClassName={styles.input}\n            labelClassName={styles.label}\n            {...field}\n            {...props}\n        />\n    );\n}\n\nTextField.propTypes = propTypes;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qsFFCJh2\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { mapDynamicFieldToName } from '@mssgme/shared';\nimport { cls } from '@mssgme/helpers';\nimport { Input, Textarea } from '@mssgme/ui';\nimport { TextField } from '../Inputs';\n\nimport styles from './DynamicFormInputs.scss';\n\nconst handleEnterKey = (e) => {\n    if (e.key === 'Enter') {\n        e.preventDefault();\n    }\n};\n\nexport const DynamicFormInput = ({ index, input, as, type, defaultMaxSize, theme }) => {\n    const maxLength = input.size || defaultMaxSize;\n    const isTextField = maxLength <= 250;\n\n    return (\n        <TextField\n            name={mapDynamicFieldToName(input, index)}\n            label={input.label}\n            required={input.required}\n            maxLength={maxLength}\n            wrapAs={as}\n            component={isTextField ? Input : Textarea}\n            type={type || 'text'}\n            onKeyPress={isTextField ? handleEnterKey : undefined}\n            theme={theme}\n        />\n    );\n};\n\nDynamicFormInput.propTypes = {\n    input: PropTypes.shape({\n        _id: PropTypes.string,\n        label: PropTypes.string,\n        required: PropTypes.bool,\n        size: PropTypes.number,\n    }).isRequired,\n    index: PropTypes.number.isRequired,\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n    type: PropTypes.string,\n    defaultMaxSize: PropTypes.number.isRequired,\n    theme: PropTypes.object,\n};\n\nconst inputTypes = {\n    name: 'text',\n    email: 'email',\n    phone: 'tel',\n    text: 'text',\n};\n\nexport const DynamicFormInputs = ({ block, theme, defaultMaxSize, ...rest }) => {\n    return (\n        <ul {...cls([styles.root, styles[theme.gridMode]], rest)}>\n            {block.items.map((item, index) => (\n                <DynamicFormInput\n                    as=\"li\"\n                    key={item._id || index}\n                    index={index}\n                    input={item}\n                    type={inputTypes[item.type]}\n                    defaultMaxSize={defaultMaxSize}\n                    theme={theme}\n                />\n            ))}\n        </ul>\n    );\n};\n\nDynamicFormInputs.propTypes = {\n    block: PropTypes.shape({\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                _id: PropTypes.string,\n                label: PropTypes.string,\n                required: PropTypes.bool,\n                size: PropTypes.number,\n            })\n        ).isRequired,\n    }).isRequired,\n    theme: PropTypes.object.isRequired,\n    defaultMaxSize: PropTypes.number.isRequired,\n};\n","import TinyColor2 from 'tinycolor2';\n\nconst wrap = (color) => (color?.getBrightness ? color : new TinyColor2(color));\n\nexport default (backgroundColor, color, text) => {\n    const factor1 = wrap(backgroundColor).getBrightness();\n    const factor2 = wrap(color).getBrightness();\n\n    if (Math.abs(factor1 - factor2) < 30) {\n        return {\n            backgroundColor,\n            color: wrap(text)\n                .setAlpha(0.9)\n                .toRgbString(),\n            border: color,\n        };\n    }\n\n    return {\n        backgroundColor,\n        color,\n        border: color,\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3qe-gVKI\",\"contentAlignLeft\":\"_24kddiH0\"};","import PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport { cls, getContourColor, keyHash } from '@mssgme/helpers';\nimport { Button } from '@mssgme/ui';\n\nimport styles from './ThemedButton.scss';\n\nexport const ThemedButton = ({ theme, isFetching, disabled, contour, style: baseStyle, contentAlignLeft, ...rest }) => {\n    const style = useMemo(() => {\n        if (contour) {\n            const { backgroundColor, color, border } = getContourColor(\n                theme.backgroundColor,\n                theme.buttonBackground,\n                theme.buttonTextColor\n            );\n\n            return {\n                backgroundColor,\n                color,\n                border: `1px solid ${border}`,\n                ...baseStyle,\n            };\n        }\n\n        return {\n            backgroundColor: theme.buttonBackground,\n            color: theme.buttonTextColor,\n            ...baseStyle,\n        };\n    }, [contour, theme, keyHash(baseStyle)]);\n\n    return (\n        <Button\n            tag=\"a\"\n            size=\"standart\"\n            isFetching={isFetching}\n            disabled={disabled}\n            style={style}\n            loaderColor={style.color}\n            {...cls([styles.root, contentAlignLeft && styles.contentAlignLeft], rest)}\n        />\n    );\n};\n\nThemedButton.propTypes = {\n    ...Button.propTypes,\n    theme: PropTypes.object.isRequired,\n    contour: PropTypes.bool,\n    contentAlignLeft: PropTypes.bool,\n};\n","import { useEffect } from 'react';\nimport { usePresence } from 'framer-motion';\n\nexport const usePresenceRemoval = () => {\n    const [isPresent, safeToRemove] = usePresence();\n\n    useEffect(() => {\n        if (!isPresent) {\n            safeToRemove();\n        }\n    }, [isPresent]);\n\n    return isPresent;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"rootContainer\":\"_2ZWAllbS\",\"root\":\"_1JID85We\",\"compact\":\"_17ERpmFn\",\"fullWidth\":\"_2ztSx4TF\",\"overlay\":\"b-__q_Am\",\"header\":\"_1uPM4Id_\",\"title\":\"_2e4e_N7l\",\"closeButton\":\"_2H_TYfWD\",\"content\":\"dMy_SU1_\",\"padded\":\"_2RzDmlOp\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport ReactDom from 'react-dom';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { motion, startAnimation, useMotionValue } from 'framer-motion';\nimport { FiX } from 'react-icons/fi';\n\n// import { getContrastingColor } from '@mssgme/helpers';\nimport { renderNode, usePresenceRemoval } from '@mssgme/ui';\n\nimport { usePageTheme } from '../../hooks';\n\nimport styles from './ThemedModal.scss';\n\nconst noop = (e) => {\n    e.stopPropagation();\n};\nconst animateValue = (from, to, transition) => {\n    void startAnimation('', from, to, transition);\n\n    return {\n        stop: () => from.stop(),\n    };\n};\n\nexport const ThemedModal = ({\n    handleHash,\n    compact,\n    overlay,\n    padding,\n    fullWidth,\n    children,\n    showHeader,\n    title,\n    onClose,\n    onClosing,\n}) => {\n    const history = useHistory();\n    const y = useMotionValue('100%');\n    const { theme } = usePageTheme();\n    const style = useMemo(\n        () => ({\n            container: { y, backgroundColor: theme.colors.background, color: theme.colors.text },\n            close: { color: theme.colors.text },\n        }),\n        [theme.colors]\n    );\n    // const contrastingColor = getContrastingColor(style.backgroundColor || '#fff', style.backgroundColor, style.color);\n    const targetNode = document.querySelector('#page_root, #mainRoot');\n    const [isClosing, setClosing] = useState(true);\n\n    const handleClose = useCallback(\n        async (...args) => {\n            if (isClosing) {\n                return;\n            }\n\n            setClosing(true);\n\n            if (handleHash) {\n                history.replace(history.location.pathname);\n            }\n\n            if (onClosing && false === (await onClosing())) {\n                return;\n            }\n\n            animateValue(y, '100%', {\n                duration: 0.3,\n                type: 'ease',\n                onComplete: () => {\n                    if (!onClose) {\n                        return;\n                    }\n\n                    if (onClose === true) {\n                        history.goBack();\n                    } else if (typeof onClose === 'string') {\n                        history.push(onClose);\n                    } else {\n                        onClose(...args);\n                    }\n                },\n            });\n        },\n        [isClosing, onClose, onClosing, handleHash]\n    );\n\n    useEffect(() => {\n        const controls = animateValue(y, '0%', {\n            duration: 0.3,\n            type: 'ease',\n            onComplete: () => setClosing(false),\n        });\n\n        return controls.stop;\n    }, []);\n\n    usePresenceRemoval();\n\n    if (!targetNode) {\n        return null;\n    }\n\n    return ReactDom.createPortal(\n        <div className={styles.rootContainer} onClick={noop}>\n            {(compact || overlay) && (\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    transition={{ ease: 'easeInOut', duration: 0.3 }}\n                    className={styles.overlay}\n                    onClick={handleClose}\n                />\n            )}\n\n            <motion.div\n                className={cn(styles.root, compact && styles.compact, fullWidth && styles.fullWidth)}\n                style={style.container}\n            >\n                {(showHeader || title) && (\n                    <div className={styles.header}>\n                        <div className={styles.closeButton} style={style.close} onClick={handleClose}>\n                            <FiX size={24} />\n                        </div>\n                        {title && <div className={styles.title}>{title}</div>}\n                        <div className={styles.closeButton} style={{ opacity: 0, pointerEvents: 'none' }}>\n                            <FiX size={24} />\n                        </div>\n                    </div>\n                )}\n\n                <div className={cn(styles.content, padding && styles.padded)}>{renderNode(children, handleClose)}</div>\n            </motion.div>\n        </div>,\n        targetNode\n    );\n};\n\nThemedModal.propTypes = {\n    showHeader: PropTypes.bool,\n    title: PropTypes.any,\n    onClose: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.bool]).isRequired,\n    onClosing: PropTypes.func,\n    theme: PropTypes.shape({ backgroundColor: PropTypes.string, color: PropTypes.string }),\n    compact: PropTypes.bool,\n    handleHash: PropTypes.bool,\n    overlay: PropTypes.bool,\n    fullWidth: PropTypes.bool,\n    padding: PropTypes.bool,\n};\n\nThemedModal.defaultProps = {\n    showHeader: true,\n    fullWidth: true,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"_3QdNWA4B\",\"successContent\":\"tKDo6X2R\",\"icon\":\"_3JBv0Shf\",\"closeIcon\":\"co2bzcvS\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAsyncFn, useDeepCompareEffect } from 'react-use';\nimport { AnimatePresence } from 'framer-motion';\nimport { FiCheck, FiX } from 'react-icons/fi';\n\nimport { cls } from '@mssgme/helpers';\nimport {\n    __t,\n    SubscriptionFormBlockKind,\n    mapDynamicInputsToValidationSchema,\n    mapDynamicFieldToName,\n    defaultDynamicFieldLengthLimit,\n} from '@mssgme/shared';\nimport { feedbackApi } from '@mssgme/lib';\nimport { FormikProvider, LandingsPropTypes, SubmitButton, useEnhancedFormik } from '@mssgme/ui';\n\nimport { useBlockTheme, useWebsiteData } from '../../../hooks';\nimport { ThemedButton, ThemedModal, DynamicFormInputs } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\n\nimport styles from './SubscriptionForm.scss';\n\nexport const SubscriptionFormContent = ({ block, theme, onSubmit: rawSubmit, interactive }) => {\n    const [sent, setSent] = useState(null);\n    const validationSchema = useMemo(() => mapDynamicInputsToValidationSchema(block), [block]);\n    const FormTag = interactive ? 'form' : 'div';\n\n    const [{ loading, error }, onSubmit] = useAsyncFn(\n        async (values) => {\n            if (false === (await rawSubmit(values))) {\n                return;\n            }\n\n            const items = block.items.map((item, index) => {\n                const field = mapDynamicFieldToName(item, index);\n                const value = values[item._id] ?? values[field];\n\n                return {\n                    key: field,\n                    label: item.label,\n                    value,\n                };\n            });\n            const pairs = items.filter(({ value }) => value);\n\n            setSent(pairs);\n        },\n        [rawSubmit]\n    );\n\n    const errors = Object.entries(error?.errors || {}).reduce((acc, [key, value]) => {\n        acc[key] = __t(value);\n\n        return acc;\n    }, {});\n\n    const formik = useEnhancedFormik({\n        initialValues: useMemo(() =>\n            block.items.reduce((acc, item, index) => ((acc[mapDynamicFieldToName(item, index)] = ''), acc), {})\n        ),\n        validationSchema,\n        onSubmit,\n    });\n\n    const handleSentModalClosed = useCallback(() => {\n        setSent(false);\n        formik.resetForm();\n    }, [formik]);\n\n    useEffect(() => {\n        if (sent && block.hasUrl && block.sentUrl) {\n            const timer = setTimeout(() => (window.location = block.sentUrl), 1000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [sent, block.hasUrl, block.sentUrl, formik]);\n\n    useDeepCompareEffect(() => {\n        formik.setErrors(errors);\n    }, [errors]);\n\n    return (\n        <FormikProvider value={formik}>\n            <FormTag id={`form_${block._id}`}>\n                <DynamicFormInputs theme={theme} block={block} defaultMaxSize={defaultDynamicFieldLengthLimit} />\n\n                <div className={styles.buttonContainer}>\n                    <SubmitButton\n                        as={ThemedButton}\n                        theme={theme}\n                        isInitialHidden={false}\n                        fullWidth\n                        isFetching={loading}\n                        disabled={false}\n                        style={{\n                            backgroundColor: theme.buttonBackground,\n                            color: theme.buttonTextColor,\n                            borderRadius: theme.borderRadius,\n                        }}\n                    >\n                        {block.sendLabel}\n                    </SubmitButton>\n                </div>\n            </FormTag>\n\n            <AnimatePresence>\n                {sent && (\n                    <ThemedModal compact overlay showHeader={false} onClose={handleSentModalClosed}>\n                        {(handleClose) => (\n                            <div className={styles.successContent}>\n                                <div className={styles.closeIcon} onClick={handleClose}>\n                                    <FiX size={26} />\n                                </div>\n                                <FiCheck size={60} className={styles.icon} />\n                                <p>{block.sentText}</p>\n                            </div>\n                        )}\n                    </ThemedModal>\n                )}\n            </AnimatePresence>\n        </FormikProvider>\n    );\n};\n\nSubscriptionFormContent.propTypes = {\n    block: LandingsPropTypes.block.isRequired,\n    theme: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    interactive: PropTypes.bool,\n};\n\nexport default function SubscriptionForm({ block, style: baseStyle, interactive, ...rest }) {\n    const { theme, style } = useBlockTheme(block);\n    const website = useWebsiteData();\n    const combined = useMemo(() => (baseStyle ? { ...style, ...baseStyle } : style), [style, baseStyle]);\n\n    const handleSubmit = useCallback(\n        async (values) => {\n            if (!interactive) {\n                return;\n            }\n\n            await feedbackApi.submit(website.workspace, website._id, { blockId: block._id, data: values });\n\n            const submitEvent = new CustomEvent('formSubmitted', {\n                detail: block._id,\n            });\n\n            document.dispatchEvent(submitEvent);\n        },\n        [website, interactive]\n    );\n\n    return (\n        <BlockBase interactive={interactive} style={combined} {...cls(styles.root, rest)}>\n            <SubscriptionFormContent block={block} theme={theme} interactive={interactive} onSubmit={handleSubmit} />\n        </BlockBase>\n    );\n}\n\nSubscriptionForm.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nSubscriptionForm.defaultProps = BlockBase.defaultProps;\n\nSubscriptionForm.kind = SubscriptionFormBlockKind;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useUpdateEffect } from 'react-use';\nimport { useFormik } from 'formik';\nimport { debounce, get } from 'lodash';\n\nimport { useFetching } from '@mssgme/hooks';\n\n/**\n * @template {object} FormValues\n * @typedef {(values: FormValues, formik: ReturnType<typeof useFormik>) => void} OnChangeMethod\n * @typedef {(values: FormValues, helpers: FormikHelpers<FormValues>) => (void | Promise<*>)} SubmitMethod\n * @param {object} config Config\n * @param {Partial<FormValues>} config.initialValues Initial values\n * @param {OnChangeMethod} config.onChange Change listener\n * @param {SubmitMethod} config.onSubmit Submit listener\n * @param {string} [config.errorsPrefix] If validation errors, generated by submit listener, would be nested under `errorsPrefix` path\n * @param {boolean} [config.resetOnSuccess=false] Reset form on successful submit\n * @param {boolean} [config.autoSubmit=false] Auto-submit if the form is dirty, accounting for debounce\n * @param {number} [config.autoSubmitDebounce=400] Auto-submit debounce\n * @returns {*} Enhanced Formik context\n */\nexport default function useEnhancedFormik({\n    initialValues,\n    onChange,\n    onSubmit,\n    errorsPrefix,\n    resetOnSuccess = false,\n    autoSubmit = false,\n    autoSubmitDebounce = 400,\n    ...rest\n}) {\n    const [warnings, setWarnings] = useState({});\n    const submit = useFetching(onSubmit);\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: (...args) => submit.run(...args),\n        ...rest,\n    });\n\n    const validationErrors = errorsPrefix ? get(submit.validationErrors, errorsPrefix) : submit.validationErrors;\n    const shouldAutoSubmit = autoSubmit && formik.dirty;\n\n    useEffect(() => {\n        if (submit.fulfilled) {\n            formik.setSubmitting(false);\n            formik.setStatus('success');\n            if (resetOnSuccess) formik.resetForm();\n        }\n    }, [submit.fulfilled]);\n\n    useEffect(() => {\n        if (submit.rejected) {\n            // TODO: handle errors in sentry\n            formik.setSubmitting(false);\n            formik.setStatus('failure');\n        }\n    }, [submit.rejected]);\n\n    useEffect(() => void formik.setErrors(validationErrors), [validationErrors]);\n\n    // TODO: move into independent component\n    useUpdateEffect(() => void (onChange && onChange(formik.values, formik)), [formik.values]);\n\n    const debouncedSubmit = useMemo(() => debounce(formik.submitForm, autoSubmitDebounce), [\n        autoSubmitDebounce,\n        formik.submitForm,\n    ]);\n\n    useUpdateEffect(() => {\n        if (shouldAutoSubmit) {\n            void debouncedSubmit();\n        }\n    }, [debouncedSubmit, shouldAutoSubmit]);\n\n    return { warnings, setWarnings, submit, errorsPrefix, ...formik };\n}\n","import SubscriptionForm from './SubscriptionForm';\n\nexport default SubscriptionForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3Pb-B5RH\",\"spinner\":\"_2S9bt9mk\",\"rotate\":\"_11rFdkOa\",\"black\":\"_2du6YMP-\",\"gray\":\"_20M_pSzf\",\"white\":\"_3-o3pxPo\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport styles from './Spinner.scss';\n\nexport const POINTS = ['%', 'px', 'pt', 'em'];\nexport const COLORS = ['black', 'white', 'gray'];\n\nSpinner.propTypes = {\n    className: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    color: PropTypes.oneOf(COLORS),\n    duration: PropTypes.number,\n};\n\nSpinner.defaultProps = {\n    size: 40,\n    duration: 0.8,\n    color: 'black',\n};\n\nexport default function Spinner({ className, borderWidth, size, duration, color, ...rest }) {\n    const style = useMemo(() => {\n        const normalized = normalizeSize(size);\n        const normalizedBorderWidth = normalizeSize(borderWidth || Math.round(+normalized * 0.05));\n\n        return {\n            width: normalized,\n            height: normalized,\n            borderWidth: normalizedBorderWidth,\n            animationDuration: `${duration}s`,\n            WebkitAnimationDuration: `${duration}s`,\n            MozAnimationDuration: `${duration}s`,\n        };\n    }, [size, duration, borderWidth]);\n\n    return (\n        <div className={cn(styles.root, className)}>\n            <div className={cn(styles.spinner, styles[color])} style={style} {...rest} />\n        </div>\n    );\n}\n\nexport function normalizeSize(size, def = 'px') {\n    if (!size) return;\n\n    const str = String(size);\n    const withPoints = POINTS.find((points) => str.indexOf(points) > 0);\n\n    return withPoints ? size : `${size}${def}`;\n}\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_1aGC9hdN\",\"disabled\":\"R67GzQRa\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { __t } from '@mssgme/shared';\nimport styles from './styles.scss';\n\nexport const MoreButton = ({ disabled, className, ...rest }) => (\n    <span className={classNames(styles.root, { [styles.disabled]: disabled }, className)} {...rest}>\n        {__t('show_more')}\n    </span>\n);\n\nMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n};\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction ImageIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path\n                d=\"M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2V5a2 2 0 00-2-2z\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n            <path\n                d=\"M8.5 10a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM21 15l-5-5L5 21\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(ImageIcon);\nexport default ForwardRef;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DGSQtavY\"};","import React from 'react';\n\nimport { ImageIcon } from '@mssgme/icons';\n\nimport styles from './Thumbnail.scss';\n\nexport default function Thumbnail() {\n    return <ImageIcon className={styles.root} />;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_xoBULhV\",\"img\":\"_1pWoQkAV\",\"fit\":\"XCY58nZg\",\"spinner\":\"_2f8_zoFb\",\"visible\":\"_1Z20qEZ1\",\"inline\":\"_3-n_7lQl\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { cls } from '@mssgme/helpers';\nimport Spinner from '../Spinner';\nimport useLoadImage from './useLoadImage';\nimport useIntersect from './useIntersect';\nimport Thumbnail from './Thumbnail';\n\nimport styles from './LazyImage.scss';\n\nexport default function LazyImage({ mode, src, alt, containerClassName, ...rest }) {\n    const { ref, isIntersecting, isIntersect } = useIntersect();\n    const { isFetching, isLoaded, onLoad, onError, error } = useLoadImage();\n\n    return (\n        <div ref={ref} className={classNames(styles.root, styles[mode], containerClassName)}>\n            {isFetching && mode !== 'inline' && <Spinner size=\"50%\" color=\"gray\" className={styles.spinner} />}\n            {error && <Thumbnail />}\n            <img\n                src={isIntersect ? src : null}\n                alt={alt}\n                onLoad={onLoad}\n                onError={onError}\n                {...cls([styles.img, isLoaded && isIntersecting && styles.visible], rest)}\n            />\n        </div>\n    );\n}\n\nLazyImage.propTypes = {\n    className: PropTypes.string,\n    containerClassName: PropTypes.string,\n    mode: PropTypes.oneOf(['fit', 'inline']),\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n};\n\nLazyImage.defaultProps = {\n    mode: 'fit',\n};\n","import { useRef, useEffect, useMemo, useState } from 'react';\n\nexport default function useIntersect() {\n    const ref = useRef(null);\n    const [isIntersecting, setIsIntersecting] = useState(false);\n    const [isIntersect, setIsIntersect] = useState(false);\n\n    const observer = useMemo(\n        () =>\n            new IntersectionObserver(\n                function onIntersect([entry]) {\n                    if (entry?.isIntersecting) {\n                        setIsIntersecting(true);\n                        setIsIntersect(true);\n                    } else if (entry.rootBounds) {\n                        setIsIntersecting(false);\n                    }\n                },\n                {\n                    root: null,\n                    rootMargin: '100px 0px 100px 0px',\n                    threshold: 0.01,\n                }\n            ),\n        []\n    );\n\n    useEffect(() => {\n        const element = ref.current;\n\n        if (!element) {\n            return;\n        }\n\n        observer.observe(element);\n\n        return () => {\n            observer.unobserve(element);\n        };\n    }, [ref.current]);\n\n    return {\n        ref,\n        isIntersecting,\n        isIntersect,\n    };\n}\n","import { useCallback, useState } from 'react';\n\nexport default function useLoadImage() {\n    const [state, setState] = useState({ isFetching: true, isLoaded: false, error: null });\n\n    const onLoad = useCallback(() => setState({ isFetching: false, isLoaded: true, error: null }), []);\n    const onError = useCallback((error) => setState({ isFetching: false, isLoaded: false, error }), []);\n\n    return {\n        ...state,\n        onLoad,\n        onError,\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"-XoAMny0\",\"thumbnail\":\"C_R44W3m\",\"emptyPlaceholder\":\"_335lD0ul\",\"meta\":\"_3haFePjs\",\"title\":\"_19uOjj9I\",\"price\":\"_1YA6epaj\",\"discountPrice\":\"_26QDH8kd\",\"lineThrough\":\"_1iPjetGG\",\"list\":\"_1BKtItoB\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { IoMdImage } from 'react-icons/io';\n\nimport { __t } from '@mssgme/shared';\nimport { LazyImage } from '@mssgme/ui';\nimport { useUploads, MediaSizes } from '../../../hooks';\n\nimport styles from './ServicesGridItem.scss';\n\nexport const ServicesGridItem = ({ item, themeStyles, ...rest }) => {\n    const { getMediaSizeUrl } = useUploads();\n    const photoUrl = getMediaSizeUrl(item.photoUrl, MediaSizes.Half);\n\n    return (\n        <div className={cn(styles.item, styles[themeStyles.gridMode])} {...rest}>\n            <div className={styles.thumbnail} style={{ backgroundColor: themeStyles.backgroundColor }}>\n                {photoUrl ? (\n                    <LazyImage src={photoUrl} alt={item.title} />\n                ) : (\n                    <div className={styles.emptyPlaceholder}>\n                        <IoMdImage size=\"40%\" color=\"#fff\" />\n                    </div>\n                )}\n            </div>\n            <div className={styles.meta} style={{ color: themeStyles.color }}>\n                <div>\n                    <h6 className={styles.title}>{item.title}</h6>\n                    {item.price && (\n                        <div className={styles.price}>\n                            {item.price.formattedDiscount &&\n                                (item.price.discount === 0 ? (\n                                    <span className={styles.discountPrice}>{__t('free')}</span>\n                                ) : (\n                                    <span className={styles.discountPrice}>{item.price.formattedDiscount}</span>\n                                ))}\n                            {item.price.amount === 0 ? (\n                                __t('free')\n                            ) : (\n                                <span className={item.price.formattedDiscount ? styles.lineThrough : null}>\n                                    {item.price.formatted}\n                                </span>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nServicesGridItem.propTypes = {\n    item: PropTypes.object.isRequired,\n    themeStyles: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"_3jhxiqOr\",\"opacity\":\"_3pgdaWXY\",\"root\":\"_3pwAbyVF\",\"active\":\"_1-6fDei8\",\"closeButtonWrapper\":\"_8dj21P8K\",\"closeButton\":\"_1GBc3ikw\",\"swiperContainer\":\"_1Qp4_m7K\",\"preloader\":\"_13WBnBK-\",\"swiper\":\"_22hloKnO\",\"slide\":\"_1RK4GSWG\",\"slideImage\":\"_30NJpZlb\",\"imagePreloader\":\"_1H56Dfu4\",\"loaded\":\"_8AKZkImA\",\"zoomIcon\":\"_3aTNt7_W\",\"controlsContainer\":\"tgROkwx3\",\"hidden\":\"_3-DxphH3\",\"controls\":\"_194m9rIu\",\"control\":\"_1YtkZ4xL\",\"pagination\":\"_10qA4vZk\",\"clickablePagination\":\"JzPCNBQm\",\"dot\":\"_8xCE8Iq9\",\"activeBullet\":\"_1XEkIJZQ\",\"content\":\"_19JYevFe\",\"dark\":\"C5PmAxFx\",\"title\":\"_3DJQ7C_B\",\"price\":\"_3blmRIIw\",\"lineThrough\":\"_1blY4HxK\",\"description\":\"_1vGt9qoh\",\"externalButton\":\"_2NsswoAb\",\"buttonContent\":\"_2cLgzYIF\",\"url\":\"_2gleBV4K\",\"blurred\":\"ZjSNusp0\",\"contacts\":\"_2Wm6Xm44\",\"actionsBuy\":\"_2TIFgmpV\",\"fixedPane\":\"_1vKLNpVO\",\"noSwiping\":\"_1Cw4az2m\",\"cartBouncer\":\"_1ZEctz9U\"};","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { FiZoomIn } from 'react-icons/fi';\n\nimport { cls } from '@mssgme/helpers';\nimport { LoadingIndicator } from '@mssgme/ui';\nimport { MediaSizes, useUploads } from '../../hooks';\n\nimport styles from './ServiceContent.scss';\n\nexport const ServicePhoto = React.forwardRef(function ServicePhoto(\n    { photoUrl, title, index, style, onLoad, onClick, ...rest },\n    ref\n) {\n    const { getMediaSizeUrl } = useUploads();\n    const handleClick = useCallback(() => void onClick(index), [index, onClick]);\n\n    return (\n        <div ref={ref} {...cls(styles.slide, rest)}>\n            <div className={styles.slideImage}>\n                <img\n                    {...{ 'data-src': getMediaSizeUrl(photoUrl, MediaSizes.Large) }}\n                    className=\"swiper-lazy\"\n                    alt={title}\n                    onLoad={onLoad}\n                    onClick={handleClick}\n                />\n                <div className={styles.zoomIcon} style={style.common}>\n                    <FiZoomIn size={14} />\n                </div>\n                <div className={styles.imagePreloader} style={style.background}>\n                    <div>\n                        <LoadingIndicator />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n});\n\nServicePhoto.propTypes = {\n    photoUrl: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    style: PropTypes.object.isRequired,\n    onLoad: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n};\n","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { FiChevronLeft, FiChevronRight, FiX } from 'react-icons/fi';\n\nimport { LoadingIndicator, Swiper } from '@mssgme/ui';\nimport { LightBox } from '../LightBox';\nimport { ServicePhoto } from './ServicePhoto';\n\nimport styles from './ServiceContent.scss';\n\nconst lazy = {\n    loadPrevNext: true,\n    preloaderClass: styles.imagePreloader,\n    loadedClass: styles.loaded,\n};\n\nexport const ServicePhotos = ({ photos, title, isActive, isPrev, isNext, themeStyles, style, onClose }) => {\n    const navigationPrevRef = React.useRef(null);\n    const navigationNextRef = React.useRef(null);\n    const paginationElRef = useRef(null);\n    const [shouldSwiperLoad, setShouldSwiperLoad] = useState(false);\n    const [swiper, setSwiper] = useState(null);\n    const [isLightbox, setIsLightbox] = useState(false);\n    const [currentLightBoxSlideIndex, setCurrentLightBoxSlideIndex] = useState(0);\n\n    const hasMultiplePhotos = photos.length > 1;\n    const hasNavElements = !!paginationElRef.current && !!navigationPrevRef.current && !!navigationNextRef.current;\n    const showSwiper = shouldSwiperLoad && (!hasMultiplePhotos || hasNavElements);\n    const isSwipeable = isActive || isPrev || isNext;\n\n    const openLightBox = useCallback(() => setIsLightbox(true), []);\n    const closeLightBox = useCallback(() => setIsLightbox(false), []);\n\n    const handleSlide = useCallback((index) => {\n        setCurrentLightBoxSlideIndex(index);\n        openLightBox();\n    });\n\n    const pagination = useMemo(\n        () =>\n            hasMultiplePhotos && {\n                el: paginationElRef.current,\n                clickable: true,\n                renderBullet: (index, className) => {\n                    return `<div class=\"${className} ${styles.dot}\"><div style=\"background-color: ${\n                        themeStyles ? themeStyles.color : 'null'\n                    }\"></div></div>`;\n                },\n                clickableClass: styles.clickablePagination,\n                bulletActiveClass: styles.activeBullet,\n            },\n        [paginationElRef.current, hasMultiplePhotos, themeStyles]\n    );\n\n    const handleLoad = useCallback(() => void (swiper && swiper.updateAutoHeight()), [swiper]);\n\n    useEffect(() => {\n        if (isSwipeable) {\n            setShouldSwiperLoad(true);\n        }\n    }, [isSwipeable]);\n\n    return (\n        <div className={styles.swiperContainer}>\n            {showSwiper ? (\n                <Swiper\n                    className={styles.swiper}\n                    nested\n                    autoHeight\n                    lazy={lazy}\n                    pagination={pagination}\n                    navigation={{\n                        prevEl: navigationPrevRef.current,\n                        nextEl: navigationNextRef.current,\n                    }}\n                    speed={600}\n                    watchOverflow={hasMultiplePhotos}\n                    loop={hasMultiplePhotos}\n                    onSwiper={setSwiper}\n                >\n                    {photos.map((photoUrl, index) => (\n                        <ServicePhoto\n                            key={photoUrl + index}\n                            index={index}\n                            photoUrl={photoUrl}\n                            title={title}\n                            style={style}\n                            onLoad={handleLoad}\n                            onClick={handleSlide}\n                        />\n                    ))}\n                </Swiper>\n            ) : (\n                <div className={styles.preloader}>\n                    <div>\n                        <LoadingIndicator />\n                    </div>\n                </div>\n            )}\n            {hasMultiplePhotos && (\n                <div className={cn(styles.controlsContainer, { [styles.hidden]: !showSwiper })}>\n                    <div className={cn(styles.controls, styles.noSwiping)} style={style.pagination}>\n                        <div className={styles.control} ref={navigationPrevRef}>\n                            <FiChevronLeft size={16} />\n                        </div>\n                        <div className={styles.pagination} ref={paginationElRef} />\n                        <div className={styles.control} ref={navigationNextRef}>\n                            <FiChevronRight size={16} />\n                        </div>\n                    </div>\n                </div>\n            )}\n            <div\n                className={cn(styles.closeButtonWrapper, styles.noSwiping)}\n                onClick={onClose}\n                style={{ display: 'flex' }}\n            >\n                <div className={styles.closeButton} style={style.common}>\n                    <FiX size={14} />\n                </div>\n            </div>\n\n            {isLightbox && (\n                <React.Suspense fallback={null}>\n                    <LightBox\n                        activeIndex={currentLightBoxSlideIndex}\n                        images={photos.map((url) => ({ url }))}\n                        onClose={closeLightBox}\n                    />\n                </React.Suspense>\n            )}\n        </div>\n    );\n};\n\nServicePhotos.propTypes = {\n    photos: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    isActive: PropTypes.bool,\n    isPrev: PropTypes.bool,\n    isNext: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    themeStyles: PropTypes.object,\n    style: PropTypes.object.isRequired,\n    onClose: PropTypes.func,\n};\n","import React, { useContext } from 'react';\nimport { useMount, useUnmount } from 'react-use';\n\nimport { removeTrailingSlash } from '@mssgme/shared';\n\nconst joinPath = (a, b) => {\n    return (\n        '/' + removeTrailingSlash(`${removeTrailingSlash(a)}/${removeTrailingSlash(b, { lead: true })}`, { lead: true })\n    );\n};\n\nexport const makeCoreRouter = ({ path, isBackOverriddenBack }) => {\n    const base = removeTrailingSlash(path);\n\n    return {\n        toEntry: () => path,\n        toHome: () => path,\n        product: {\n            toView: (productSlug = ':productSlug') => joinPath(base, `p/${productSlug}`),\n        },\n        collection: {},\n        orders: {\n            toView: (orderId = ':orderId', basePath = base) =>\n                joinPath(basePath, orderId ? `orders/${orderId}` : 'orders'),\n            toStatus: (orderId = ':orderId', status = ':status(paid|failed)') =>\n                joinPath(base, `orders/${orderId}/payment/${status}`),\n        },\n        userOrders: {\n            toOrder: (orderId = ':orderId') => joinPath(base, orderId ? `user-orders/${orderId}` : 'orders'),\n        },\n        isBackOverriddenBack,\n    };\n};\n\nexport const CoreContext = React.createContext({\n    path: '/',\n    router: makeCoreRouter({ path: '/' }),\n    setEntry: () => {},\n});\n\nexport const useBackCorePath = (backUrl) => {\n    const { setEntry } = useCoreContext();\n\n    useMount(() => setEntry(backUrl));\n    useUnmount(() => setEntry());\n};\n\nexport const useCoreContext = () => useContext(CoreContext);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yGbJMyhr\"};","import PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport { useAsyncFn, useToggle } from 'react-use';\nimport { Link } from 'react-router-dom';\n\nimport { __t } from '@mssgme/shared';\nimport { ShoppingCartIcon } from '@mssgme/icons';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { useCoreContext, useFrontAPI, useModalThemes, usePageData, useSavedOrders } from '../../hooks';\nimport { ThemedButton } from '../ThemedButton';\nimport { ThemedModal } from '../ThemedModal';\n\nimport styles from './BuyButton.scss';\n\nconst propTypes = {\n    service: PropTypes.object.isRequired,\n    interactive: PropTypes.bool,\n    onCartAdd: PropTypes.func,\n    productCurrency: PropTypes.string,\n};\n\nfunction BuyButton({ service, interactive, onCartAdd, productCurrency, ...rest }) {\n    const api = useFrontAPI();\n    const { generateUrl } = useNavigationUtils();\n    const { router } = useCoreContext();\n    const { currentOrder, saveOrderId } = useSavedOrders();\n    const { _id: pageId } = usePageData();\n    const { contentStyle } = useModalThemes();\n    const isInCart = useMemo(() => !!currentOrder?.items.find((item) => item.productId === service._id), [\n        currentOrder,\n        service._id,\n    ]);\n    const orderId = currentOrder?._id;\n    const orderPath = useMemo(() => router.orders.toView(orderId, generateUrl('.')), [orderId]);\n    const isDifferentCurrency = useMemo(() => {\n        const orderCurrency = currentOrder?.items[0]?.price?.currency;\n\n        return !!(orderCurrency && orderCurrency !== productCurrency);\n    }, [currentOrder?.items, productCurrency]);\n    const [restrictCurrenciesMessage, toggleRestrictCurrenciesMessage] = useToggle(false);\n    const [{ loading }, handleBuy] = useAsyncFn(async () => {\n        if (isInCart || !interactive) {\n            return;\n        }\n\n        // restrict adding products with different currencies\n        if (isDifferentCurrency) {\n            toggleRestrictCurrenciesMessage(true);\n\n            return;\n        }\n\n        const payload = { items: [{ productId: service._id, quantity: 1 }] };\n        let result;\n\n        if (orderId) {\n            result = await api.orders.modify({ orderId, payload });\n        } else {\n            result = await api.orders.create({ pageId, payload });\n\n            saveOrderId(result._id);\n        }\n\n        onCartAdd && onCartAdd();\n\n        return result;\n    }, [interactive, service._id, pageId, orderId, isInCart, isDifferentCurrency, saveOrderId]);\n\n    return (\n        <>\n            <ThemedButton\n                fullWidth\n                className={styles.root}\n                theme={contentStyle}\n                disabled={!interactive}\n                isFetching={loading}\n                beforeIcon={isInCart && <ShoppingCartIcon />}\n                {...(isInCart\n                    ? {\n                        tag: Link,\n                        to: {\n                            pathname: orderPath,\n                            state: service.slug ? { backPath: router.product.toView(service.slug) } : null,\n                        },\n                    }\n                    : { onClick: handleBuy })}\n                {...rest}\n            >\n                {isInCart ? __t('to_cart') : __t('buy')}\n            </ThemedButton>\n            {restrictCurrenciesMessage && (\n                <ThemedModal\n                    overlay\n                    compact\n                    padding\n                    title={__t('error_occurred')}\n                    onClose={toggleRestrictCurrenciesMessage}\n                >\n                    <div style={{ textAlign: 'center' }}>{__t('different_currencies_error')}</div>\n                </ThemedModal>\n            )}\n        </>\n    );\n}\n\nBuyButton.propTypes = propTypes;\n\nexport default BuyButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { cls } from '@mssgme/helpers';\nimport { useRenderer } from '../../hooks';\nimport BuyButton from './BuyButton';\n\nimport styles from './ServiceContent.scss';\n\nexport const ServiceActionsPane = ({\n    contacts,\n    service,\n    interactive,\n    enabledPayments,\n    onCartAdd,\n    currency,\n    ...rest\n}) => {\n    const renderBlock = useRenderer();\n\n    return (\n        <div {...cls(styles.contacts, rest)}>\n            {enabledPayments && (\n                <div className={styles.actionsBuy} style={{ marginBottom: contacts?.length ? 0 : 12 }}>\n                    <BuyButton\n                        service={service}\n                        productCurrency={currency}\n                        interactive={interactive}\n                        onCartAdd={onCartAdd}\n                    />\n                </div>\n            )}\n\n            {contacts?.length > 0 && contacts.map(renderBlock)}\n        </div>\n    );\n};\n\nServiceActionsPane.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({})),\n    service: PropTypes.object.isRequired,\n    interactive: PropTypes.bool,\n    enabledPayments: PropTypes.bool,\n    onCartAdd: PropTypes.func.isRequired,\n    currency: PropTypes.string,\n};\n","export default (url) => {\n    try {\n        return url && new URL(url);\n    } catch (err) {\n        return null;\n    }\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { __t } from '@mssgme/shared';\nimport { parseUrl, urlSafeComponent } from '@mssgme/helpers';\nimport { LinkBlank } from '@mssgme/ui';\nimport { ThemedButton } from '../ThemedButton';\nimport styles from './ServiceContent.scss';\n\nexport const ExternalUrlButton = ({ service, themeStyles }) => {\n    const url = service.externalButton?.url || service.externalUrl;\n    const parsed = url && parseUrl(url);\n\n    if (!url) {\n        return null;\n    }\n\n    return (\n        <ThemedButton\n            fullWidth\n            tag={LinkBlank}\n            theme={themeStyles}\n            href={url}\n            data-id={service._id}\n            data-title={service.title || service.name}\n            data-element=\"custom-link\"\n            data-event-name={urlSafeComponent(url)}\n            className={styles.externalButton}\n        >\n            <div className={styles.buttonContent}>\n                <span>{service.externalButton?.title || __t('visit_website')}</span>\n                {!!parsed && <span className={styles.url}>{parsed.hostname}</span>}\n            </div>\n        </ThemedButton>\n    );\n};\n\nExternalUrlButton.propTypes = {\n    service: PropTypes.object.isRequired,\n    themeStyles: PropTypes.object.isRequired,\n};\n","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { useToggle } from 'react-use';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nimport { __t } from '@mssgme/shared';\nimport { isLightColor } from '@mssgme/helpers';\nimport { useWebsiteData } from '../../hooks';\nimport { ServicePhotos } from './ServicePhotos';\nimport { ServiceActionsPane } from './ServiceActionsPane';\nimport { ExternalUrlButton } from './ExternalUrlButton';\nimport { ShoppingCart } from '../ShoppingCart';\n\nimport styles from './ServiceContent.scss';\n\nexport function ServiceContent({\n    service: { description, price },\n    service,\n    contacts,\n    isActive,\n    isPrev,\n    isNext,\n    interactive,\n    themeStyles,\n    backUrl,\n    onClose,\n}) {\n    const { enabledPayments } = useWebsiteData();\n    const [isCartAddAnimation, toggleCartAddAnimation] = useToggle(false);\n    const rootEl = useRef(null);\n    const serviceTitle = service.title || service.name;\n    const isDarkTheme = !isLightColor(themeStyles.backgroundColor);\n    const style = useMemo(() => {\n        const { color, backgroundColor } = themeStyles;\n\n        return {\n            common: {\n                color,\n                backgroundColor,\n            },\n            color: {\n                color,\n            },\n            background: {\n                backgroundColor,\n            },\n            pagination: {\n                backgroundColor: backgroundColor.slice(0, -2) + '80',\n                color,\n            },\n            contacts: {\n                backgroundImage: `linear-gradient(to bottom, ${backgroundColor.substring(\n                    0,\n                    7\n                )}00 0%, ${backgroundColor} 18px, ${backgroundColor} 100%)`,\n            },\n        };\n    }, [themeStyles]);\n\n    const isSwipeable = isActive || isPrev || isNext;\n    const hasActions = enabledPayments || contacts.length > 0;\n\n    const contactsEl = hasActions && (\n        <ServiceActionsPane\n            style={style.contacts}\n            contacts={contacts}\n            service={service}\n            interactive={interactive}\n            enabledPayments={enabledPayments}\n            onCartAdd={toggleCartAddAnimation}\n            currency={price?.currency}\n        />\n    );\n\n    const handleClose = useCallback(\n        (e) => {\n            e?.preventDefault?.();\n\n            onClose(backUrl);\n        },\n        [backUrl, onClose]\n    );\n\n    useEffect(() => {\n        if (rootEl.current && rootEl.current.scrollTop !== 0) {\n            rootEl.current.scrollTo({ top: 0, behavior: 'smooth' });\n        }\n    }, [isSwipeable]);\n\n    useEffect(() => {\n        if (!isCartAddAnimation) {\n            return;\n        }\n\n        const timer = setTimeout(() => toggleCartAddAnimation(false), 1000);\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [isCartAddAnimation]);\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={cn(styles.root, { [styles.active]: isActive })} ref={rootEl} style={style.color}>\n                <ServicePhotos\n                    photos={service.photos}\n                    title={serviceTitle}\n                    isActive={isActive}\n                    isPrev={isPrev}\n                    isNext={isNext}\n                    themeStyles={themeStyles}\n                    style={style}\n                    onClose={handleClose}\n                />\n\n                <div className={cn(styles.content, isDarkTheme && styles.dark)}>\n                    <div>\n                        <h1 className={styles.title}>{serviceTitle}</h1>\n\n                        {price && (\n                            <div className={styles.price} style={style.color}>\n                                {price.formattedDiscount && (\n                                    <span className={styles.discountPrice}>\n                                        {price.discount === 0 ? __t('free') : price.formattedDiscount}\n                                    </span>\n                                )}\n                                {price.amount === 0 ? (\n                                    __t('free')\n                                ) : (\n                                    <span className={price.formattedDiscount ? styles.lineThrough : null}>\n                                        {price.formatted}\n                                    </span>\n                                )}\n                            </div>\n                        )}\n\n                        <ExternalUrlButton themeStyles={themeStyles} service={service} />\n                    </div>\n                    {description && <p className={styles.description}>{description}</p>}\n                    {contactsEl && <div className={styles.fixedPane}>{contactsEl}</div>}\n\n                    <AnimatePresence>\n                        {isCartAddAnimation && (\n                            <motion.div\n                                className={styles.cartBouncer}\n                                animate={{ bottom: 16 }}\n                                exit={{ bottom: -60 }}\n                                transition={{ type: 'spring', stiffness: 100 }}\n                            >\n                                <ShoppingCart style={{ position: 'absolute', bottom: 0, right: 0 }} />\n                            </motion.div>\n                        )}\n                    </AnimatePresence>\n                </div>\n            </div>\n\n            {contactsEl}\n        </div>\n    );\n}\n\nServiceContent.propTypes = {\n    service: PropTypes.object.isRequired,\n    contacts: PropTypes.array.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    isPrev: PropTypes.bool.isRequired,\n    isNext: PropTypes.bool.isRequired,\n    interactive: PropTypes.bool,\n    themeStyles: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    backUrl: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Vs34Y2Ah\",\"header\":\"_2e4UGjJN\",\"controls\":\"_2sYXvV1t\",\"control\":\"_28-9kyQf\",\"closeButton\":\"_3Je-sAwM\",\"content\":\"_2XbhEsS0\",\"swiper\":\"QnbvWe1q\",\"noSwiping\":\"_2zN_ACNB\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport ReactDom from 'react-dom';\nimport { useHistory } from 'react-router';\n// import { FiChevronLeft, FiChevronRight, FiX } from 'react-icons/fi';\nimport { motion, startAnimation, useMotionValue } from 'framer-motion';\n\nimport { Swiper } from '@mssgme/ui';\nimport { usePageData, usePageTheme } from '../../../hooks';\nimport { ServiceContent } from '../../../UI';\n\nimport styles from './ServicesModal.scss';\n\nconst animate = (from, to, transition) => {\n    void startAnimation('', from, to, transition);\n\n    return {\n        stop: () => from.stop(),\n    };\n};\n\nexport function ServicesModal({\n    services,\n    contacts,\n    activeIndex,\n    interactive,\n    onClose,\n    onClosing,\n    themeStyles,\n    handleHash,\n}) {\n    const page = usePageData();\n    const {\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const history = useHistory();\n    const opacity = useMotionValue(0);\n    // const navigationPrevRef = React.useRef(null);\n    // const navigationNextRef = React.useRef(null);\n    const hasMultipleServices = services.length > 1;\n    // const isMobile = useIsMobile();\n\n    const contactBlocks = useMemo(\n        () =>\n            contacts\n                .filter(({ enabled }) => enabled)\n                .map(({ blockId }) => page.blocks.find(({ _id }) => _id === blockId)),\n        [page, contacts]\n    );\n\n    // const handleInit = useCallback(\n    //     (swiper) => {\n    //         swiper.params.navigation.prevEl = navigationPrevRef.current;\n    //         swiper.params.navigation.nextEl = navigationNextRef.current;\n    //         swiper.navigation.update();\n    //     },\n    //     [navigationPrevRef, navigationNextRef]\n    // );\n    const handleSlideChange = useCallback(\n        (swiper) => {\n            if (handleHash) {\n                history.replace('#' + services[swiper.realIndex]._id);\n            }\n        },\n        [handleHash, services]\n    );\n    const handleClose = useCallback(() => {\n        if (handleHash) {\n            history.replace(history.location.pathname);\n        }\n\n        onClosing && onClosing();\n\n        animate(opacity, 0, {\n            type: 'spring',\n            stiffness: 100,\n            onComplete: onClose,\n        });\n    }, [onClose, onClosing, handleHash]);\n\n    useEffect(() => {\n        const controls = animate(opacity, 1, {\n            type: 'spring',\n            stiffness: 100,\n        });\n\n        return controls.stop;\n    }, []);\n\n    return ReactDom.createPortal(\n        <motion.div className={styles.root} style={{ opacity, backgroundColor }}>\n            {/*<div className={styles.header} style={{ color: themeStyles.color }}>*/}\n            {/*    <div className={styles.closeButton} onClick={handleClose}>*/}\n            {/*        <FiX size={24} />*/}\n            {/*    </div>*/}\n            {/*    /!*{hasMultipleServices && (*!/*/}\n            {/*    /!*    <div className={styles.controls} style={{ display: isMobile ? 'none' : null }}>*!/*/}\n            {/*    /!*        <div className={styles.control} ref={navigationPrevRef}>*!/*/}\n            {/*    /!*            <FiChevronLeft size={24} />*!/*/}\n            {/*    /!*        </div>*!/*/}\n            {/*    /!*        <div className={styles.control} ref={navigationNextRef}>*!/*/}\n            {/*    /!*            <FiChevronRight size={24} />*!/*/}\n            {/*    /!*        </div>*!/*/}\n            {/*    /!*    </div>*!/*/}\n            {/*    /!*)}*!/*/}\n            {/*    <div className={styles.closeButton} style={{ opacity: 0, pointerEvents: 'none' }}>*/}\n            {/*        <FiX size={24} />*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n            <div className={styles.content}>\n                <Swiper\n                    className={styles.swiper}\n                    allowTouchMove={hasMultipleServices}\n                    initialSlide={activeIndex}\n                    noSwipingClass={styles.noSwiping}\n                    speed={600}\n                    pagination={false}\n                    // watchOverflow={services.length > 1}\n                    // loop={services.length > 1}\n                    onInit={handleSlideChange}\n                    onSlideChange={handleSlideChange}\n                >\n                    {services.map((service, index) =>\n                        Object.assign(\n                            ({ isActive, isPrev, isNext }) => (\n                                <ServiceContent\n                                    themeStyles={themeStyles}\n                                    service={service}\n                                    contacts={contactBlocks}\n                                    isActive={isActive}\n                                    isPrev={isPrev}\n                                    isNext={isNext}\n                                    interactive={interactive}\n                                    onClose={handleClose}\n                                />\n                            ),\n                            { key: service._id || index }\n                        )\n                    )}\n                </Swiper>\n            </div>\n        </motion.div>,\n        document.querySelector('#page_root, #mainRoot')\n    );\n}\n\nServicesModal.propTypes = {\n    services: PropTypes.array.isRequired,\n    contacts: PropTypes.array.isRequired,\n    activeIndex: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onClosing: PropTypes.func,\n    themeStyles: PropTypes.object.isRequired,\n    handleHash: PropTypes.bool,\n    interactive: PropTypes.bool,\n};\n\nServicesModal.defaultProps = {\n    handleHash: true,\n    interactive: true,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"servicesList\":\"_1tPoDiYt\",\"list\":\"_11aOBJzF\",\"moreButtonContainer\":\"_1WE-HNBa\",\"blurred\":\"VgXs12px\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { useTimeoutFn } from 'react-use';\n\nimport { __t, ServicesGridBlockKind } from '@mssgme/shared';\nimport { LandingsPropTypes, Spinner } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { MoreButton } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { ServicesGridItem } from './ServicesGridItem';\nimport { ServicesModal } from './ServicesModal';\n\nimport styles from './ServicesGrid.scss';\n\nconst ITEMS_PER_PAGE = 6;\n\nexport default function ServicesGrid({ block, sortable, interactive, delay = 0, ...rest }) {\n    const location = useLocation();\n    const hashId = location.hash && location.hash.slice(1);\n    const slideIndexFromHash = hashId && block.items.findIndex((item) => item._id === hashId);\n    const hasSlideFromHash = Number.isInteger(slideIndexFromHash) && slideIndexFromHash >= 0;\n    const { theme } = useBlockTheme(block);\n    const [page, setPage] = useState(1);\n    const [isDelayed, setDelayed] = useState(!!delay);\n    const [isServicesModal, setIsServicesModal] = useState(false);\n    const [currentServiceIndex, setCurrentServiceIndex] = useState(0);\n    const total = block.items.length;\n    const pages = Math.ceil(total / ITEMS_PER_PAGE);\n    const hasMore = page < pages;\n    const sliced = hasMore ? block.items.slice(0, page * ITEMS_PER_PAGE) : block.items;\n\n    const handleLoadMore = useCallback(() => setPage((old) => old + 1), []);\n    const openServicesModal = useCallback(() => {\n        // const rootEl = document.querySelector('#page_root_inner, #mainRoot > div');\n        // rootEl.classList.add(styles.blurred);\n        setIsServicesModal(true);\n    }, []);\n    const closingServicesModal = useCallback(() => {\n        // const rootEl = document.querySelector('#page_root_inner, #mainRoot > div');\n        // rootEl.classList.remove(styles.blurred);\n    }, []);\n    const closeServicesModal = useCallback(() => {\n        setIsServicesModal(false);\n    }, []);\n\n    useEffect(() => {\n        if (hasSlideFromHash && !sortable) {\n            setCurrentServiceIndex(slideIndexFromHash);\n            openServicesModal();\n        }\n    }, [hasSlideFromHash]);\n\n    useTimeoutFn(() => setDelayed(false), delay);\n\n    if (isDelayed) {\n        return (\n            <BlockBase {...rest}>\n                <Spinner />\n            </BlockBase>\n        );\n    }\n\n    return (\n        <BlockBase lazy {...rest}>\n            {sliced.length ? (\n                <ul className={cn(styles.servicesList, styles[theme.gridMode])}>\n                    {sliced.map((item, index) => (\n                        <li key={item._id || index}>\n                            <ServicesGridItem\n                                item={item}\n                                themeStyles={theme}\n                                onClick={() => {\n                                    setCurrentServiceIndex(index);\n                                    openServicesModal();\n                                }}\n                            />\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <ul\n                    className={cn(styles.servicesList, styles[theme.gridMode])}\n                    style={{ opacity: 0.7, pointerEvents: 'none' }}\n                >\n                    <li>\n                        <ServicesGridItem\n                            themeStyles={theme}\n                            item={{\n                                title: __t('title'),\n                                price: { amount: 9.99, formatted: '$19.99', formattedDiscount: '$9.99' },\n                            }}\n                        />\n                    </li>\n                    <li>\n                        <ServicesGridItem\n                            themeStyles={theme}\n                            item={{\n                                title: __t('title'),\n                                price: { amount: 9.99, formatted: '$19.99', formattedDiscount: '$9.99' },\n                            }}\n                        />\n                    </li>\n                </ul>\n            )}\n\n            {hasMore && (\n                <div className={styles.moreButtonContainer}>\n                    <MoreButton\n                        onClick={handleLoadMore}\n                        style={{\n                            backgroundColor: theme.backgroundColor,\n                            color: theme.color,\n                            borderRadius: theme.borderRadius,\n                        }}\n                    />\n                </div>\n            )}\n            {isServicesModal && (\n                <ServicesModal\n                    handleHash={interactive}\n                    themeStyles={theme}\n                    contacts={block.contacts}\n                    services={block.items}\n                    activeIndex={currentServiceIndex}\n                    interactive={interactive}\n                    onClose={closeServicesModal}\n                    onClosing={closingServicesModal}\n                />\n            )}\n        </BlockBase>\n    );\n}\n\nServicesGrid.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n    delay: PropTypes.number,\n};\n\nServicesGrid.defaultProps = BlockBase.defaultProps;\n\nServicesGrid.kind = ServicesGridBlockKind;\n","import ServicesGrid from './ServicesGrid';\n\nexport default ServicesGrid;\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction SearchIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path\n                d=\"M11 19a8 8 0 100-16 8 8 0 000 16zM21 21l-4.35-4.35\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(SearchIcon);\nexport default ForwardRef;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2KH1UV2J\",\"disabled\":\"_6MqLJcxA\",\"thumbnail\":\"_1qewrm71\",\"emptyPlaceholder\":\"_2BfWiASX\",\"meta\":\"_15DjKOTm\",\"title\":\"_3nacUjt2\",\"price\":\"_2FnTybXH\",\"discountPrice\":\"_2FePtAvK\",\"lineThrough\":\"VV_yIBHb\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { IoMdImage } from 'react-icons/io';\n\nimport { __t, mediaUtils } from '@mssgme/shared';\nimport { LazyImage } from '@mssgme/ui';\n\nimport styles from './styles.scss';\n\nexport const ProductItem = ({ tag: Tag, product: { name, price, published, photoUrl }, themeStyles, ...rest }) => {\n    return (\n        <Tag className={classNames(styles.root, !published && styles.disabled)} {...rest}>\n            <div className={styles.thumbnail} style={{ backgroundColor: themeStyles.backgroundColor }}>\n                {photoUrl ? (\n                    <LazyImage src={mediaUtils.generateProductThumbnailUrl(photoUrl)} alt={name} />\n                ) : (\n                    <div className={styles.emptyPlaceholder}>\n                        <IoMdImage size=\"40%\" color=\"#fff\" />\n                    </div>\n                )}\n            </div>\n            <div className={styles.meta} style={{ color: themeStyles.color }}>\n                <span className={styles.title}>{name}</span>\n                {price && (\n                    <span className={styles.price}>\n                        {price.formattedDiscount &&\n                            (price.discount === 0 ? (\n                                <span className={styles.discountPrice}>{__t('free')}</span>\n                            ) : (\n                                <span className={styles.discountPrice}>{price.formattedDiscount}</span>\n                            ))}\n                        {price.amount === 0 ? (\n                            __t('free')\n                        ) : (\n                            <span className={price.formattedDiscount ? styles.lineThrough : null}>\n                                {price.formatted}\n                            </span>\n                        )}\n                    </span>\n                )}\n            </div>\n        </Tag>\n    );\n};\n\nProductItem.propTypes = {\n    product: PropTypes.object.isRequired,\n    themeStyles: PropTypes.object,\n    tag: PropTypes.any,\n};\n\nProductItem.defaultProps = {\n    tag: 'div',\n    themeStyles: {},\n};\n","import { BaseApi } from './baseApi';\n\nexport class ProductsApi extends BaseApi {\n    list(workspaceId, params) {\n        return this.get([`/workspaces/${workspaceId}/products`, params]);\n    }\n\n    load(workspaceId, productId) {\n        return this.get([`/workspaces/${workspaceId}/products/${productId}`]);\n    }\n\n    loadBySlug(workspaceId, productSlug, collectionId) {\n        return this.get([`/workspaces/${workspaceId}/products/${collectionId}/${productSlug}`]);\n    }\n}\n\nexport default ((options) => new ProductsApi(options))();\n","export const handleError = (error) => {\n    error = error || new Error('Unhandled error');\n\n    console.error(error);\n\n    if (window.Sentry) {\n        window.Sentry.captureException(error);\n    }\n};\n","import { useMediaQuery } from 'react-responsive';\n\nexport const MEDIA_BREAKPOINTS = {\n    desktop: { minWidth: 1025 },\n    aboveMobile: { minWidth: 768 },\n    belowDesktop: { maxWidth: 1024 },\n    tablet: { maxWidth: 1024, minWidth: 768 },\n    mobile: { maxWidth: 767 },\n};\n\nexport function useBreakpoints() {\n    const isDesktop = useMediaQuery(MEDIA_BREAKPOINTS['desktop']);\n    const isAboveMobile = useMediaQuery(MEDIA_BREAKPOINTS['aboveMobile']);\n    const isBelowDesktop = useMediaQuery(MEDIA_BREAKPOINTS['belowDesktop']);\n    const isTablet = useMediaQuery(MEDIA_BREAKPOINTS['tablet']);\n    const isMobile = useMediaQuery(MEDIA_BREAKPOINTS['mobile']);\n\n    return { isDesktop, isAboveMobile, isBelowDesktop, isTablet, isMobile };\n}\n\nexport const useIsMobile = () => {\n    return !!useMediaQuery(MEDIA_BREAKPOINTS['mobile']);\n};\n\nexport const useIsDesktop = () => {\n    return !!useMediaQuery(MEDIA_BREAKPOINTS['desktop']);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3dvk4qMK\",\"item\":\"_3awBxbh9\",\"active\":\"zyqy27XG\",\"list\":\"_2agEy5u-\",\"clipLeft\":\"_1gV7--Yd\",\"clipRight\":\"_3kz8zbIR\",\"controlContainerLeft\":\"_25EQ80Ed\",\"controlContainerRight\":\"_3JnavzXx\",\"control\":\"hhPWLPiY\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Link } from 'react-router-dom';\n\nimport { __t } from '@mssgme/shared';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { useHorizontalTabbedScroll } from '@mssgme/ui';\nimport { useBasePageColor } from '../../../../hooks';\n\nimport styles from './ButtonsMenu.scss';\n\nexport const ButtonsMenu = ({ items, interactive, activeCollectionId, theme, onSelect, ...rest }) => {\n    const { generateUrl } = useNavigationUtils();\n    const { root, hasLeftBtn, moveLeft, list, hasRightBtn, moveRight, moveTo } = useHorizontalTabbedScroll(\n        items.length\n    );\n    const { backgroundColor, backgroundDimmed, isLightBG } = useBasePageColor();\n    const baseUrl = useMemo(() => generateUrl('c'), []);\n    const themeStyle = useMemo(\n        () => ({\n            button: {\n                backgroundColor: theme.backgroundColor,\n                color: theme.productsCategoryTextColor || theme.color,\n                borderRadius: theme.borderRadius,\n            },\n            buttonActive: {\n                backgroundColor: theme.buttonBackground,\n                color: theme.buttonTextColor,\n                borderRadius: theme.borderRadius,\n            },\n            arrowButton: { color: theme.color },\n            arrowBg: { color: backgroundColor },\n        }),\n        [theme, backgroundColor, backgroundDimmed, isLightBG]\n    );\n\n    const isTabbed = theme.filterMode === 'tabs';\n    const ItemTag = interactive ? Link : 'div';\n    const handleClick = useCallback(\n        (e) => {\n            if (!isTabbed) {\n                return;\n            }\n\n            e.preventDefault();\n\n            const slug = e.target.dataset?.slug;\n            const index = items.findIndex((item) => item.slug === slug);\n            const id = items[index]?._id;\n\n            if (id === activeCollectionId) {\n                // onSelect(null);\n            } else {\n                moveTo(index);\n                onSelect(id);\n            }\n        },\n        [isTabbed, activeCollectionId, items, moveTo, onSelect]\n    );\n\n    useDeepCompareEffect(() => {\n        if (items.length) {\n            moveTo(0);\n            onSelect(items[0]._id);\n        }\n    }, [items]);\n\n    return (\n        <div className={styles.root} ref={root} {...rest}>\n            {hasLeftBtn && (\n                <div key={`le-${backgroundColor}`} className={styles.controlContainerLeft} onClick={moveLeft}>\n                    <div className={styles.control} style={themeStyle.arrowButton}>\n                        &larr;\n                    </div>\n                </div>\n            )}\n\n            <ul className={cn(styles.list, hasLeftBtn && styles.clipLeft, hasRightBtn && styles.clipRight)} ref={list}>\n                {items.map((col, index) => {\n                    const isActive = isTabbed && activeCollectionId === col._id;\n\n                    return (\n                        <li\n                            key={col._id}\n                            data-index={index}\n                            className={cn({ [styles.item]: true, [styles.active]: isActive })}\n                        >\n                            <ItemTag\n                                style={isActive ? themeStyle.buttonActive : themeStyle.button}\n                                data-slug={col.slug}\n                                onClick={handleClick}\n                                {...interactive && { to: `${baseUrl}/${col.slug}` }}\n                            >\n                                {col.default ? __t('all_products') : col.name}\n                            </ItemTag>\n                        </li>\n                    );\n                })}\n            </ul>\n\n            {hasRightBtn && (\n                <div key={`ri-${backgroundColor}`} className={styles.controlContainerRight} onClick={moveRight}>\n                    <div className={styles.control} style={themeStyle.arrowButton}>\n                        &rarr;\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nButtonsMenu.propTypes = {\n    items: PropTypes.array.isRequired,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","import { useCallback, useRef, useState } from 'react';\nimport { useMeasure, useScroll } from 'react-use';\n\nimport { useIsDesktop } from './useBreakpoints';\n\nexport const useHorizontalTabbedScroll = (items, tag = 'li') => {\n    const isDesktop = useIsDesktop();\n    const list = useRef(null);\n    const [index, setIndex] = useState(0);\n    const [root, { width }] = useMeasure();\n    const { x: listScrollX } = useScroll(list);\n\n    const listScrollWidth = (list.current && list.current.scrollWidth) || width;\n    const hasScroll = isDesktop && listScrollWidth > width;\n    const hasLeftBtn = hasScroll && listScrollX > 0;\n    const hasRightBtn = hasScroll && listScrollX + width < listScrollWidth - 1;\n\n    const moveTo = useCallback(\n        (targetIndex) => {\n            if (targetIndex < 0 || targetIndex > items - 1) {\n                return;\n            }\n\n            const parentWidth = list.current.parentElement.clientWidth;\n            const nodes = Array.from(list.current.querySelectorAll(tag));\n            let scrollPosition = 0;\n\n            for (let i = 0; i < targetIndex; i++) {\n                scrollPosition += nodes[i].clientWidth + 8;\n            }\n\n            list.current.scrollLeft = scrollPosition - (parentWidth - 32) / 2 + nodes[targetIndex].clientWidth / 2 - 4;\n            setIndex(targetIndex);\n        },\n        [items, index, listScrollWidth]\n    );\n    const moveLeft = useCallback(() => moveTo(index - 1), [moveTo]);\n    const moveRight = useCallback(() => moveTo(index + 1), [moveTo]);\n\n    return { root, hasLeftBtn, moveLeft, list, hasRightBtn, moveRight, moveTo, currentIndex: index };\n};\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction ChevronDownIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path d=\"M6 9l6 6 6-6\" stroke=\"currentColor\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nPureButton.propTypes = {\n    as: PropTypes.elementType,\n    className: PropTypes.string,\n    startIcon: PropTypes.node,\n    endIcon: PropTypes.node,\n    styles: PropTypes.shape({\n        button: PropTypes.string,\n        startIcon: PropTypes.string,\n        endIcon: PropTypes.string,\n    }),\n};\n\nPureButton.defaultProps = {\n    as: 'button',\n    styles: {},\n};\n\nexport default function PureButton({ as: Component, className, startIcon, endIcon, children, styles, ...rest }) {\n    return (\n        <Component className={cn(styles.button, className)} {...getProps(Component, rest)}>\n            {startIcon && <span className={styles.startIcon}>{startIcon}</span>}\n            {children}\n            {endIcon && <span className={styles.endIcon}>{endIcon}</span>}\n        </Component>\n    );\n}\n\nexport function getProps(el, props) {\n    const { type, disabled, ...rest } = props;\n    const out = { ...rest };\n\n    if (el === 'button') {\n        out.type = type || 'button';\n        out.disabled = disabled;\n    } else {\n        out.role = 'button';\n        out.tabIndex = '0';\n        if (disabled) out['aria-disabled'] = true;\n    }\n\n    return out;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"_1cheHu2s\",\"startIcon\":\"_3QTRIM5a\",\"endIcon\":\"bgPcNmEE\"};","import React from 'react';\nimport PureButton from './PureButton';\n\nimport styles from './TextButton.scss';\n\nexport default function TextButton(props) {\n    return <PureButton styles={styles} {...props} />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const DURATION_MAP = {\n    'extra-fast': 100,\n    fast: 200,\n    normal: 300,\n    slow: 500,\n    'extra-slow': 800,\n};\n\nexport default function createTransition(displayName, classNames) {\n    function Transition({ in: inProp, appear, duration, children, ...innerRest }) {\n        const timeout = duration in DURATION_MAP ? DURATION_MAP[duration] : duration;\n\n        const content = React.cloneElement(\n            children,\n            {\n                ...children.props,\n                style: {\n                    ...children.props.style,\n                    transitionDuration: `${timeout}ms`,\n                },\n            },\n            children.props.children\n        );\n\n        return (\n            <CSSTransition\n                unmountOnExit\n                in={inProp}\n                appear={appear}\n                timeout={timeout}\n                classNames={classNames}\n                {...innerRest}\n            >\n                {content}\n            </CSSTransition>\n        );\n    }\n\n    Transition.propTypes = {\n        in: PropTypes.bool,\n        appear: PropTypes.bool,\n        duration: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(Object.keys(DURATION_MAP))]),\n    };\n\n    Transition.defaultProps = {\n        in: false,\n        appear: false,\n        duration: 'slow',\n    };\n\n    Transition.displayName = displayName;\n\n    return Transition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"appear\":\"_32enWlY6\",\"enter\":\"_3PKh3JN6\",\"appearActive\":\"DQAGI999\",\"enterActive\":\"_2ZrdWXif\",\"exit\":\"_3x6BX_AB\",\"exitActive\":\"_2zI1LOuA\"};","import createTransition from './createTransition';\nimport styles from './Fade.scss';\n\nexport default createTransition('Fade', styles);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2dUvypCw\",\"select\":\"_5GfWMbLF\",\"button\":\"_1RWnUF4N\",\"label\":\"_146sE58Z\",\"arrow\":\"_17yoFmZR\",\"option\":\"_3-EPpWFr\",\"active\":\"_2mmR5s76\",\"optionLabel\":\"Hm8d5GxS\",\"badge\":\"yfPVOd0T\",\"dropdown\":\"_3ViuLY5O\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef } from 'react';\nimport { useClickAway, useToggle } from 'react-use';\n\nimport { __t } from '@mssgme/shared';\nimport { isMatchId } from '@mssgme/helpers';\nimport { ChevronDownIcon } from '@mssgme/icons';\nimport { Fade, TextButton } from '@mssgme/ui';\n\nimport styles from './FilterMenu.scss';\n\nexport const FilterMenuItem = ({ collection, active, onSelect }) => {\n    const handleClick = useCallback(() => onSelect(collection._id), [onSelect, collection]);\n\n    return (\n        <div className={cn(styles.option, active && styles.active)} onClick={handleClick}>\n            <span className={styles.optionLabel}>{collection.default ? __t('all_products') : collection.name}</span>\n            <span className={styles.badge}>{collection.publishedProductsCount}</span>\n        </div>\n    );\n};\n\nFilterMenuItem.propTypes = {\n    collection: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n};\n\nexport const FilterMenu = ({ items, activeCollectionId, theme, interactive, onSelect, ...rest }) => {\n    const root = useRef();\n    const [isOpen, toggle] = useToggle();\n    const selected = items.find(isMatchId(activeCollectionId));\n\n    useClickAway(root, () => toggle(false));\n\n    const handleSelect = useCallback((id) => {\n        onSelect(id);\n        toggle(false);\n    });\n\n    return (\n        <div className={styles.root} {...rest}>\n            <div className={styles.select} ref={root}>\n                <TextButton aria-pressed={isOpen} className={styles.button} onClick={toggle}>\n                    <span className={styles.label}>\n                        {selected && (selected.default ? __t('all_products') : selected.name)}\n                        {selected && <span>&nbsp;({selected?.publishedProductsCount})</span>}\n                    </span>\n                    <ChevronDownIcon size={16} className={styles.arrow} />\n                </TextButton>\n\n                <Fade in={isOpen}>\n                    <div className={styles.dropdown}>\n                        {items.map((collection) => (\n                            <FilterMenuItem\n                                key={collection._id}\n                                active={collection._id === activeCollectionId}\n                                collection={collection}\n                                onSelect={handleSelect}\n                            />\n                        ))}\n                    </div>\n                </Fade>\n            </div>\n        </div>\n    );\n};\n\nFilterMenu.propTypes = {\n    items: PropTypes.array.isRequired,\n    baseUrl: PropTypes.string.isRequired,\n    buttonStyle: PropTypes.object,\n    arrowsStyle: PropTypes.object,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { ButtonsMenu } from './ButtonsMenu';\nimport { FilterMenu } from './FilterMenu';\n\nexport function CollectionsBar({ theme, ...rest }) {\n    return theme.filterMode === 'filter' ? (\n        <FilterMenu theme={theme} {...rest} />\n    ) : (\n        <ButtonsMenu theme={theme} {...rest} />\n    );\n}\n\nCollectionsBar.propTypes = {\n    items: PropTypes.array.isRequired,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"zqQ_UzIa\",\"title\":\"_2YZlafSS\",\"list\":\"v4gRAsY4\",\"mobileMode\":\"_2d3Wg2J0\",\"empty\":\"_8ORnZ2Rf\",\"icon\":\"_149SoVjF\",\"description\":\"l6CXojOX\",\"moreBtnContainer\":\"_3OrypCfY\",\"moreBtn\":\"_3N_b-4yz\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useMountedState } from 'react-use';\nimport { get, pick } from 'lodash';\n\nimport { __t, ProductsBlockKind } from '@mssgme/shared';\nimport { cls, isMatchId, isMobile, keyHash } from '@mssgme/helpers';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { LandingsPropTypes, Spinner } from '@mssgme/ui';\nimport { SearchIcon } from '@mssgme/icons';\nimport { ProductItem } from '../../../../products';\nimport { useBlockTheme, useProductsApi, useWebsiteData } from '../../../hooks';\nimport { MoreButton } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { CollectionsBar } from './CollectionsBar';\n\nimport styles from './Products.scss';\n\nexport const Item = ({ product, baseProductUrl, fromCollection, interactive, ...rest }) => {\n    const to = useMemo(\n        () =>\n            interactive\n                ? {\n                    pathname: `${baseProductUrl}/${product.slug}`,\n                    state: { fromCollection },\n                }\n                : undefined,\n        [baseProductUrl, interactive, product]\n    );\n\n    return <ProductItem product={product} tag={interactive ? Link : 'div'} to={to} {...rest} />;\n};\n\nItem.propTypes = {\n    product: PropTypes.object.isRequired,\n    interactive: PropTypes.bool,\n    fromCollection: PropTypes.string,\n    baseProductUrl: PropTypes.string,\n    style: PropTypes.object,\n};\n\nexport default function Products({ block, interactive, isMobileMode, ...rest }) {\n    const website = useWebsiteData();\n    const isMounted = useMountedState();\n    const location = useLocation();\n    const { generateUrl } = useNavigationUtils();\n    const { theme, style } = useBlockTheme(block);\n    const collectionIds = get(block, 'collections.include', []);\n    const activeCollections = website.collections.filter((col) => col.published && col.publishedProductsCount);\n    const showCollections = collectionIds.length\n        ? collectionIds.map((id) => activeCollections.find(isMatchId(id))).filter(Boolean)\n        : activeCollections;\n    const isTabbed = theme.filterMode !== 'buttons';\n    const [activeCollectionId, setActiveCollectionId] = useState(showCollections[0]?._id || null);\n\n    const options = pick(block, ['products', 'total', 'sort']);\n    const query = useMemo(\n        () => ({\n            ...options,\n            limit: isMobile() ? 6 : 12,\n            collections: activeCollectionId && isTabbed ? { include: [activeCollectionId] } : block.collections,\n        }),\n        [website.collections, keyHash(options), activeCollectionId, isTabbed]\n    );\n    const { hasNext, isFetching, items, getProducts } = useProductsApi({\n        workspaceId: website.workspace,\n        websiteId: website._id,\n        query,\n    });\n    const handleMore = useCallback(() => getProducts(), [getProducts]);\n    const baseProductUrl = useMemo(() => generateUrl('p'), [location.pathname]);\n    const defaultStyle = useMemo(() => ({ color: theme.color }), [theme]);\n    const getFromCollection = (product) => Object.keys(product.cols || {}).find((id) => collectionIds.includes(id));\n\n    useEffect(() => {\n        const firstId = showCollections[0]?._id;\n\n        if (firstId !== activeCollectionId && !showCollections.find(isMatchId(activeCollectionId))) {\n            if (isMounted()) {\n                setActiveCollectionId(firstId);\n            }\n        }\n    }, [activeCollectionId, showCollections]);\n\n    return (\n        <BlockBase {...cls([styles.root, isMobileMode && styles.mobileMode], rest)}>\n            {!!block.title && (\n                <div className={styles.title} style={defaultStyle}>\n                    {block.title}\n                </div>\n            )}\n\n            {showCollections.length > 1 && (\n                <CollectionsBar\n                    theme={theme}\n                    style={defaultStyle}\n                    items={showCollections}\n                    interactive={interactive}\n                    activeCollectionId={activeCollectionId}\n                    onSelect={setActiveCollectionId}\n                />\n            )}\n\n            <ul className={styles.list}>\n                {items.map((product) => (\n                    <li key={product._id}>\n                        <Item\n                            product={product}\n                            interactive={interactive}\n                            baseProductUrl={baseProductUrl}\n                            fromCollection={activeCollectionId || getFromCollection(product)}\n                            themeStyles={theme}\n                            style={defaultStyle}\n                        />\n                    </li>\n                ))}\n\n                {!(items.length || isFetching) && (\n                    <li key=\"empty-list\" className={styles.empty} style={defaultStyle}>\n                        <SearchIcon className={styles.icon} size={48} />\n                        <div className={styles.description}>{__t('no_products')}</div>\n                    </li>\n                )}\n            </ul>\n\n            {isFetching ? (\n                <Spinner />\n            ) : (\n                hasNext && (\n                    <div className={styles.moreBtnContainer}>\n                        <MoreButton\n                            className={styles.moreBtn}\n                            style={style}\n                            onClick={handleMore}\n                            disabled={isFetching}\n                        />\n                    </div>\n                )\n            )}\n        </BlockBase>\n    );\n}\n\nProducts.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nProducts.defaultProps = BlockBase.defaultProps;\n\nProducts.kind = ProductsBlockKind;\n","import { useState } from 'react';\nimport { useDebounce, useMountedState } from 'react-use';\n\nimport { handleError, productsApi } from '@mssgme/lib';\nimport { useFetching } from '@mssgme/hooks';\n\nexport const useProductsApi = ({ workspaceId, websiteId, query }) => {\n    const isMounted = useMountedState();\n    const [store, setStore] = useState({ hasNext: false, next: null, publishedCount: 0, items: [], isFetching: true });\n    const { pending: isFetching, run: getProducts } = useFetching(\n        async (resetStore) => {\n            const { results, next, ...productsStore } = await productsApi.list(workspaceId, {\n                limit: query.limit,\n                next: resetStore ? null : store.next,\n                collection: query.collections.include,\n                website: websiteId,\n                published: true,\n            });\n\n            if (!isMounted()) {\n                return;\n            }\n\n            setStore((prevProducts) => {\n                const items = resetStore ? results : prevProducts.items.concat(results);\n                const hasNext = productsStore.hasNext && !(query.total && items.length >= query.total);\n\n                return {\n                    ...productsStore,\n                    next: (hasNext && next) || null,\n                    items: query.total ? items.slice(0, query.total) : items,\n                    hasNext,\n                };\n            });\n        },\n        [store.next, query]\n    );\n\n    useDebounce(() => void getProducts(true).catch(handleError), 100, [query]);\n\n    return {\n        ...store,\n        isFetching: store.isFetching || isFetching,\n        getProducts,\n    };\n};\n","import Products from './Products';\n\nexport default Products;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Eihnl-9N\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.scss';\n\nexport function Grid({ children, itemClassName }) {\n    return (\n        <ul className={styles.root}>\n            {React.Children.map(children, (item, index) => (\n                <li key={index} className={itemClassName}>\n                    {item}\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nGrid.propTypes = {\n    children: PropTypes.node,\n    itemClassName: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"_1tZ4uWus\",\"moreBtnContainer\":\"_1tySfxGC\",\"moreBtn\":\"_1Gt8GCb-\",\"animated\":\"_3SAjP8Or\",\"revealItem\":\"_30YTujS8\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\nimport { useAsyncFn, useDeepCompareEffect } from 'react-use';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { __t } from '@mssgme/shared';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { productsApi } from '@mssgme/lib';\nimport { Spinner } from '@mssgme/ui';\nimport { ProductItem } from '../../../products';\nimport { useModalThemes } from '../../hooks';\nimport { Grid, MoreButton, ThemedModal } from '../../UI';\n\nimport styles from './CollectionView.scss';\n\nexport const CollectionView = ({ workspaceId, websiteId, collection }) => {\n    const history = useHistory();\n    const { style } = useModalThemes();\n    const { generateUrl } = useNavigationUtils();\n    const [{ next, results }, setProducts] = useState({\n        next: null,\n        results: [],\n    });\n    const backPath = generateUrl('../..');\n\n    const [{ loading: isFetching }, getProducts] = useAsyncFn(\n        async (next, resetStore) => {\n            const productsStore = await productsApi.list(workspaceId, {\n                next,\n                collection: collection._id,\n                website: websiteId,\n                published: true,\n            });\n\n            setProducts((prevProducts) => ({\n                ...productsStore,\n                results: resetStore ? productsStore.results : prevProducts.results.concat(productsStore.results),\n            }));\n        },\n        [workspaceId, websiteId, collection._id]\n    );\n\n    const handleClose = useCallback(() => history.push(backPath), [backPath]);\n    const handleMore = useCallback(() => getProducts(next), [next, getProducts]);\n\n    useDeepCompareEffect(() => {\n        const initProducts = async () => {\n            await getProducts(null, true);\n        };\n\n        void initProducts();\n    }, [collection, getProducts]);\n\n    return (\n        <ThemedModal overlay title={collection.default ? __t('all_products') : collection.name} onClose={handleClose}>\n            <div className={styles.content}>\n                {results.length > 0 && (\n                    <Grid itemClassName={styles.animated}>\n                        {results.map((item) => (\n                            <ProductItem\n                                key={item._id}\n                                product={item}\n                                tag={Link}\n                                to={{\n                                    pathname: generateUrl(`../../c/${collection.slug}/p/${item.slug}`),\n                                    state: {\n                                        fromCollection: collection._id,\n                                    },\n                                }}\n                                themeStyles={style}\n                            />\n                        ))}\n                    </Grid>\n                )}\n\n                {isFetching ? (\n                    <Spinner />\n                ) : (\n                    !!next && (\n                        <div className={cn(styles.moreBtnContainer, styles.animated)}>\n                            <MoreButton\n                                className={styles.moreBtn}\n                                style={style}\n                                onClick={handleMore}\n                                disabled={isFetching}\n                            />\n                        </div>\n                    )\n                )}\n            </div>\n        </ThemedModal>\n    );\n};\n\nCollectionView.propTypes = {\n    workspaceId: PropTypes.string.isRequired,\n    websiteId: PropTypes.string,\n    isAdmin: PropTypes.bool,\n    collection: PropTypes.shape({\n        _id: PropTypes.string.isRequired,\n        slug: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        default: PropTypes.bool,\n    }).isRequired,\n};\n","import { useContext, useMemo } from 'react';\nimport { cloneDeep, merge } from 'lodash';\n\nimport { CRM_IDENTITY } from '../../products';\nimport { WebsiteDataContext } from './useWebsiteData';\n\nexport const useCRMData = () => {\n    const { crm } = useContext(WebsiteDataContext);\n\n    return useMemo(() => merge(cloneDeep(CRM_IDENTITY), crm), [crm]);\n};\n","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAsyncFn } from 'react-use';\n\nimport { productsApi } from '@mssgme/lib';\nimport { __t, MessengersBlockKind } from '@mssgme/shared';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { usePresenceRemoval } from '@mssgme/ui';\nimport { ServiceContent, ThemedModal } from '../../UI';\nimport { useCRMData, useModalThemes, useWebsiteData } from '../../hooks';\n\nconst addUrl = (product, finalUrl) => {\n    const text = encodeURIComponent(\n        `${__t('buy_template')} ${product.title || product.name} - ${finalUrl}/p/${product.slug}`\n    );\n    const ref = `buy_${product._id}_${Date.now()}_${document.documentElement.lang}`;\n    const params = {\n        text,\n        ref,\n        start: ref,\n    };\n\n    return (messenger) => {\n        return { ...messenger, params };\n    };\n};\n\nexport function ProductView({ workspaceId, defaultCollectionId, productSlug, interactive = true, ...props }) {\n    const history = useHistory();\n    const fromCollection = history.location.state?.fromCollection || defaultCollectionId;\n    const { generateUrl } = useNavigationUtils();\n    const { contentStyle } = useModalThemes();\n    const { finalUrl } = useWebsiteData();\n    const { contacts } = useCRMData();\n    const backPath = useMemo(() => generateUrl('../..'), [history.location]);\n\n    const [{ value: product, error }, getProduct] = useAsyncFn(\n        () => productsApi.loadBySlug(workspaceId, productSlug, fromCollection),\n        [workspaceId, productSlug, fromCollection]\n    );\n    const messengers = useMemo(\n        () =>\n            product && contacts.messengers.length\n                ? [\n                    {\n                        kind: MessengersBlockKind,\n                        messengers: contacts.messengers.map(addUrl(product, finalUrl)),\n                        enabled: true,\n                    },\n                ]\n                : [],\n        [contacts.messengers, product, finalUrl]\n    );\n    const is404 = error?.status === 404;\n\n    const handleClose = useCallback(() => history.push(backPath), [backPath]);\n\n    useEffect(() => {\n        if (fromCollection) {\n            void getProduct();\n        }\n    }, [productSlug, fromCollection]);\n\n    usePresenceRemoval();\n\n    return (\n        <ThemedModal overlay showHeader={!!error} title={error ? __t('error') : ''} onClose={handleClose}>\n            {(handleClose) =>\n                error ? (\n                    <div style={{ padding: 16, display: 'flex' }}>\n                        {is404 ? __t('product_not_found') : __t('no_products')}\n                    </div>\n                ) : product ? (\n                    <ServiceContent\n                        {...props}\n                        themeStyles={contentStyle}\n                        service={product}\n                        contacts={messengers}\n                        isActive\n                        isPrev={false}\n                        isNext={false}\n                        interactive={interactive}\n                        backUrl={backPath}\n                        onClose={handleClose}\n                    />\n                ) : null\n            }\n        </ThemedModal>\n    );\n}\n\nProductView.propTypes = {\n    productSlug: PropTypes.string.isRequired,\n    workspaceId: PropTypes.string.isRequired,\n    defaultCollectionId: PropTypes.string.isRequired,\n    interactive: PropTypes.bool,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ordersList\":\"_31gbTMWf\",\"orderHeader\":\"_3khO0JNN\",\"orderContent\":\"_3VDlZaSO\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { __t } from '@mssgme/shared';\nimport { usePageTheme, useSavedOrders } from '../../hooks';\nimport { ThemedModal } from '../../UI';\n\nimport styles from './UserOrdersPage.scss';\n\nexport function UserOrdersPage() {\n    const { generateUrl } = useNavigationUtils();\n    const { theme } = usePageTheme();\n    const { userOrders } = useSavedOrders();\n    const finalizedOrders = userOrders.filter((order) => order.finalized && order.feedback);\n    const shouldRenderPaymentStatus = (provider, orderStatus) => {\n        const immediate = ['cod', 'other'];\n\n        return !immediate.includes(provider) && orderStatus !== 'rejected';\n    };\n\n    return (\n        <ThemedModal overlay compact title={__t('my_orders')} onClose={generateUrl('..')} padding>\n            <ul className={styles.ordersList}>\n                {finalizedOrders.map((order) => (\n                    <li key={order._id}>\n                        <Link to={generateUrl(order._id)} style={theme.blocks.features}>\n                            <div className={styles.orderHeader}>\n                                <div>\n                                    <h2>\n                                        {__t('order_term')} #{order.feedback.order}\n                                    </h2>\n                                    <div>\n                                        <span\n                                            style={{\n                                                color: theme.colors.background,\n                                                backgroundColor: theme.colors.text,\n                                            }}\n                                        >\n                                            {__t(`order_status_${order.feedback.status}`)}\n                                        </span>\n                                        {shouldRenderPaymentStatus(order.paymentMethod, order.feedback.status) && (\n                                            <span\n                                                style={{\n                                                    color: theme.colors.background,\n                                                    backgroundColor: theme.colors.text,\n                                                }}\n                                            >\n                                                {__t(`payment_status_${order.status}`)}\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                                <div>\n                                    <div>\n                                        <span>{new Date(order.feedback.timestamp).toLocaleDateString()}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={styles.orderContent}>\n                                <div>\n                                    <h3>{__t('products')}</h3>\n                                    <span>\n                                        {order.items.map((item) => `${item.name} x${item.quantity}`).join(', ')}\n                                    </span>\n                                </div>\n                                <div>\n                                    {order.total.amount} {order.total.currency}\n                                </div>\n                            </div>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </ThemedModal>\n    );\n}\n","import { useMemo } from 'react';\n\nimport { useCRMData } from './useCRMData';\n\nexport const immediateCompletion = ['cod', 'other', 'transfer'];\nexport const handlesPaymentsStatus = (provider) => !immediateCompletion.includes(provider);\n\nexport const usePaymentConfigs = () => {\n    const { payments } = useCRMData();\n\n    return useMemo(() => {\n        const providers = Object.entries(payments || {}).filter(([, config]) => config.enabled);\n        const immediate = [];\n        const online = [];\n\n        for (const entry of providers) {\n            if (handlesPaymentsStatus(entry[0])) {\n                online.push(entry);\n            } else {\n                immediate.push(entry);\n            }\n        }\n\n        return {\n            payments,\n            providers,\n            immediate,\n            online,\n            isSingular: providers.length <= 1,\n            isSingularOnline: online.length <= 1,\n        };\n    }, [payments]);\n};\n","import { FaPaypal, FaStripe } from 'react-icons/fa';\nimport { FiChevronsRight } from 'react-icons/fi';\nimport { MdPayment } from 'react-icons/md';\n\nexport const PAYMENT_PROVIDERS = {\n    stripe: {\n        label: 'Stripe',\n        icon: FaStripe,\n    },\n    liqpay: {\n        label: 'LiqPay',\n        icon: FiChevronsRight,\n    },\n    paypal: {\n        label: 'PayPal',\n        icon: FaPaypal,\n        supported_currencies: [\n            'AUD',\n            'BRL',\n            'CAD',\n            'CNY',\n            'CZK',\n            'DKK',\n            'EUR',\n            'HKD',\n            'HUF',\n            'ILS',\n            'JPY',\n            'MYR',\n            'MXN',\n            'TWD',\n            'NZD',\n            'NOK',\n            'PHP',\n            'PLN',\n            'GBP',\n            'RUB',\n            'SGD',\n            'SEK',\n            'CHF',\n            'THB',\n            'USD',\n        ],\n    },\n    wayforpay: {\n        label: 'Wayforpay',\n        icon: MdPayment,\n    },\n    robokassa: {\n        label: 'Robokassa',\n        icon: MdPayment,\n    },\n};\n","import React from 'react';\n\nimport { __t, PAYMENT_PROVIDERS } from '@mssgme/shared';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useModalThemes, usePaymentConfigs } from '../../hooks';\nimport { ThemedButton } from '../../UI';\n\nexport const PayButton = ({ provider, ...props }) => {\n    const { isSingular } = usePaymentConfigs();\n    const { contentStyle } = useModalThemes();\n    const label = PAYMENT_PROVIDERS[provider]?.label || provider;\n    const Icon = PAYMENT_PROVIDERS[provider]?.icon;\n\n    return (\n        <ThemedButton\n            fullWidth\n            tag=\"button\"\n            type=\"submit\"\n            beforeIcon={Icon && <Icon size={24} />}\n            theme={contentStyle}\n            contentAlignLeft\n            {...props}\n        >\n            {__t(isSingular ? 'pay' : 'payWith', { provider: label })}\n        </ThemedButton>\n    );\n};\n\nPayButton.propTypes = {\n    provider: LandingsPropTypes.paymentMethod,\n};\n","import PropTypes from 'prop-types';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useAsync, useMountedState } from 'react-use';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { pick } from 'lodash';\n\nimport { FormErrors } from '@mssgme/ui';\nimport { useFrontAPI, useInputTheme } from '../hooks';\nimport { PayButton } from './PayButton';\n\nimport styles from './StripeCheckoutForm.scss';\n\nconst CARD_OPTIONS = {\n    hidePostalCode: true,\n    iconStyle: 'solid',\n    classes: {\n        base: styles.cardBase,\n        webkitAutofill: styles.cardAutofill,\n    },\n};\n\nconst propTypes = {\n    orderId: PropTypes.string.isRequired,\n    onPay: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n};\n\nfunction StripeCheckoutForm({ orderId, disabled: rawDisabled, onPay }) {\n    const stripe = useStripe();\n    const elements = useElements();\n    const api = useFrontAPI();\n    const isMounted = useMountedState();\n    const inputStyles = useInputTheme();\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [error, setError] = useState(null);\n\n    const { style, options } = useMemo(\n        () => ({\n            options: {\n                ...CARD_OPTIONS,\n                disabled: processing || succeeded,\n                style: {\n                    base: {\n                        iconColor: inputStyles.input.color,\n                        color: inputStyles.input.color,\n                        // ...pick(inputStyles.input, ['backgroundColor', 'color']),\n                        '::placeholder': pick(inputStyles.input, ['backgroundColor', 'color']),\n                        '::selection': { backgroundColor: 'currentColor' },\n                        ':-webkit-autofill': {\n                            color: inputStyles.input.color,\n                        },\n                    },\n                },\n            },\n            style: {\n                ...inputStyles.input,\n                overflow: 'hidden',\n            },\n        }),\n        [processing, succeeded, inputStyles.input]\n    );\n\n    const { value: clientSecret } = useAsync(\n        async () => (await api.orders.signatures.createStripePaymentIntent({ orderId })).clientSecret,\n        [orderId]\n    );\n\n    const isDisabled = processing || disabled || succeeded || rawDisabled || !clientSecret;\n\n    const handleSubmit = useCallback(\n        async (e) => {\n            e.preventDefault();\n            setProcessing(true);\n\n            try {\n                const payload = await stripe.confirmCardPayment(clientSecret, {\n                    payment_method: {\n                        card: elements.getElement(CardElement),\n                    },\n                });\n\n                setError(payload.error ? `Payment failed ${payload.error.message}` : null);\n\n                if (!payload.error) {\n                    setSucceeded(true);\n\n                    onPay('stripe', payload);\n                }\n            } finally {\n                if (isMounted()) {\n                    setProcessing(false);\n                }\n            }\n        },\n        [stripe, elements, clientSecret, onPay]\n    );\n\n    const handleChange = useCallback(async (e) => {\n        setDisabled(e.empty || !!e.error);\n        setError(e.error ? e.error.message : '');\n    });\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div style={style}>\n                <CardElement onChange={handleChange} options={options} />\n            </div>\n            {error && <FormErrors error={error} shake errorStyle={inputStyles.error} />}\n\n            <PayButton disabled={isDisabled} provider=\"stripe\" style={{ marginTop: 16 }} contentAlignLeft={false} />\n        </form>\n    );\n}\n\nStripeCheckoutForm.propTypes = propTypes;\n\nexport default StripeCheckoutForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardBase\":\"_2MpdUitw\",\"cardInvalid\":\"_2N6SmSfD\",\"cardAutofill\":\"_2hSkXJ0_\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2DOo0XIe\",\"overlapButton\":\"_3M8clJzy\"};","import PropTypes from 'prop-types';\nimport React, { Fragment, useEffect, useMemo, useState } from 'react';\nimport { PayButton } from '../../../PayButton';\n\nconst CURRENCIES = ['UAH', 'USD', 'EUR', 'RUB'];\nconst PAYMENT_URL = 'https://secure.wayforpay.com/pay';\n\nconst productShape = PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    count: PropTypes.number.isRequired,\n});\n\nconst propTypes = {\n    merchantAccount: PropTypes.string.isRequired,\n    merchantDomainName: PropTypes.string,\n    orderReference: PropTypes.string.isRequired,\n    orderDate: PropTypes.number.isRequired,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.oneOf(CURRENCIES),\n    products: PropTypes.arrayOf(productShape).isRequired,\n    returnUrl: PropTypes.string,\n    serviceUrl: PropTypes.string,\n    disabled: PropTypes.bool,\n    createSignature: PropTypes.func.isRequired,\n    orderPaymentTimeout: PropTypes.number,\n};\n\nconst defaultProps = {\n    merchantDomainName: document.location.hostname,\n    orderPaymentTimeout: 0,\n};\n\nfunction WayforpayButton({\n    merchantAccount,\n    merchantDomainName,\n    orderReference,\n    orderDate,\n    amount,\n    currency,\n    products,\n    returnUrl,\n    serviceUrl,\n    createSignature,\n    orderPaymentTimeout,\n    disabled: rawDisabled,\n}) {\n    const productName = useMemo(() => products.map(({ name }) => name), [products]);\n    const productPrice = useMemo(() => products.map(({ price }) => price), [products]);\n    const productCount = useMemo(() => products.map(({ count }) => count), [products]);\n    const [merchantSignature, setMerchantSignature] = useState('');\n    const [disabled, setDisabled] = useState(true);\n    const isDisabled = disabled || rawDisabled;\n\n    useEffect(() => {\n        async function request() {\n            if (!rawDisabled) {\n                setDisabled(true);\n\n                try {\n                    const json = await createSignature({\n                        merchantAccount,\n                        merchantDomainName,\n                        orderReference,\n                        orderDate,\n                        amount,\n                        currency,\n                        productName,\n                        productPrice,\n                        productCount,\n                    });\n\n                    setMerchantSignature(json.merchantSignature);\n                } finally {\n                    setDisabled(false);\n                }\n            }\n        }\n\n        void request();\n    }, [\n        merchantAccount,\n        merchantDomainName,\n        orderReference,\n        orderDate,\n        amount,\n        currency,\n        productName,\n        productPrice,\n        productCount,\n        createSignature,\n    ]);\n\n    return (\n        <form method=\"POST\" action={PAYMENT_URL}>\n            <input type=\"hidden\" name=\"merchantAccount\" value={merchantAccount} />\n            <input type=\"hidden\" name=\"merchantDomainName\" value={merchantDomainName} />\n            <input type=\"hidden\" name=\"merchantSignature\" value={merchantSignature} />\n            <input type=\"hidden\" name=\"merchantTransactionType\" value=\"AUTO\" />\n            <input type=\"hidden\" name=\"merchantTransactionSecureType\" value=\"AUTO\" />\n            <input type=\"hidden\" name=\"orderReference\" value={orderReference} />\n            <input type=\"hidden\" name=\"orderDate\" value={orderDate} />\n            <input type=\"hidden\" name=\"amount\" value={amount} />\n            <input type=\"hidden\" name=\"currency\" value={currency} />\n            <input type=\"hidden\" name=\"orderTimeout\" value={orderPaymentTimeout} />\n            <input type=\"hidden\" name=\"orderLifetime\" value={orderPaymentTimeout} />\n            {productName.map((name, index) => (\n                <Fragment key={index}>\n                    <input type=\"hidden\" name=\"productName[]\" value={name} />\n                </Fragment>\n            ))}\n            {productPrice.map((price, index) => (\n                <Fragment key={index}>\n                    <input type=\"hidden\" name=\"productPrice[]\" value={price} />\n                </Fragment>\n            ))}\n            {productCount.map((count, index) => (\n                <Fragment key={index}>\n                    <input type=\"hidden\" name=\"productCount[]\" value={count} />\n                </Fragment>\n            ))}\n            {returnUrl && <input type=\"hidden\" name=\"returnUrl\" value={returnUrl} />}\n            {serviceUrl && <input type=\"hidden\" name=\"serviceUrl\" value={serviceUrl} />}\n\n            <PayButton disabled={isDisabled} provider=\"wayforpay\" />\n        </form>\n    );\n}\n\nWayforpayButton.propTypes = propTypes;\nWayforpayButton.defaultProps = defaultProps;\n\nexport default WayforpayButton;\n","import PropTypes from 'prop-types';\nimport React, { useCallback, useMemo } from 'react';\n// import moment from 'moment';\n\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { BACKEND_ENDPOINTS, useCRMData, useFrontAPI, useWebsiteData } from '../../../hooks';\nimport WayforpayButton from './Buttons/WayforpayButton';\n\nconst propTypes = {\n    order: LandingsPropTypes.order.isRequired,\n    disabled: PropTypes.bool,\n};\n\nfunction extractProduct({ name, price, quantity }) {\n    return { name, price: price.amount, count: quantity };\n}\n\nexport function WayforpayPayment({ order, disabled }) {\n    const { finalUrl } = useWebsiteData();\n    const { payments } = useCRMData();\n    const api = useFrontAPI();\n    /*\n     * TODO: generate orderReference considering order timeout to avoid duplicated orders in wayforpay personal\n     *       cabinet (need more logic in cart and crm for that)\n     */\n    // const orderPaymentTimeout = 86400; // 1 day\n    // const orderCreatedInLocalTime = moment\n    //     .utc(order.createdAt)\n    //     .local()\n    //     .unix();\n    // const isOrderPaymentDead = Math.round(Date.now() / 1000) - orderCreatedInLocalTime > orderPaymentTimeout;\n    const orderReference = `${order._id}_uniq${Math.floor(Math.random() * 100000)}`;\n    const orderDate = useMemo(() => Math.round(Date.now() / 1000), []);\n    const products = useMemo(() => order.items.map(extractProduct), [order]);\n    const createSignature = useCallback(\n        (payload) => api.orders.signatures.createWayforpaySignature({ orderId: order._id, payload }),\n        [order._id]\n    );\n    const returnUrl = BACKEND_ENDPOINTS.getWayforpayCallback(order);\n\n    return (\n        <WayforpayButton\n            merchantAccount={payments.wayforpay.merchantAccount}\n            merchantDomainName={finalUrl}\n            orderReference={orderReference}\n            orderDate={orderDate}\n            amount={order.total.amount}\n            currency={order.total.currency}\n            products={products}\n            createSignature={createSignature}\n            returnUrl={returnUrl}\n            disabled={disabled}\n            // orderPaymentTimeout={orderPaymentTimeout}\n        />\n    );\n}\n\nWayforpayPayment.propTypes = propTypes;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n\nimport { PayButton } from '../../../PayButton';\n\nconst CURRENCIES = ['USD', 'EUR', 'RUB', 'KZT'];\nconst PAYMENT_URL = 'https://auth.robokassa.ru/Merchant/Index.aspx';\n\nconst propTypes = {\n    merchantLogin: PropTypes.string.isRequired,\n    invId: PropTypes.string.isRequired,\n    outSum: PropTypes.number.isRequired,\n    outSumCurrency: PropTypes.oneOf(CURRENCIES),\n    createSignature: PropTypes.func.isRequired,\n    isTest: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n    outSumCurrency: 'RUB',\n    isTest: false,\n};\n\nfunction RobokassaButton({\n    merchantLogin,\n    invId,\n    outSum,\n    outSumCurrency,\n    createSignature,\n    disabled: rawDisabled,\n    isTest,\n}) {\n    const [signature, setSignature] = useState('');\n    const [disabled, setDisabled] = useState(true);\n    const isDisabled = disabled || rawDisabled;\n\n    useEffect(() => {\n        async function request() {\n            setDisabled(true);\n\n            try {\n                const json = await createSignature({});\n\n                setSignature(json.signature);\n            } finally {\n                setDisabled(false);\n            }\n        }\n        void request();\n    }, []);\n\n    return (\n        <form method=\"POST\" action={PAYMENT_URL}>\n            <input type=\"hidden\" name=\"MerchantLogin\" value={merchantLogin} />\n            <input type=\"hidden\" name=\"InvId\" value={invId} />\n            <input type=\"hidden\" name=\"SignatureValue\" value={signature} />\n            <input type=\"hidden\" name=\"OutSum\" value={outSum} />\n            <input type=\"hidden\" name=\"OutSumCurrency\" value={outSumCurrency} />\n            {isTest && <input type=\"hidden\" name=\"IsTest\" value=\"1\" />}\n\n            <PayButton disabled={isDisabled} provider=\"robokassa\" />\n        </form>\n    );\n}\n\nRobokassaButton.propTypes = propTypes;\nRobokassaButton.defaultProps = defaultProps;\n\nexport default RobokassaButton;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { encode } from 'js-base64';\n\nimport { PayButton } from '../../../PayButton';\n\nconst CURRENCIES = ['USD', 'EUR', 'RUB', 'UAH', 'BYN', 'KZT'];\nconst PAYMENT_URL = 'https://www.liqpay.ua/api/3/checkout';\nconst ACTIONS = ['pay', 'hold', 'subscribe', 'paydonate', 'auth'];\nconst VERSION = 3;\n\nconst propTypes = {\n    publicKey: PropTypes.string.isRequired,\n    action: PropTypes.oneOf(ACTIONS),\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.oneOf(CURRENCIES).isRequired,\n    description: PropTypes.string.isRequired,\n    orderId: PropTypes.string.isRequired,\n    resultUrl: PropTypes.string,\n    serverUrl: PropTypes.string,\n    disabled: PropTypes.bool,\n    createSignature: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n    action: ACTIONS[0],\n};\n\nfunction LiqpayButton({\n    publicKey,\n    action,\n    amount,\n    currency,\n    description,\n    orderId,\n    createSignature,\n    resultUrl,\n    serverUrl,\n    disabled: rawDisabled,\n}) {\n    const [disabled, setDisabled] = useState(true);\n    const [signature, setSignature] = useState('');\n    const isDisabled = disabled || rawDisabled;\n\n    const data = useMemo(() => {\n        const params = {\n            public_key: publicKey,\n            version: VERSION,\n            action,\n            amount,\n            currency,\n            description,\n            order_id: orderId,\n        };\n        if (resultUrl) params['result_url'] = resultUrl;\n        if (serverUrl) params['server_url'] = serverUrl;\n\n        return encode(JSON.stringify(params));\n    }, [publicKey, action, amount, currency, description, orderId]);\n\n    useEffect(() => {\n        async function request() {\n            if (!rawDisabled) {\n                setDisabled(true);\n\n                try {\n                    const json = await createSignature({ data });\n\n                    setSignature(json.signature);\n                } finally {\n                    setDisabled(false);\n                }\n            }\n        }\n\n        void request();\n    }, [data]);\n\n    return (\n        <form method=\"POST\" action={PAYMENT_URL}>\n            <input type=\"hidden\" name=\"data\" value={data} />\n            <input type=\"hidden\" name=\"signature\" value={signature} />\n\n            <PayButton disabled={isDisabled} provider=\"liqpay\" />\n        </form>\n    );\n}\n\nLiqpayButton.propTypes = propTypes;\nLiqpayButton.defaultProps = defaultProps;\n\nexport default LiqpayButton;\n","import { FiChevronsRight, FiTruck } from 'react-icons/fi';\nimport { FaMoneyBillAlt, FaPaypal, FaStripe } from 'react-icons/fa';\n\nimport { CashOnDeliveryPayment } from './CashOnDeliveryPayment';\nimport { StripePayment } from './StripePayment';\nimport { PayPalPayment } from './PayPalPayment';\nimport { WayforpayPayment } from './WayforpayPayment';\nimport { RobokassaPayment } from './RobokassaPayment';\nimport { LiqpayPayment } from './LiqpayPayment';\nimport { OtherPayment } from './OtherPayment';\n\nexport const PAYMENT_PROVIDERS = [\n    { provider: 'cod', icon: FiTruck },\n    { provider: 'paypal', icon: FaPaypal },\n    { provider: 'stripe', icon: FaStripe },\n    { provider: 'wayforpay', icon: FaMoneyBillAlt },\n    // { provider: 'robokassa', icon: FaMoneyBillAlt },\n    { provider: 'liqpay', icon: FiChevronsRight },\n    // { provider: 'other', icon: FaMoneyBillAlt },\n];\n\nexport const PAYMENT_PROVIDER_RENDERERS = {\n    cod: CashOnDeliveryPayment,\n    stripe: StripePayment,\n    paypal: PayPalPayment,\n    wayforpay: WayforpayPayment,\n    robokassa: RobokassaPayment,\n    liqpay: LiqpayPayment,\n    other: OtherPayment,\n};\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\n\nimport { __t } from '@mssgme/shared';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useModalThemes } from '../../../hooks';\nimport { ThemedButton } from '../../../UI';\n\nconst propTypes = {\n    order: LandingsPropTypes.order.isRequired,\n    onPay: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n};\n\nexport function CashOnDeliveryPayment({ disabled, onPay }) {\n    const { contentStyle } = useModalThemes();\n\n    const handleOrder = useCallback(() => onPay('cod'), [onPay]);\n\n    return (\n        <ThemedButton fullWidth theme={contentStyle} disabled={disabled} onClick={handleOrder}>\n            {__t('make_order')}\n        </ThemedButton>\n    );\n}\n\nCashOnDeliveryPayment.propTypes = propTypes;\n","import PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js/pure';\nimport { useToggle } from 'react-use';\n\nimport { __t, PAYMENT_PROVIDERS } from '@mssgme/shared';\nimport { useModalThemes, usePaymentConfigs } from '../../../hooks';\nimport { ThemedButton, ThemedModal } from '../../../UI';\nimport StripeCheckoutForm from '../../StripeCheckoutForm';\n\nconst propTypes = {\n    order: PropTypes.object.isRequired,\n    onPay: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n};\n\nexport function StripePayment({ order, disabled, onPay }) {\n    const { icon: Icon, label } = PAYMENT_PROVIDERS.stripe;\n    const { payments, isSingularOnline } = usePaymentConfigs();\n    const { contentStyle } = useModalThemes();\n    const [isModal, toggleModal] = useToggle(false);\n    const stripePromise = useMemo(() => loadStripe(payments.stripe.publicKey), [payments.stripe.publicKey]);\n\n    const elements = (\n        <Elements stripe={stripePromise}>\n            <StripeCheckoutForm orderId={order._id} disabled={disabled} onPay={onPay} />\n        </Elements>\n    );\n\n    if (isSingularOnline) {\n        return elements;\n    }\n\n    return (\n        <ThemedButton\n            fullWidth\n            beforeIcon={<Icon size={24} />}\n            theme={contentStyle}\n            disabled={disabled}\n            onClick={toggleModal}\n            contentAlignLeft\n        >\n            {__t('payWith', { provider: label })}\n\n            {isModal && (\n                <ThemedModal compact overlay padding title={label} onClose={toggleModal}>\n                    {elements}\n                </ThemedModal>\n            )}\n        </ThemedButton>\n    );\n}\n\nStripePayment.propTypes = propTypes;\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { PayPalButtons, PayPalScriptProvider } from '@paypal/react-paypal-js';\n\nimport { __t, PAYMENT_PROVIDERS } from '@mssgme/shared';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { ThemedButton } from '../../../UI';\nimport { useCRMData, useModalThemes } from '../../../hooks';\n\n// paypal buttons docs: https://paypal.github.io/react-paypal-js\n\nimport styles from './PayPalPayment.scss';\n\nconst propTypes = {\n    order: LandingsPropTypes.order.isRequired,\n    onPay: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n};\n\nexport function PayPalPayment({\n    order: {\n        total,\n        items,\n        contactInfo: { firstName, lastName },\n    },\n    disabled,\n    onPay,\n}) {\n    const { icon: Icon, label, supported_currencies } = PAYMENT_PROVIDERS.paypal;\n    const { payments } = useCRMData();\n    const { contentStyle } = useModalThemes();\n    const isSupportedCurrency = supported_currencies.includes(total.currency);\n\n    const createOrder = useCallback(\n        (data, actions) =>\n            actions.order.create({\n                purchase_units: [\n                    {\n                        amount: {\n                            currency_code: total.currency,\n                            value: total.amount,\n                            breakdown: {\n                                item_total: {\n                                    currency_code: total.currency,\n                                    value: total.amount,\n                                },\n                            },\n                        },\n                        payer: {\n                            name: {\n                                given_name: firstName,\n                                surname: lastName,\n                            },\n                        },\n                        items: items.map(({ name, price, quantity }) => ({\n                            name,\n                            unit_amount: {\n                                currency_code: price.currency,\n                                value: price.amount,\n                            },\n                            quantity,\n                        })),\n                    },\n                ],\n            }),\n        [total]\n    );\n\n    const onApprove = useCallback(\n        async (data, actions) => {\n            const details = await actions.order.capture();\n            await onPay('paypal', details);\n        },\n        [onPay]\n    );\n\n    return (\n        <div className={styles.root}>\n            <ThemedButton\n                fullWidth\n                beforeIcon={<Icon size={24} />}\n                theme={contentStyle}\n                disabled={disabled || !isSupportedCurrency}\n                className={styles.overlapButton}\n                contentAlignLeft\n            >\n                {__t('payWith', { provider: label })}\n            </ThemedButton>\n\n            {isSupportedCurrency && (\n                <PayPalScriptProvider options={{ 'client-id': payments.paypal.clientId, currency: total.currency }}>\n                    <PayPalButtons\n                        style={{ layout: 'horizontal', tagline: false }}\n                        disabled={disabled}\n                        createOrder={createOrder}\n                        onApprove={onApprove}\n                    />\n                </PayPalScriptProvider>\n            )}\n        </div>\n    );\n}\n\nPayPalPayment.propTypes = propTypes;\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\n\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useCRMData, useFrontAPI } from '../../../hooks';\nimport RobokassaButton from './Buttons/RobokassaButton';\n\nconst propTypes = {\n    order: LandingsPropTypes.order.isRequired,\n    disabled: PropTypes.bool,\n};\n\nexport function RobokassaPayment({ order, disabled }) {\n    const api = useFrontAPI();\n    const {\n        payments: {\n            robokassa: { merchantLogin, test: isTest },\n        },\n    } = useCRMData();\n    const createSignature = useCallback(\n        (payload) => api.orders.signatures.createRobokassaSignature({ orderId: order._id, payload }),\n        [order._id]\n    );\n\n    return (\n        <RobokassaButton\n            merchantLogin={merchantLogin}\n            outSum={order.total.amount}\n            outSumCurrency={order.total.currency}\n            invId={order._id}\n            createSignature={createSignature}\n            disabled={disabled}\n            isTest={isTest}\n        />\n    );\n}\n\nRobokassaPayment.propTypes = propTypes;\n","import PropTypes from 'prop-types';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { __t } from '@mssgme/shared';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useCRMData, useFrontAPI, BACKEND_ENDPOINTS, useWebsiteData } from '../../../hooks';\nimport LiqpayButton from './Buttons/LiqpayButton';\n\nconst propTypes = {\n    order: LandingsPropTypes.order.isRequired,\n    disabled: PropTypes.bool,\n};\n\nexport function LiqpayPayment({ order, disabled }) {\n    const api = useFrontAPI();\n    const orderReference = `${order._id}_uniq${Math.floor(Math.random() * 100000)}`;\n    const { payments } = useCRMData();\n    const { finalUrl } = useWebsiteData();\n    const description = `${__t('payment_for_order')}${order._id}:\\n\\n${order.items\n        .map(\n            (product, index) =>\n                `${index + 1}. ${product.name} ${product.quantity}x${product.price.amount}${product.price.currency}\\n`\n        )\n        .join('')}\\n\\n${finalUrl}`;\n    const { successUrl, serverUrl } = useMemo(\n        () => ({\n            successUrl: document.location.href,\n            serverUrl: BACKEND_ENDPOINTS.getLiqPayCallback(order),\n        }),\n        [order]\n    );\n\n    const createSignature = useCallback(\n        (payload) => api.orders.signatures.createLiqpaySignature({ orderId: order._id, payload }),\n        [order._id]\n    );\n\n    return (\n        <LiqpayButton\n            publicKey={payments.liqpay.publicKey}\n            amount={order.total.amount}\n            currency={order.total.currency}\n            orderId={orderReference}\n            description={description}\n            createSignature={createSignature}\n            resultUrl={successUrl}\n            serverUrl={serverUrl}\n            disabled={disabled}\n        />\n    );\n}\n\nLiqpayPayment.propTypes = propTypes;\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { useToggle } from 'react-use';\n\nimport { __t } from '@mssgme/shared';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useCRMData, useModalThemes } from '../../../hooks';\nimport { ThemedButton, ThemedModal } from '../../../UI';\n\nconst propTypes = {\n    order: LandingsPropTypes.order.isRequired,\n    onPay: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n};\n\nexport function OtherPayment({ order, disabled, onPay }) {\n    const { payments } = useCRMData();\n    const { contentStyle } = useModalThemes();\n    const [isModal, toggleModal] = useToggle();\n\n    const handleOrder = useCallback(() => onPay('other'), [onPay]);\n    const handleModal = useCallback(() => {\n        if (payments.other.instructions) {\n            toggleModal(true);\n        } else {\n            handleOrder();\n        }\n    }, [payments.other.instructions, toggleModal]);\n\n    return (\n        <div>\n            <ThemedButton fullWidth theme={contentStyle} disabled={disabled} onClick={handleModal}>\n                {__t('make_order')}\n            </ThemedButton>\n\n            {isModal && (\n                <ThemedModal compact overlay padding title={__t('payments_instructions')} onClose={toggleModal}>\n                    {(handleClose) => (\n                        <div>\n                            <div style={{ whiteSpace: 'pre-wrap' }}>{payments.other.instructions}</div>\n\n                            <ThemedButton fullWidth theme={contentStyle} disabled={disabled} onClick={handleClose}>\n                                {__t('make_order')}\n                            </ThemedButton>\n                        </div>\n                    )}\n                </ThemedModal>\n            )}\n        </div>\n    );\n}\n\nOtherPayment.propTypes = propTypes;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_31v2e_-j\",\"pane\":\"_3kogH2CO\",\"products\":\"_2OMwWxnQ\",\"messengers\":\"_2H0GXi2n\",\"sectionHeading\":\"b6TQL0Qx\",\"buttons\":\"_10pWsvHs\",\"paymentButtons\":\"_36syB53y\"};","import PropTypes from 'prop-types';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useAsync, useAsyncFn, useToggle } from 'react-use';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport cn from 'classnames';\n\nimport { __t, MessengersBlockKind } from '@mssgme/shared';\nimport { NotFoundError } from '@mssgme/api-client';\nimport { useBooleanHandler, useNavigationUtils } from '@mssgme/hooks';\nimport {\n    handlesPaymentsStatus,\n    useCRMData,\n    useFrontAPI,\n    useModalThemes,\n    usePageTheme,\n    usePaymentConfigs,\n    useRenderer,\n} from '../../hooks';\nimport { ThemedButton, ThemedModal } from '../../UI';\nimport { PAYMENT_PROVIDER_RENDERERS } from '../OrderPage';\n\nimport styles from './UserOrderPage.scss';\n\nUserOrderPage.propTypes = {\n    orderId: PropTypes.string.isRequired,\n};\n\nexport function UserOrderPage({ orderId }) {\n    const api = useFrontAPI();\n    const payments = usePaymentConfigs();\n    const renderBlock = useRenderer();\n    const { generateUrl } = useNavigationUtils();\n    const { contacts } = useCRMData();\n    const { theme } = usePageTheme();\n    const { contentStyle } = useModalThemes();\n    const [order, setOrder] = useState(null);\n    const [orderLoadCount, setOrderLoadCount] = useState(0);\n    const [isPayNowModal, togglePayNowModal] = useToggle(false);\n    const [isShowingCancelPrompt, showCancelPrompt, hideCancelPrompt] = useBooleanHandler();\n\n    const { loading: orderLoading, error, value: loadedOrder } = useAsync(\n        () => api.orders.show({ orderId, query: { complete: true } }),\n        [orderId, orderLoadCount]\n    );\n    const messengers = useMemo(\n        () => (contacts.messengers.length ? [{ kind: MessengersBlockKind, messengers: contacts.messengers }] : []),\n        [contacts.messengers]\n    );\n    const { immediate, online } = useMemo(() => {\n        const mapper = ([provider]) => [provider, PAYMENT_PROVIDER_RENDERERS[provider]];\n\n        return {\n            immediate: payments.immediate.map(mapper),\n            online: payments.online.map(mapper),\n        };\n    }, [payments]);\n    const [{ loading: finalizeLoading }, handlePay] = useAsyncFn(\n        async (paymentMethod) => {\n            await api.orders.finalize({ orderId, payload: { paymentMethod } });\n            togglePayNowModal();\n            setOrderLoadCount((old) => old + 1);\n        },\n        [orderId]\n    );\n    const [{ loading: cancelLoading }, handleCancelOrder] = useAsyncFn(async () => {\n        await api.orders.cancel({ orderId });\n        hideCancelPrompt();\n        setOrderLoadCount((old) => old + 1);\n    }, [orderId]);\n\n    useEffect(() => {\n        if (loadedOrder) {\n            setOrder(loadedOrder);\n        }\n    }, [loadedOrder]);\n\n    if (!order || !order.finalized) {\n        return null;\n    }\n\n    const loading = finalizeLoading || orderLoading || cancelLoading;\n    const isJustOneOnlinePaymentMethod = !immediate.length && online.length === 1;\n    const onlineElements = online.map(\n        ([key, Renderer]) => order && <Renderer key={key} order={order} disabled={loading} onPay={handlePay} />\n    );\n\n    return (\n        <ThemedModal\n            overlay\n            compact\n            padding\n            title={`${__t('order_term')} #${order.feedback.order}`}\n            onClose={generateUrl('..')}\n        >\n            <div className={styles.root}>\n                {error ? (\n                    <div>{NotFoundError.is(error) ? __t('order_not_found') : error.message}</div>\n                ) : (\n                    <div>\n                        <div className={styles.pane} style={theme.blocks.features}>\n                            <div>\n                                <div>{__t('order_status')}</div>\n                                <div>{__t(`order_status_${order.feedback.status}`)}</div>\n                            </div>\n                            {handlesPaymentsStatus(order.paymentMethod) && (\n                                <div>\n                                    <div>{__t('payment_status')}</div>\n                                    <div>{__t(`payment_status_${order.status}`)}</div>\n                                </div>\n                            )}\n                        </div>\n                        <h3 className={styles.sectionHeading}>{__t('your_contacts')}</h3>\n                        <div className={styles.pane} style={theme.blocks.features}>\n                            <div>\n                                <div>{__t('name')}</div>\n                                <div>\n                                    {order.contactInfo.lastName} {order.contactInfo.firstName}\n                                </div>\n                            </div>\n                            <div>\n                                <div>{__t('phone')}</div>\n                                <div>{order.contactInfo.phoneNumber}</div>\n                            </div>\n                            {order.shippingAddress && (\n                                <div>\n                                    <div>{__t('shipping')}</div>\n                                    <div>\n                                        {[\n                                            order.shippingAddress.city,\n                                            order.shippingAddress.state,\n                                            order.shippingAddress.address,\n                                            order.shippingAddress.postalCode,\n                                        ]\n                                            .filter(Boolean)\n                                            .join(', ')}\n                                    </div>\n                                </div>\n                            )}\n                            {order.contactInfo.comment && (\n                                <div>\n                                    <div>{__t('comment')}</div>\n                                    <div>{order.contactInfo.comment}</div>\n                                </div>\n                            )}\n                        </div>\n                        <div className={styles.sectionHeading}>{__t('order_content')}</div>\n                        <div className={cn(styles.pane, styles.products)} style={theme.blocks.features}>\n                            {order.items.map((product, index) => (\n                                <div key={index}>\n                                    <div>{product.name}</div>\n                                    <div>\n                                        {product.quantity}x{product.price.amount} {product.price.currency}\n                                    </div>\n                                </div>\n                            ))}\n                            <div>\n                                <div>{__t('order_summary')}</div>\n                                <div>\n                                    {order.total.amount} {order.total.currency}\n                                </div>\n                            </div>\n                        </div>\n\n                        {messengers.length > 0 && (\n                            <>\n                                <h3 className={styles.sectionHeading}>{__t('store_contacts')}</h3>\n                                <div className={cn(styles.pane, styles.messengers)} style={theme.blocks.features}>\n                                    {messengers.map(renderBlock)}\n                                </div>\n                            </>\n                        )}\n\n                        <AnimatePresence>\n                            {order.status === 'failed' && order.feedback.status !== 'rejected' && (\n                                <motion.div\n                                    key=\"order-actions\"\n                                    className={styles.buttons}\n                                    exit={{ opacity: 0, height: 0, marginTop: '0px' }}\n                                >\n                                    {isJustOneOnlinePaymentMethod ? (\n                                        onlineElements\n                                    ) : (\n                                        <ThemedButton theme={contentStyle} onClick={togglePayNowModal}>\n                                            {__t('pay_order')}\n                                        </ThemedButton>\n                                    )}\n\n                                    <ThemedButton theme={contentStyle} contour onClick={showCancelPrompt}>\n                                        {__t('cancel_order')}\n                                    </ThemedButton>\n                                </motion.div>\n                            )}\n\n                            {!isJustOneOnlinePaymentMethod && isPayNowModal && (\n                                <ThemedModal\n                                    key=\"online-payment-options\"\n                                    overlay\n                                    compact\n                                    padding\n                                    title={__t('choose_payment_method')}\n                                    onClose={togglePayNowModal}\n                                >\n                                    <div className={styles.paymentButtons}>{onlineElements}</div>\n                                </ThemedModal>\n                            )}\n\n                            {isShowingCancelPrompt && (\n                                <ThemedModal\n                                    key=\"order-cancellation\"\n                                    overlay\n                                    compact\n                                    padding\n                                    title={__t('order_cancellation')}\n                                    onClose={hideCancelPrompt}\n                                >\n                                    <div>\n                                        <div style={{ textAlign: 'center', marginBottom: 16 }}>\n                                            {__t('order_cancellation_prompt')}\n                                        </div>\n\n                                        <ThemedButton\n                                            theme={contentStyle}\n                                            onClick={handleCancelOrder}\n                                            disabled={loading}\n                                        >\n                                            {__t('order_cancellation_prompt_button')}\n                                        </ThemedButton>\n                                    </div>\n                                </ThemedModal>\n                            )}\n                        </AnimatePresence>\n                    </div>\n                )}\n            </div>\n        </ThemedModal>\n    );\n}\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction ShoppingBagIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path\n                d=\"M6 2L3 6v14a2 2 0 002 2h14a2 2 0 002-2V6l-3-4H6zM3 6h18M16 10a4 4 0 11-8 0\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(ShoppingBagIcon);\nexport default ForwardRef;\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction MapPinIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path\n                d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 1118 0z\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n            <path\n                d=\"M12 13a3 3 0 100-6 3 3 0 000 6z\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(MapPinIcon);\nexport default ForwardRef;\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction CreditCardIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path\n                d=\"M21 4H3a2 2 0 00-2 2v12a2 2 0 002 2h18a2 2 0 002-2V6a2 2 0 00-2-2zM1 10h22\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(CreditCardIcon);\nexport default ForwardRef;\n","import { useMemo } from 'react';\n\nimport { usePageTheme } from './useWebsiteTheme';\n\nexport const usePageColors = (styles) => {\n    const { theme } = usePageTheme();\n\n    return useMemo(() => {\n        const backgroundColor = styles && styles.backgroundColor;\n        const color = styles && styles.color;\n\n        return backgroundColor && color\n            ? styles\n            : {\n                backgroundColor: backgroundColor || theme.colors.background,\n                color: color || theme.colors.text,\n            };\n    }, [styles, theme.colors]);\n};\n","import { createContext } from 'react';\n\nconst StepContext = createContext(1);\n\nexport default StepContext;\n","import { useCallback, useContext } from 'react';\nimport StepContext from './StepContext';\n\nconst getPrevStep = (current, first) => Math.max(first, current - 1);\nconst getNextStep = (current, last) => Math.min(last, current + 1);\n\nfunction useStep() {\n    const { currentStep, setCurrentStep, steps } = useContext(StepContext);\n    const firstStep = 1;\n    const lastStep = steps.length;\n    const isFirstStep = currentStep === firstStep;\n    const isLastStep = currentStep === lastStep;\n    const nextStep = getNextStep(currentStep, lastStep);\n    const previousStep = getPrevStep(currentStep, firstStep);\n    const gotoStep = useCallback(\n        (step) => {\n            if (step === currentStep) {\n                return;\n            }\n\n            if (step < firstStep || step > lastStep) {\n                return;\n            }\n\n            if (step > currentStep && !steps[step - 2]?.isDone) {\n                return;\n            }\n\n            setCurrentStep(step);\n        },\n        [currentStep, firstStep, lastStep, steps]\n    );\n    const gotoNextStep = useCallback(() => setCurrentStep((current) => getNextStep(current, lastStep)), [lastStep]);\n    const gotoPreviousStep = useCallback(() => setCurrentStep((current) => getPrevStep(current, firstStep)), [\n        firstStep,\n    ]);\n    const getStepName = (step) => steps[step - 1].name;\n\n    return {\n        currentStep,\n        getStepName,\n        gotoStep,\n        gotoNextStep,\n        gotoPreviousStep,\n        firstStep,\n        lastStep,\n        isFirstStep,\n        isLastStep,\n        nextStep,\n        previousStep,\n    };\n}\n\nexport default useStep;\n","// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"x1-zVrJv\",\"step\":\"_3PZiK4o6\",\"current\":\"Yj9eeavT\",\"done\":\"_367MqCEn\",\"icon\":\"HYDBXOFi\",\"mark\":\"_2db9WuMK\",\"divider\":\"_3tkHM2Ph\"};","import classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useStep from './useStep';\n\nimport styles from './StepSwitch.scss';\n\nexport const StepIcon = ({ as: Tag = 'li', step: { number, isCurrent, isDone, icon: Icon }, style }) => {\n    const { gotoStep } = useStep();\n\n    const handleClick = useCallback(() => gotoStep(number), [gotoStep, number]);\n\n    return (\n        <Tag\n            className={classNames(styles.step, {\n                [styles.done]: isDone,\n                [styles.current]: isCurrent,\n            })}\n            style={isCurrent ? style.stepCurrent : style.step}\n            onClick={handleClick}\n        >\n            <div className={styles.icon}>{Icon ? <Icon size={20} /> : number}</div>\n\n            <div className={styles.mark}>{isDone && '✔'}</div>\n        </Tag>\n    );\n};\n\nStepIcon.propTypes = {\n    as: PropTypes.elementType,\n    step: PropTypes.shape({\n        number: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        icon: PropTypes.elementType,\n        isCurrent: PropTypes.bool,\n        isDone: PropTypes.bool,\n    }).isRequired,\n    style: PropTypes.shape({\n        step: PropTypes.object,\n        stepCurrent: PropTypes.object,\n    }).isRequired,\n};\n","import React, { useState, Fragment, useMemo, useEffect } from 'react';\n\nimport { usePageColors } from '../../hooks';\nimport { StepIcon } from './StepIcon';\nimport StepContext from './StepContext';\n\nimport styles from './StepSwitch.scss';\n\nfunction StepSwitch({ children }) {\n    const [currentStep, setCurrentStep] = useState(1);\n    const [steps, setSteps] = useState(() =>\n        React.Children.toArray(children).map((child, index) => {\n            const number = index + 1;\n            return {\n                number,\n                name: child.props.name,\n                icon: child.props.icon,\n                child,\n                isDone: number < currentStep,\n                isCurrent: currentStep === number,\n            };\n        })\n    );\n    const colors = usePageColors();\n    const style = useMemo(\n        () => ({\n            divider: { backgroundColor: colors.color },\n            step: { backgroundColor: colors.backgroundColor, borderColor: colors.backgroundColor, color: colors.color },\n            stepCurrent: {\n                backgroundColor: colors.color,\n                borderColor: colors.color,\n                color: colors.backgroundColor,\n            },\n        }),\n        [colors]\n    );\n\n    useEffect(() => {\n        setSteps((old) =>\n            old.map((step) => ({\n                ...step,\n                isCurrent: step.number === currentStep,\n                isDone: step.isDone || currentStep > step.number,\n            }))\n        );\n    }, [currentStep]);\n\n    const content = steps.find((step) => step.isCurrent).child;\n\n    return (\n        <StepContext.Provider value={{ currentStep, setCurrentStep, steps }}>\n            <div>\n                <ul className={styles.nav}>\n                    {steps.map((step) => (\n                        <Fragment key={step.number}>\n                            {step.number !== 1 && <li className={styles.divider} style={style.divider} />}\n\n                            <StepIcon style={style} step={step} />\n                        </Fragment>\n                    ))}\n                </ul>\n                <div>{content}</div>\n            </div>\n        </StepContext.Provider>\n    );\n}\n\nexport default StepSwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"step\":\"v85lPsnD\",\"title\":\"_1YQ2PhE1\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Step.scss';\n\nconst propTypes = {\n    name: PropTypes.string,\n};\n\nfunction Step({ children, name }) {\n    return (\n        <div className={styles.step}>\n            {name && <h4 className={styles.title}>{name}</h4>}\n            {children}\n        </div>\n    );\n}\n\nStep.propTypes = propTypes;\n\nexport default Step;\n","import { formatPrice } from '@mssgme/shared';\n\nexport function printPrice(price) {\n    return formatPrice(price.amount, price.currency, navigator.language);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_1cIEQnSo\",\"label\":\"_3O2qFkye\",\"value\":\"_1hQSAKZ3\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Row.scss';\n\nconst propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.element]).isRequired,\n};\n\nexport function Row({ label, value, ...rest }) {\n    return (\n        <div className={styles.root} {...rest}>\n            <div className={styles.label}>{label}</div>\n            <div className={styles.value}>{value}</div>\n        </div>\n    );\n}\n\nRow.propTypes = propTypes;\n","import { useEffect, useMemo, useState } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { ServicesGridBlockKind } from '@mssgme/shared';\n\nconst PRODUCT_KIND = 'product';\nconst SERVICE_KIND = 'service';\nconst getIdsByKind = (items, kind) => items.filter((item) => item.kind === kind).map(({ productId }) => productId);\n\nexport const useOrderProducts = (website, order, retrieveFn) => {\n    const [resolved, setResolved] = useState(null);\n    const { pages = [] } = website;\n    const { value } = useAsync(async () => {\n        const productIds = getIdsByKind(order.items, PRODUCT_KIND);\n        const serviceIds = getIdsByKind(order.items, SERVICE_KIND);\n        const products = [];\n        const services = [];\n\n        if (productIds.length && retrieveFn) {\n            await Promise.all(\n                productIds.map(async (productId) => {\n                    try {\n                        const product = await retrieveFn({ productId });\n\n                        if (product) {\n                            products.push(product);\n                        }\n                    } catch (e) {\n                        // eslint-disable-next-line no-console\n                        console.warn(`Product with ID \"${productId}\" not found`);\n                    }\n                })\n            );\n        }\n\n        if (serviceIds.length) {\n            let total = serviceIds.length;\n            const missing = new Set(serviceIds);\n\n            for (const page of pages) {\n                for (const block of page.blocks) {\n                    if (block.kind !== ServicesGridBlockKind) {\n                        continue;\n                    }\n\n                    for (const item of block.items) {\n                        if (missing.has(item._id)) {\n                            services.push(item);\n                            total--;\n\n                            if (total <= 0) {\n                                break;\n                            }\n                        }\n                    }\n\n                    if (total <= 0) {\n                        break;\n                    }\n                }\n\n                if (total <= 0) {\n                    break;\n                }\n            }\n        }\n\n        return {\n            products,\n            services,\n        };\n    }, [order.items, retrieveFn]);\n\n    useEffect(() => {\n        if (value) {\n            setResolved(value);\n        }\n    }, [value]);\n\n    return useMemo(\n        () =>\n            order.items.map((item) => {\n                const product =\n                    resolved &&\n                    (item.kind === PRODUCT_KIND ? resolved.products : resolved.services).find(\n                        ({ _id }) => _id === item.productId\n                    );\n\n                return {\n                    ...item,\n                    product: product || { name: item.name, price: item.price, photoUrl: '' },\n                };\n            }),\n        [order.items, resolved]\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"b04KnDG6\"};","import PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport { cls } from '@mssgme/helpers';\nimport { usePageColors } from '../../hooks';\n\nimport styles from './Divider.scss';\n\nexport const Divider = ({ style: baseStyle, ...props }) => {\n    const colors = usePageColors();\n    const style = useMemo(() => ({ borderTop: `1px solid ${colors.color}`, ...baseStyle }));\n\n    return <div style={style} {...cls(styles.root, props)} />;\n};\n\nDivider.propTypes = {\n    style: PropTypes.object,\n};\n","import TinyColor2 from 'tinycolor2';\n\nexport default (rawColor, opacity) => {\n    const color = rawColor?.setAlpha ? rawColor : new TinyColor2(rawColor);\n\n    return color.setAlpha(opacity);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"_1qCNo7At\",\"disabled\":\"_1lrfYPcp\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { cls } from '@mssgme/helpers';\nimport { getProps } from './PureButton';\n\nimport styles from './IconButton.scss';\n\nIconButton.propTypes = {\n    as: PropTypes.elementType,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nIconButton.defaultProps = {\n    as: 'button',\n};\n\nexport default function IconButton({ as: Component, children, disabled, ...rest }) {\n    return (\n        <Component {...cls([styles.button, disabled && styles.disabled], getProps(Component, rest))}>\n            {children}\n        </Component>\n    );\n}\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction CloseIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path\n                d=\"M18 6L6 18M6 6l12 12\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(CloseIcon);\nexport default ForwardRef;\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction MinusIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path d=\"M5 12h14\" stroke=\"currentColor\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(MinusIcon);\nexport default ForwardRef;\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction PlusIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path\n                d=\"M12 5v14M5 12h14\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(PlusIcon);\nexport default ForwardRef;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2RnXDDix\",\"divider\":\"_3rFjyJjx\",\"knob\":\"_2uC3LJzf\",\"thumbnail\":\"_1b9pzxi4\",\"meta\":\"O-47leFn\",\"title\":\"_3gvv9TuI\",\"details\":\"_1k07gsKv\",\"row\":\"_1Uo9ybFj\",\"quantity\":\"_1wslwbIx\",\"quantityText\":\"_2jmlZhSO\",\"price\":\"_15UVvpdZ\",\"subTotal\":\"_1Xk7hugj\",\"list\":\"hnHwJyzE\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useMemo } from 'react';\nimport { IoMdImage } from 'react-icons/io';\n\nimport { getTransparentColor } from '@mssgme/helpers';\nimport { mediaUtils } from '@mssgme/shared';\nimport { IconButton, LandingsPropTypes, LazyImage } from '@mssgme/ui';\nimport { CloseIcon, MinusIcon, PlusIcon } from '@mssgme/icons';\nimport { usePageColors } from '../../hooks';\nimport { printPrice } from '../printPrice';\n\nimport styles from './OrderItem.scss';\n\nconst propTypes = {\n    item: LandingsPropTypes.orderItem.isRequired,\n    tag: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n    onAdjust: PropTypes.func,\n};\n\nexport function OrderItem({ item, onAdjust, tag: Tag = 'li' }) {\n    const colors = usePageColors();\n    const style = useMemo(() => ({ borderColor: getTransparentColor(colors.color, 0.2) }));\n    const isEditable = !!onAdjust;\n    const isMultiEditable = item.quantity > 1 && isEditable;\n\n    const handleAdjust = useCallback(\n        (delta) => onAdjust([{ productId: item.productId, quantity: Math.max(0, item.quantity + delta) }]),\n        [item, onAdjust]\n    );\n    const handleAdd = useCallback(() => handleAdjust(+1), [handleAdjust]);\n    const handleSubtract = useCallback(() => handleAdjust(-1), [handleAdjust]);\n    const handleRemove = useCallback(() => handleAdjust(-Infinity), [handleAdjust]);\n\n    return (\n        <Tag className={styles.root}>\n            <div className={styles.divider} style={{ backgroundColor: colors.color }} />\n            <div className={styles.thumbnail}>\n                {item.product.photoUrl ? (\n                    <LazyImage src={mediaUtils.generateProductThumbnailUrl(item.product.photoUrl)} alt={item.name} />\n                ) : (\n                    <div className={styles.emptyPlaceholder}>\n                        <IoMdImage size={70} color=\"#fff\" />\n                    </div>\n                )}\n            </div>\n            <div className={styles.meta}>\n                <div className={styles.title} style={style}>\n                    <div>{item.name}</div>\n\n                    {isEditable && (\n                        <IconButton className={styles.knob} onClick={handleRemove}>\n                            <CloseIcon />\n                        </IconButton>\n                    )}\n                </div>\n                <div className={styles.details}>\n                    <div className={styles.row}>\n                        <div className={styles.quantity}>\n                            {isEditable && (\n                                <IconButton\n                                    className={styles.knob}\n                                    disabled={item.quantity <= 1}\n                                    onClick={handleSubtract}\n                                >\n                                    <MinusIcon size={16} />\n                                </IconButton>\n                            )}\n                            <div className={styles.quantityText} style={{ margin: isEditable ? '0 8px' : '0' }}>\n                                {!isEditable && 'x'}\n                                {item.quantity}\n                            </div>\n                            {isEditable && (\n                                <IconButton className={styles.knob} onClick={handleAdd}>\n                                    <PlusIcon size={16} />\n                                </IconButton>\n                            )}\n                        </div>\n                        <div className={styles.price} style={{ fontWeight: isMultiEditable ? 400 : 600 }}>\n                            {isMultiEditable && `${item.quantity} x `}\n                            {printPrice(isEditable ? item.price : item.subtotal)}\n                        </div>\n                    </div>\n\n                    {isMultiEditable && <div className={styles.subTotal}>= {printPrice(item.subtotal)}</div>}\n                </div>\n            </div>\n        </Tag>\n    );\n}\n\nOrderItem.propTypes = propTypes;\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\n\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { productsApi } from '@mssgme/lib';\nimport { useOrderProducts, useWebsiteData } from '../../hooks';\nimport { Divider } from '../Divider';\nimport { OrderItem } from './OrderItem';\n\nimport styles from './OrderItem.scss';\n\nconst propTypes = {\n    order: LandingsPropTypes.order.isRequired,\n    onAdjust: PropTypes.func,\n};\n\nexport function OrderItemsList({ order, onAdjust, ...rest }) {\n    const website = useWebsiteData();\n    const products = useOrderProducts(\n        website,\n        order,\n        useCallback(({ productId }) => productsApi.load(website.workspace, productId), [])\n    );\n\n    return (\n        <div {...rest}>\n            <Divider style={{ marginBottom: 0 }} />\n            <ul className={styles.list}>\n                {products.map((item) => (\n                    <OrderItem key={item._id} item={item} onAdjust={onAdjust} />\n                ))}\n            </ul>\n            <Divider style={{ marginTop: 0 }} />\n        </div>\n    );\n}\n\nOrderItemsList.propTypes = propTypes;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_1ArzqQOx\",\"button\":\"_3jq98mXF\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useAsyncFn } from 'react-use';\n\nimport { __t } from '@mssgme/shared';\nimport { useModalThemes } from '../../../hooks';\nimport { ThemedButton, useStep } from '../../../UI';\n\nimport styles from './StepsFooter.scss';\n\nStepsFooter.propTypes = {\n    next: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    prev: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    disabled: PropTypes.bool,\n};\n\nexport function StepsFooter({ prev, next, disabled }) {\n    const { contentStyle } = useModalThemes();\n    const { gotoPreviousStep, gotoNextStep } = useStep();\n\n    const [{ loading: isFetchingPrev }, handlePrev] = useAsyncFn(async () => {\n        if (typeof prev === 'function') {\n            return prev();\n        }\n\n        gotoPreviousStep();\n    }, [prev, gotoPreviousStep]);\n\n    const [{ loading: isFetchingNext }, handleNext] = useAsyncFn(async () => {\n        if (typeof next === 'function') {\n            return next();\n        }\n\n        gotoNextStep();\n    }, [next, gotoNextStep]);\n\n    return (\n        <footer className={styles.root}>\n            {prev && (\n                <ThemedButton\n                    className={styles.button}\n                    theme={contentStyle}\n                    fullWidth={!next}\n                    contour\n                    type=\"submit\"\n                    disabled={disabled}\n                    isFetching={isFetchingPrev}\n                    onClick={handlePrev}\n                >\n                    {__t('previous')}\n                </ThemedButton>\n            )}\n\n            {next && (\n                <ThemedButton\n                    className={styles.button}\n                    theme={contentStyle}\n                    fullWidth={!prev}\n                    type=\"submit\"\n                    disabled={disabled}\n                    isFetching={isFetchingNext}\n                    onClick={handleNext}\n                >\n                    {__t('next')}\n                </ThemedButton>\n            )}\n        </footer>\n    );\n}\n","import React, { useMemo } from 'react';\nimport { useAsyncFn } from 'react-use';\nimport { Redirect } from 'react-router-dom';\n\nimport { __t } from '@mssgme/shared';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { useFrontAPI, useSavedOrders } from '../../../hooks';\nimport { printPrice } from '../../printPrice';\nimport { Row } from '../../Row';\nimport { OrderItemsList } from '../../OrderItem';\nimport { StepsFooter } from './StepsFooter';\n\nfunction AdjustingStep() {\n    const { generateUrl } = useNavigationUtils({ useMatchUrl: false });\n    const { currentOrder, removeOrderId } = useSavedOrders();\n    const backPath = useMemo(() => generateUrl('../..'), []);\n    const api = useFrontAPI();\n    const orderId = currentOrder?._id || null;\n\n    const [{ loading }, handleModifyItems] = useAsyncFn(\n        /** @param {{ productId: string, quantity: number }[]} items Order items */\n        async (items) => {\n            const order = await api.orders.modify({\n                orderId,\n                payload: {\n                    items,\n                },\n            });\n\n            if (!order.items.length) {\n                // todo: in the future, change the logic:\n                // after last order item count brought to 0 - disable 'Next' button, but do not remove the order yet;\n                // if the modal is closed, but order items count still 0 - delete the order entirely\n                removeOrderId(order._id);\n            }\n        },\n        [orderId]\n    );\n\n    if (!currentOrder) {\n        return orderId ? null : <Redirect to={backPath} />;\n    }\n\n    return (\n        <div>\n            <OrderItemsList order={currentOrder} onAdjust={currentOrder.finalized ? undefined : handleModifyItems} />\n            <Row label={__t('total_to_pay')} value={printPrice(currentOrder.total)} />\n\n            <StepsFooter next disabled={loading} />\n        </div>\n    );\n}\n\nexport default AdjustingStep;\n","import { ValidationError } from '@mssgme/api-client';\n\nfunction captureSubmitError(fn) {\n    return async (values, helpers) => {\n        try {\n            await fn(values, helpers);\n        } catch (err) {\n            if (ValidationError.is(err)) {\n                for (let fieldName in err.errors) {\n                    helpers.setFieldError(fieldName, err.errors[fieldName]);\n                }\n            } else {\n                throw err;\n            }\n        }\n    };\n}\n\nexport default captureSubmitError;\n","import { useCallback } from 'react';\n\nimport { useFrontAPI } from '../hooks';\nimport { useStep } from '../UI';\nimport captureSubmitError from './captureSubmitError';\n\nexport function useOrderSubmit(orderId) {\n    const { gotoNextStep } = useStep();\n    const api = useFrontAPI();\n\n    return useCallback(\n        captureSubmitError(async (payload) => {\n            await api.orders.update({ orderId, payload });\n\n            gotoNextStep();\n        }),\n        [orderId, gotoNextStep]\n    );\n}\n","import React, { useMemo } from 'react';\nimport { Form, Formik } from 'formik';\n\nimport { __t } from '@mssgme/shared';\nimport { useCRMData, useSavedOrders } from '../../../hooks';\nimport { TextField } from '../../../UI';\nimport { useOrderSubmit } from '../../useOrderSubmit';\nimport { StepsFooter } from './StepsFooter';\n\nconst INITIAL_SHIPPING_ADDRESS = {\n    city: '',\n    state: '',\n    address: '',\n    postalCode: '',\n};\n\nfunction ShippingAddressStep() {\n    const { form } = useCRMData();\n    const { currentOrder } = useSavedOrders();\n    const initialValues = useMemo(\n        () => ({ shippingAddress: currentOrder?.shippingAddress || INITIAL_SHIPPING_ADDRESS }),\n        [currentOrder?.shippingAddress]\n    );\n    const doSubmit = useOrderSubmit(currentOrder?._id);\n\n    if (!currentOrder) {\n        return null;\n    }\n\n    const requestCity = !form.optional?.city;\n    const requestState = !form.optional?.state;\n    const requestPostalCode = !form.optional?.postalCode;\n\n    return (\n        <Formik initialValues={initialValues} onSubmit={doSubmit}>\n            {({ isSubmitting, handleSubmit }) => (\n                <Form>\n                    {requestCity && (\n                        <TextField\n                            required\n                            name=\"shippingAddress.city\"\n                            placeholder={__t('shippingAddress.placeholder.city')}\n                        />\n                    )}\n                    {requestState && (\n                        <TextField\n                            required\n                            name=\"shippingAddress.state\"\n                            placeholder={__t('shippingAddress.placeholder.state')}\n                        />\n                    )}\n                    <TextField\n                        required\n                        name=\"shippingAddress.address\"\n                        placeholder={__t('shippingAddress.placeholder.address')}\n                    />\n                    {requestPostalCode && (\n                        <TextField\n                            required\n                            name=\"shippingAddress.postalCode\"\n                            placeholder={__t('shippingAddress.placeholder.postalCode')}\n                        />\n                    )}\n\n                    <StepsFooter prev next={handleSubmit} disabled={isSubmitting} />\n                </Form>\n            )}\n        </Formik>\n    );\n}\n\nexport default ShippingAddressStep;\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction CheckCircleIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path\n                d=\"M22 11.08V12a10 10 0 11-5.93-9.14\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n            <path\n                d=\"M22 4L12 14.01l-3-3\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;\n","import * as React from 'react';\nimport { IconBase } from 'react-icons';\n\nfunction CircleIcon(props, svgRef) {\n    return (\n        <IconBase fill=\"none\" viewBox=\"0 0 24 24\" ref={svgRef} {...props}>\n            <path\n                d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </IconBase>\n    );\n}\n\nconst ForwardRef = React.forwardRef(CircleIcon);\nexport default ForwardRef;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2Zz_7uBp\",\"content\":\"_35vU92sW\",\"check\":\"DPAI-gUE\",\"active\":\"_1cImWuaZ\",\"disabled\":\"_18RV2B3w\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { cls } from '@mssgme/helpers';\nimport { CheckCircleIcon, CircleIcon } from '@mssgme/icons';\n\nimport styles from './CheckableItem.scss';\n\nexport const CheckableItem = ({ active, disabled, size = 24, children, color, contentClass, ...rest }) => {\n    return (\n        <div {...cls([styles.root, active && styles.active, disabled && styles.disabled], rest)}>\n            <div className={cn(styles.content, contentClass)}>{children}</div>\n            <div className={styles.check}>\n                {active ? <CheckCircleIcon color={color} size={size} /> : <CircleIcon color={color} size={size} />}\n            </div>\n        </div>\n    );\n};\n\nCheckableItem.propTypes = {\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    size: PropTypes.number,\n    color: PropTypes.string,\n    contentClass: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3IlKY5pN\",\"groupLabel\":\"_3ilybRMG\",\"choice\":\"_3xuRcIYp\",\"active\":\"NqPPc9JS\",\"rounded\":\"_2zIR-Sum\",\"checkMark\":\"_17ClkL4Z\",\"icon\":\"_2TR7NHYG\",\"label\":\"_81Eg-8go\",\"grid\":\"_3U0Cg6LG\"};","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { FiCheck } from 'react-icons/fi';\n\nimport styles from './styles.scss';\n\nexport default function ListInput({\n    options,\n    groups,\n    value,\n    toggle,\n    multiple,\n    grid,\n    containerClassName,\n    choiceClassName,\n    activeClassName,\n    groupLabelClassName,\n    fullWidthClassName,\n    renderOption,\n    style,\n    onChange,\n}) {\n    const isSelected = (selected) => {\n        return multiple ? value.includes(selected) : value === selected;\n    };\n    const handleClick = (selected, e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const add = toggle && isSelected(selected);\n\n        if (multiple) {\n            if (add) {\n                onChange(value.filter((item) => item !== selected));\n            } else {\n                onChange([...new Set([...value, selected])]);\n            }\n        } else {\n            if (add) {\n                onChange(undefined);\n            } else {\n                onChange(selected);\n            }\n        }\n    };\n\n    const grouped = useMemo(() => {\n        const result = new Map((groups || []).map((group) => [group.id, { ...group, options: [] }]));\n\n        if (!result.get('default')) {\n            result.set('default', { id: 'default', options: [], label: '' });\n        }\n\n        if (groups) {\n            for (const option of options) {\n                if (option.group) {\n                    const group = result.get(option.group);\n\n                    if (group) {\n                        group.options.push(option);\n                    } else {\n                        result.set(option.group, { id: 'default', options: [option], label: option.group });\n                    }\n                }\n            }\n\n            for (const group of [...result.values()]) {\n                if (!group.options.length) {\n                    result.delete(group.id);\n                }\n            }\n        }\n\n        return new Map(\n            [...result.entries()].sort(([, a], [, b]) => {\n                const indexA = Number.isInteger(a.index) ? a.index : a.id;\n                const indexB = Number.isInteger(b.index) ? b.index : b.id;\n\n                return indexB - indexA;\n            })\n        );\n    }, [groups]);\n\n    const renderOptions = (options) =>\n        options.map((option) => {\n            const active = isSelected(option.value);\n            const Icon = option.icon;\n            const content = (renderOption && renderOption({ option, active })) ||\n                (option.props && option.props.children) || (\n                <>\n                    {Icon && (\n                        <div className={styles.icon}>\n                            <Icon size={24} />\n                        </div>\n                    )}\n                    <div className={styles.label}>{(option.props && option.props.children) || option.label}</div>\n                    <div className={cn({ [styles.checkMark]: true, [styles.active]: active })}>\n                        <FiCheck size={24} />\n                    </div>\n                </>\n            );\n\n            return (\n                <div\n                    key={option.value || option.label}\n                    className={cn(\n                        styles.choice,\n                        active && styles.active,\n                        option.rounded && styles.rounded,\n                        choiceClassName,\n                        active && activeClassName,\n                        option.fullWidth && styles.fullWidth,\n                        option.fullWidth && fullWidthClassName\n                    )}\n                    onClick={onChange && handleClick.bind(null, option.value)}\n                    {...option.props}\n                >\n                    {content}\n                </div>\n            );\n        });\n\n    if (grouped.size > 1) {\n        return (\n            <div style={style}>\n                {[...grouped.values()].map(({ id, label, options }) => (\n                    <div key={id}>\n                        <div className={cn(styles.groupLabel, groupLabelClassName)}>{label}</div>\n\n                        <div className={cn(styles.root, grid && styles.grid, containerClassName)}>\n                            {renderOptions(options)}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <div className={cn(styles.root, grid && styles.grid, containerClassName)} style={style}>\n            {renderOptions(options)}\n        </div>\n    );\n}\n\nconst OptionValuePropType = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]);\n\nexport const OptionProps = {\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    group: PropTypes.string,\n    value: OptionValuePropType,\n    icon: PropTypes.any,\n    fullWidth: PropTypes.bool,\n};\nexport const OptionGroupProps = {\n    label: PropTypes.any,\n    id: PropTypes.string,\n    index: PropTypes.number,\n    values: PropTypes.arrayOf(OptionValuePropType).isRequired,\n    icon: PropTypes.any,\n};\n\nListInput.propTypes = {\n    value: PropTypes.oneOfType([OptionValuePropType, PropTypes.arrayOf(OptionValuePropType)]),\n    options: PropTypes.arrayOf(PropTypes.shape(OptionProps)).isRequired,\n    groups: PropTypes.arrayOf(PropTypes.shape(OptionGroupProps)),\n    toggle: PropTypes.bool,\n    grid: PropTypes.bool,\n    multiple: PropTypes.bool,\n    renderOption: PropTypes.func,\n    style: PropTypes.object,\n    onChange: PropTypes.func.isRequired,\n    containerClassName: PropTypes.string,\n    choiceClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    groupLabelClassName: PropTypes.string,\n    fullWidthClassName: PropTypes.string,\n};\n\nListInput.defaultProps = {\n    value: null,\n    groups: null,\n    toggle: false,\n    multiple: false,\n    grid: false,\n    onChoiceRef: null,\n    renderOption: null,\n    containerClassName: '',\n    choiceClassName: '',\n    activeClassName: '',\n    groupLabelClassName: '',\n    fullWidthClassName: '',\n};\n\nListInput.styles = styles;\n","// extracted by mini-css-extract-plugin\nexport default {\"orBar\":\"DAph2hqD\",\"choices\":\"_2NW-Ib1C\",\"choice\":\"bSNToVUt\",\"choiceWrapper\":\"_25Ad_UsP\",\"choiceContent\":\"_2ZWUE4aU\",\"paymentButtons\":\"_10jXd67k\"};","import React, { useCallback, useMemo, useState } from 'react';\nimport { useAsyncFn, useToggle } from 'react-use';\nimport { useHistory } from 'react-router-dom';\nimport { AnimatePresence } from 'framer-motion';\n\nimport { __t } from '@mssgme/shared';\nimport { getContourColor } from '@mssgme/helpers';\nimport { CheckableItem, ListInput } from '@mssgme/ui';\nimport { ThemedModal } from '../../../UI';\nimport { useCoreContext, useFrontAPI, useModalThemes, usePaymentConfigs, useSavedOrders } from '../../../hooks';\nimport { printPrice } from '../../printPrice';\nimport { Row } from '../../Row';\nimport { OrderItemsList } from '../../OrderItem';\nimport { PAYMENT_PROVIDER_RENDERERS, PAYMENT_PROVIDERS } from '../Providers';\nimport { StepsFooter } from './StepsFooter';\n\nimport styles from './PaymentStep.scss';\n\nconst ONLINE_KEY = 'online';\n\nfunction PaymentStep() {\n    const history = useHistory();\n    const api = useFrontAPI();\n    const payments = usePaymentConfigs();\n    const { currentOrder, removeCurrentOrderId } = useSavedOrders();\n    const { router } = useCoreContext();\n    const { contentStyle } = useModalThemes();\n    const [isPayNowModal, togglePayNowModal] = useToggle(false);\n\n    const { immediate, online } = useMemo(() => {\n        const mapper = ([provider]) => [provider, PAYMENT_PROVIDER_RENDERERS[provider]];\n\n        return {\n            immediate: payments.immediate.map(mapper),\n            online: payments.online.map(mapper),\n        };\n    }, [payments]);\n    const hasOnlineMethods = !!online.length;\n    const hasImmediateMethods = !!immediate.length;\n    const isJustOneOnlinePaymentMethods = hasOnlineMethods && !hasImmediateMethods;\n\n    const [{ loading }, handlePay] = useAsyncFn(\n        async (paymentMethod) => {\n            await api.orders.finalize({ orderId: currentOrder._id, payload: { paymentMethod } });\n\n            togglePayNowModal();\n            removeCurrentOrderId();\n            history.push(router.orders.toStatus(currentOrder._id, 'paid'));\n        },\n        [router, currentOrder]\n    );\n\n    const [selected, setSelected] = useState(hasOnlineMethods ? ONLINE_KEY : immediate[0]?.[0]);\n\n    const optionStyles = useMemo(() => {\n        const { backgroundColor, color, border } = getContourColor(\n            contentStyle.backgroundColor,\n            contentStyle.buttonBackground,\n            contentStyle.buttonTextColor\n        );\n\n        return {\n            option: {\n                backgroundColor,\n                color,\n                border: `1px solid ${border}`,\n            },\n            active: {\n                backgroundColor: contentStyle.buttonBackground,\n                color: contentStyle.buttonTextColor,\n                border: `1px solid ${contentStyle.buttonBackground}`,\n            },\n        };\n    }, [contentStyle]);\n    const options = useMemo(\n        () =>\n            currentOrder &&\n            [\n                hasOnlineMethods && {\n                    value: ONLINE_KEY,\n                    label: __t('pay_now'),\n                    icon: (\n                        <div>\n                            {online.map(([provider]) => {\n                                const found = PAYMENT_PROVIDERS.find((i) => i.provider === provider);\n\n                                return found && <found.icon key={provider} />;\n                            })}\n                        </div>\n                    ),\n                },\n                ...immediate.map(([key]) => ({\n                    value: key,\n                    label: __t(`payments_${key}`),\n                })),\n            ].filter(Boolean),\n        [currentOrder, online, immediate]\n    );\n\n    const renderOption = useCallback(\n        ({ option, active }) => {\n            const style = active ? optionStyles.active : optionStyles.option;\n\n            return (\n                <CheckableItem\n                    className={styles.choiceWrapper}\n                    contentClass={styles.choiceContent}\n                    style={style}\n                    active={active}\n                    color={style.color}\n                >\n                    {option.label}\n                    {option.icon}\n                </CheckableItem>\n            );\n        },\n        [optionStyles]\n    );\n\n    const handleNext = useCallback(() => {\n        if (selected === ONLINE_KEY) {\n            togglePayNowModal(true);\n        } else {\n            void handlePay(selected);\n        }\n    }, [selected, handlePay]);\n\n    if (!currentOrder) {\n        return null;\n    }\n\n    const onlineElements = (\n        <div className={styles.paymentButtons}>\n            {online.map(([key, Renderer]) => (\n                <Renderer key={key} order={currentOrder} disabled={loading} onPay={handlePay} />\n            ))}\n        </div>\n    );\n\n    return (\n        <div>\n            <OrderItemsList order={currentOrder} />\n            <Row label={__t('total_to_pay')} value={printPrice(currentOrder.total)} style={{ marginBottom: 16 }} />\n\n            {isJustOneOnlinePaymentMethods ? (\n                onlineElements\n            ) : (\n                <div style={{ marginBottom: -8 }}>\n                    <ListInput\n                        containerClassName={styles.choices}\n                        choiceClassName={styles.choice}\n                        value={selected}\n                        options={options}\n                        renderOption={renderOption}\n                        onChange={setSelected}\n                    />\n\n                    {hasOnlineMethods && (\n                        <AnimatePresence>\n                            {isPayNowModal && (\n                                <ThemedModal\n                                    overlay\n                                    compact\n                                    padding\n                                    title={__t('choose_payment_method')}\n                                    onClose={togglePayNowModal}\n                                >\n                                    {onlineElements}\n                                </ThemedModal>\n                            )}\n                        </AnimatePresence>\n                    )}\n                </div>\n            )}\n\n            <StepsFooter prev next={!isJustOneOnlinePaymentMethods && handleNext} disabled={loading} />\n        </div>\n    );\n}\n\nexport default PaymentStep;\n","import React, { useMemo } from 'react';\nimport { Form, Formik } from 'formik';\n\nimport { __t } from '@mssgme/shared';\nimport { Textarea } from '@mssgme/ui';\nimport { useCRMData, useSavedOrders } from '../../../hooks';\nimport { TextField } from '../../../UI';\nimport { useOrderSubmit } from '../../useOrderSubmit';\nimport { StepsFooter } from './StepsFooter';\n\nconst INITIAL_CONTACT_INFO = {\n    firstName: '',\n    lastName: '',\n    phoneNumber: '',\n    comment: '',\n};\n\nfunction ContactInfoStep() {\n    const { form } = useCRMData();\n    const { currentOrder } = useSavedOrders();\n    const initialValues = useMemo(() => ({ contactInfo: currentOrder?.contactInfo || INITIAL_CONTACT_INFO }), [\n        currentOrder?.contactInfo,\n    ]);\n    const doSubmit = useOrderSubmit(currentOrder?._id);\n    const noLastName = !!form.optional?.lastName;\n\n    if (!currentOrder) {\n        return null;\n    }\n\n    return (\n        <Formik initialValues={initialValues} onSubmit={doSubmit}>\n            {({ isSubmitting, handleSubmit }) => (\n                <Form>\n                    <TextField\n                        required\n                        name=\"contactInfo.firstName\"\n                        label={noLastName ? __t('contactInfo.name') : __t('contactInfo.firstName')}\n                        placeholder={\n                            noLastName ? __t('contactInfo.placeholder.name') : __t('contactInfo.placeholder.firstName')\n                        }\n                    />\n                    {!noLastName && (\n                        <TextField\n                            required\n                            name=\"contactInfo.lastName\"\n                            placeholder={__t('contactInfo.placeholder.lastName')}\n                        />\n                    )}\n                    <TextField\n                        required\n                        name=\"contactInfo.phoneNumber\"\n                        placeholder={__t('contactInfo.placeholder.phoneNumber')}\n                    />\n                    <TextField\n                        component={Textarea}\n                        name=\"contactInfo.comment\"\n                        placeholder={__t('contactInfo.placeholder.comment')}\n                    />\n\n                    <StepsFooter prev next={handleSubmit} disabled={isSubmitting} />\n                </Form>\n            )}\n        </Formik>\n    );\n}\n\nexport default ContactInfoStep;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2Nkxdw-M\",\"error\":\"APzUyhGO\"};","import PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport { useAsync } from 'react-use';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { MdContactPhone } from 'react-icons/md';\n\nimport { __t } from '@mssgme/shared';\nimport { MapPinIcon, CreditCardIcon, ShoppingBagIcon } from '@mssgme/icons';\nimport { NotFoundError } from '@mssgme/api-client';\nimport { Spinner } from '@mssgme/ui';\nimport { useCoreContext, useCRMData, useFrontAPI } from '../../hooks';\nimport { Step, StepSwitch, ThemedModal } from '../../UI';\nimport AdjustingStep from './Steps/AdjustingStep';\nimport ShippingAddressStep from './Steps/ShippingAddressStep';\nimport PaymentStep from './Steps/PaymentStep';\nimport ContactInfoStep from './Steps/ContactInfoStep';\n\nimport styles from './OrderPage.scss';\n\nOrderPage.propTypes = {\n    orderId: PropTypes.string.isRequired,\n};\n\nexport function OrderPage({ orderId }) {\n    const api = useFrontAPI();\n    const location = useLocation();\n    const { form } = useCRMData();\n    const { loading, error, value } = useAsync(() => api.orders.show({ orderId, query: { complete: true } }), [\n        orderId,\n    ]);\n    const { router } = useCoreContext();\n    const backPath = location.state?.backPath || router.toHome();\n\n    if (!value) {\n        return null;\n    }\n\n    if (value.finalized) {\n        return <Redirect to={router.orders.toStatus(orderId, value.status)} />;\n    }\n\n    return (\n        <ThemedModal overlay compact title={__t('checkout')} onClose={backPath}>\n            <div className={styles.root}>\n                {loading ? (\n                    <Spinner />\n                ) : error ? (\n                    <div className={styles.error}>\n                        {NotFoundError.is(error) ? __t('order_not_found') : error.message}\n                    </div>\n                ) : (\n                    <StepSwitch>\n                        <Step name={__t('order_adjusting')} icon={ShoppingBagIcon}>\n                            <AdjustingStep />\n                        </Step>\n                        <Step name={__t('order_contact_info')} icon={MdContactPhone}>\n                            <ContactInfoStep />\n                        </Step>\n                        {!!form.collectAddress && (\n                            <Step name={__t('order_shipping_address')} icon={MapPinIcon}>\n                                <ShippingAddressStep />\n                            </Step>\n                        )}\n                        <Step name={__t('order_payment')} icon={CreditCardIcon}>\n                            <PaymentStep />\n                        </Step>\n                    </StepSwitch>\n                )}\n            </div>\n        </ThemedModal>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_16xOxYXh\",\"icon\":\"BzF9ozYT\",\"title\":\"_3s9Zed-X\",\"subTitle\":\"_3FQsGQSI\",\"orderTitle\":\"_1NfpeMBe\"};","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FaRegFrown, FaRegSmileBeam } from 'react-icons/fa';\n\nimport { __t } from '@mssgme/shared';\nimport { LandingsPropTypes, LinkBlank } from '@mssgme/ui';\nimport { useCoreContext, useCRMData, useModalThemes, useViewOrder } from '../hooks';\nimport { ThemedButton, ThemedModal } from '../UI';\n// import { OrderItemsList } from './OrderItem';\n\nimport styles from './PaymentStatusPage.scss';\n\nPaymentStatusPage.propTypes = {\n    orderId: PropTypes.string.isRequired,\n    status: LandingsPropTypes.orderStatus.isRequired,\n};\n\nfunction PaymentStatusPage({ orderId, status }) {\n    const history = useHistory();\n    const { router } = useCoreContext();\n    const { form } = useCRMData();\n    const { contentStyle } = useModalThemes();\n    const { order, error } = useViewOrder(orderId);\n    const resolvedStatus = status === 'pending' ? 'paid' : status;\n\n    const handleClose = useCallback(\n        (to) => {\n            if (to === 'toOrder') {\n                return history.push(router.userOrders.toOrder(orderId));\n            }\n\n            return history.push(router.toHome());\n        },\n        [router]\n    );\n\n    if (error) {\n        return (\n            <ThemedModal overlay compact showHeader={false} onClose={handleClose}>\n                <div className={styles.root}>\n                    <p>{__t('order_not_found')}</p>\n                </div>\n            </ThemedModal>\n        );\n    }\n\n    return (\n        <ThemedModal overlay compact showHeader={false} onClose={handleClose}>\n            {(onClose) => (\n                <div className={styles.root}>\n                    {resolvedStatus === 'failed' ? (\n                        <FaRegFrown size={60} className={styles.icon} />\n                    ) : (\n                        <FaRegSmileBeam size={60} className={styles.icon} />\n                    )}\n\n                    <h1 className={styles.title}>{__t(`payment_${resolvedStatus}`)}</h1>\n                    {resolvedStatus !== 'failed' && (\n                        <>\n                            <p className={styles.subTitle}>{form.successMessage || __t('payment_paid_subtitle')}</p>\n                            {form.successURL?.url && (\n                                <p className={styles.subTitle}>\n                                    <LinkBlank href={form.successURL.url}>\n                                        {form.successURL.title || form.successURL.url}\n                                    </LinkBlank>\n                                </p>\n                            )}\n                        </>\n                    )}\n\n                    {/*<h2 className={styles.orderTitle}>{__t('order_adjusting')}</h2>*/}\n                    {/*{order && <OrderItemsList order={order} />}*/}\n\n                    <ThemedButton\n                        fullWidth\n                        style={{ marginTop: 16 }}\n                        theme={contentStyle}\n                        onClick={() => onClose('toOrder')}\n                    >\n                        {__t('view_order')}\n                    </ThemedButton>\n                    <ThemedButton\n                        fullWidth\n                        style={{ marginTop: 8 }}\n                        contour\n                        theme={contentStyle}\n                        onClick={() => onClose('toHome')}\n                    >\n                        {__t('back_to_home')}\n                    </ThemedButton>\n                </div>\n            )}\n        </ThemedModal>\n    );\n}\n\nexport default PaymentStatusPage;\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { Route } from 'react-router-dom';\n\nexport const PassthroughRoute = ({ path, exact, component: Component, makeProps = (p) => p }) => {\n    const render = useCallback(\n        ({ match }) => {\n            const props = makeProps(match.params);\n\n            return props && <Component {...props} />;\n        },\n        [Component, makeProps]\n    );\n\n    return <Route exact={exact} path={path} render={render} />;\n};\n\nPassthroughRoute.propTypes = {\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n    exact: PropTypes.bool,\n    component: PropTypes.any.isRequired,\n    makeProps: PropTypes.func,\n};\n","import React, { useMemo } from 'react';\n\nimport { useWebsiteData } from '../../hooks';\nimport { CollectionView, ProductView } from '../../Product';\nimport { OrderPage, PaymentStatusPage, UserOrderPage, UserOrdersPage } from '../../Order';\nimport { PassthroughRoute } from '../PassthroughRoute';\n\nexport default function PageProductsRouting() {\n    const website = useWebsiteData();\n    const contexts = useMemo(\n        () => ({\n            product: ({ productSlug, collectionSlug }) => ({\n                productSlug,\n                collectionSlug,\n                workspaceId: website.workspace,\n                defaultCollectionId: website.defaultCollectionId,\n            }),\n            collection: ({ collectionSlug }) => {\n                const collection = collectionSlug && website.collections.find(({ slug }) => slug === collectionSlug);\n\n                if (!collection) {\n                    return null;\n                }\n\n                return {\n                    workspaceId: website.workspace,\n                    websiteId: website._id,\n                    collection,\n                };\n            },\n        }),\n        [website.workspace, website.defaultCollectionId, website.collections]\n    );\n\n    return (\n        <>\n            <PassthroughRoute path=\"/c/:collectionSlug\" makeProps={contexts.collection} component={CollectionView} />\n\n            <PassthroughRoute\n                path={['/p/:productSlug', '/c/:collectionSlug/p/:productSlug']}\n                makeProps={contexts.product}\n                component={ProductView}\n            />\n\n            <PassthroughRoute path=\"/user-orders\" component={UserOrdersPage} />\n            <PassthroughRoute path=\"/user-orders/:orderId\" exact component={UserOrderPage} />\n            <PassthroughRoute\n                path={[\n                    '/orders/:orderId',\n                    '/p/:productSlug/orders/:orderId',\n                    '/c/:collectionSlug/p/:productSlug/orders/:orderId',\n                ]}\n                exact\n                component={OrderPage}\n            />\n            <PassthroughRoute path=\"/orders/:orderId/payment/:status\" component={PaymentStatusPage} />\n        </>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"flex\":\"_13OHpFIB\",\"slide\":\"_1u67jLhO\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport { Swiper as BaseSwiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Autoplay, EffectFade, EffectFlip, Pagination, Lazy, Navigation } from 'swiper';\n\nimport { cls } from '@mssgme/helpers';\n\nimport styles from './Swiper.scss';\n\nimport 'swiper/swiper.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/effect-flip/effect-flip.scss';\nimport 'swiper/components/effect-fade/effect-fade.scss';\n\nSwiperCore.use([Pagination, Lazy, Navigation, Autoplay, EffectFade, EffectFlip]);\n\nexport function Swiper({\n    children,\n    flex,\n    perView = 1,\n    initialSlide = 0,\n    allowTouchMove = true,\n    forcePerView,\n    slideClass,\n    pagination,\n    slideStyle,\n    ...rest\n}) {\n    const array = (Array.isArray(children) ? children : React.Children.toArray(children)).filter(Boolean);\n    const count = array.length;\n    const exceedsPerView = count > perView;\n    const showPagination = pagination !== false;\n    const hasPagination = exceedsPerView && showPagination;\n    const slidesPerView = forcePerView || exceedsPerView ? perView : count;\n    const paginationOptions = useMemo(() => {\n        if (!hasPagination) {\n            return false; // this will hide pagination AND disable swiping behavior\n        }\n\n        return showPagination\n            ? { clickable: true, ...pagination } // pagination + swiping enabled\n            : { el: null }; // this will hide pagination but preserve swiping behavior\n    }, [hasPagination, showPagination, pagination]);\n\n    return (\n        <BaseSwiper\n            key={`${exceedsPerView}-${showPagination}-${count}`}\n            observer\n            resizeObserver\n            spaceBetween={0}\n            slidesPerView={slidesPerView}\n            allowTouchMove={allowTouchMove && exceedsPerView}\n            initialSlide={initialSlide}\n            pagination={paginationOptions}\n            {...cls([styles.root, flex && styles.flex], rest)}\n        >\n            {array.map((child) => (\n                <SwiperSlide key={child.key} style={slideStyle} className={cn(styles.slide, slideClass)}>\n                    {child}\n                </SwiperSlide>\n            ))}\n        </BaseSwiper>\n    );\n}\n\nSwiper.propTypes = {\n    children: PropTypes.any.isRequired,\n    initialSlide: PropTypes.number,\n    perView: PropTypes.number,\n    forcePerView: PropTypes.bool,\n    allowTouchMove: PropTypes.bool,\n    flex: PropTypes.bool,\n    slideClass: PropTypes.string,\n    slideStyle: PropTypes.object,\n    pagination: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\n"],"sourceRoot":""}