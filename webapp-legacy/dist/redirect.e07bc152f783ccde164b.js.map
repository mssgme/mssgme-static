{"version":3,"sources":["webpack:////drone/src/packages/shared/src/helpers/uaParser.js","webpack:////drone/src/packages/hooks/src/useBrandingUrl.js","webpack:////drone/src/packages/hooks/src/useLanguage.js","webpack:///external \"CONFIG\"","webpack:////drone/src/packages/ui/src/components/LinkBlank/index.js","webpack:////drone/src/packages/shared/src/trans.js","webpack:////drone/src/packages/ui/img/logo_branding.svg","webpack:////drone/src/packages/ui/src/components/Branding/Branding.module.scss","webpack:////drone/src/packages/ui/src/components/Branding/index.js","webpack:////drone/src/packages/ui/img/brands/facebook-messenger.svg","webpack:////drone/src/packages/ui/img/brands/skype.svg","webpack:////drone/src/packages/ui/img/brands/telegram.svg","webpack:////drone/src/packages/ui/img/brands/viber.svg","webpack:////drone/src/packages/ui/img/brands/vkontakte.svg","webpack:///./components/Redirect/constants.js","webpack:////drone/src/packages/ui/img/brands/whatsapp.svg","webpack:///./components/Redirect/SendButton/SendButton.module.scss?d113","webpack:///./components/Redirect/SendButton/index.js","webpack:///./components/Redirect/Brand/Brand.module.scss?2938","webpack:///./components/Redirect/Brand/index.js","webpack:///./components/Redirect/Header/Header.module.scss?de36","webpack:///./components/Redirect/Header/index.js","webpack:///./components/Redirect/ScanQR/ScanQR.module.scss?6f23","webpack:///./components/Redirect/ScanQR/index.js","webpack:///./components/Redirect/Redirect.module.scss?87f1","webpack:///./components/Redirect/index.js","webpack:////drone/src/packages/helpers/src/isMobile.js","webpack:///./redirect.js"],"names":["ua","normalized","toLowerCase","Android","includes","BlackBerry","iOS","test","OperaMini","IEMobile","Safari","WebView","isMobile","useBrandingUrl","target","url","arguments","length","undefined","lang","useLanguage","useMemo","_window$navigator","uaParser","window","navigator","userAgent","resultUrl","baseUrl","branding_url","replace","fallback_language","content","location","hostname","main_hostname","pathname","split","urlObj","URL","finalTarget","search","URLSearchParams","utm_source","utm_medium","utm_campaign","utm_content","toString","LanguageContext","createContext","useContext","module","exports","CONFIG","LinkBlank","props","React","createElement","_extends","rel","trans","constructor","locales","this","extend","Object","assign","t","key","values","def","format","bind","__t","bound","Branding","_ref","className","animated","brandingUrl","poweredBy","classNames","styles","href","src","logoSrc","alt","MESSENGER_BRANDS","whatsapp","label","color","downloadUrl","logo","telegram","TELEGRAM_LOGO","viber","VIBER_LOGO","messenger","FACEBOOK_MESSENGER_LOGO","vk","VKONTAKTE_LOGO","skype","SKYPE_LOGO","SendButton","rest","Brand","Header","root","brand","ScanQR","caption","text","Pararaph","Redirect","Component","_defineProperty","data","appLink","render","name","qrCode","branding","fullname","Provider","value","style","backgroundColor","outerWidth","INITIAL_DATA","document","documentElement","LOCALES","RedirectApp","getElementById"],"mappings":"6FAAe,aAASA,GACpB,MAAMC,GAAcD,GAAM,IAAIE,cAExBC,EAAUF,EAAWG,SAAS,WAC9BC,EAAaJ,EAAWG,SAAS,cACjCE,EAAM,oBAAoBC,KAAKN,GAC/BO,EAAYP,EAAWG,SAAS,cAChCK,EAAWR,EAAWG,SAAS,YAKrC,MAAO,CACHD,UACAE,aACAC,MACAE,YACAC,WACAC,OAVWT,EAAWG,SAAS,UAW/BO,QAVYV,EAAWG,SAAS,MAWhCQ,SAVaT,GAAWE,GAAcC,GAAOE,GAAaC,K,sJCL3D,SAASI,IAAqC,IAAtB,OAAEC,EAAM,IAAEC,GAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC7C,MAAMG,EAAOC,eACP,SAAER,GAAaS,kBAAQ,SAAAC,EAAA,OAAMC,YAAyB,QAAjBD,EAACE,OAAOC,iBAAS,IAAAH,OAAA,EAAhBA,EAAkBI,YAAY,IACpEC,EAAYN,kBAAQ,KACtB,MAAMO,GAAWb,GAAOc,gBAAcC,QAAQ,SAAUX,IAASY,oBAAoB,GAAM,IAAGZ,GACxFL,EAASF,EAAW,SAAW,UAC/BoB,EACFR,OAAOS,SAASC,WAAaC,gBACvBX,OAAOS,SAASG,SAASC,MAAM,KAAK,GACpCb,OAAOS,SAASC,SACpBI,EAAS,IAAIC,IAAIX,GACjBY,EAAc1B,IAAWF,EAAW,SAAW,WASrD,OAPA0B,EAAOG,OAAS,IAAIC,gBAAgB,CAChCC,WAAY,yBACZC,WAAa,qBAAoBJ,EACjCK,aAAe,qBAAoBL,EACnCM,YAAad,IAGVM,EAAOS,YACf,CAAC5B,EAAML,EAAQC,IAElB,OAAOY,I,yDC5BX,oFAEO,MAAMqB,EAAkBC,wBAAc,MAEtC,SAAS7B,IACZ,OAAO8B,qBAAWF,K,mBCLtBG,EAAOC,QAAUC,Q,gUCGV,SAASC,EAAUC,GACtB,OAAOC,IAAAC,cAAA,IAAAC,EAAA,CAAG5C,OAAO,SAAS6C,IAAI,uBAA0BJ,M,kCCJ5D,6FA0BO,MAAMK,EAAQ,IAxBd,MACHC,cAA0B,IAAdC,EAAO9C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAClB+C,KAAKD,QAAUA,EAGnBE,OAAOF,GACHC,KAAKD,QAAUG,OAAOC,OAAO,GAAIH,KAAKD,QAASA,GAGnDK,EAAEC,EAAKC,GAAmB,IAAXC,EAAGtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGoD,EACjB,OAAKL,KAAKD,QAAQM,GACXG,IAAOR,KAAKD,QAAQM,GAAMC,GADFC,EASnC,YACI,OAAOP,KAAKI,EAAEK,KAAKT,QAUdU,EAAMb,EAAMc,O,yIChCV,MAA0B,2B,wBCC1B,EAAQ,YAAR,EAA2B,YAA3B,EAAmD,YAAnD,EAA0E,YAA1E,EAA6F,YAA7F,EAAwH,YCQhI,SAASC,EAAQC,GAAkC,IAAjC,UAAEC,EAAS,SAAEC,GAAW,GAAOF,EACpD,MAAMzD,EAAOC,cACP2D,EAAclE,cACdmE,EAAqB,OAAT7D,EAAgB,gBAAkB,aAEpD,OACIqC,IAAAC,cAAA,OAAKoB,UAAWI,IAAWC,EAAaL,EAAWK,EAAkBJ,EAAWI,EAAkB,OAC9F1B,IAAAC,cAACH,IAAS,CAAC6B,KAAMJ,EAAaF,UAAWK,GACrC1B,IAAAC,cAAA,OAAK2B,IAAKC,EAASC,IAAI,iBACvB9B,IAAAC,cAAA,QAAMoB,UAAWK,GACZF,EAAU,IAACxB,IAAAC,cAAA,QAAMoB,UAAWK,GAAqB,cCnBvD,UAA0B,uCCA1B,MAA0B,0BCA1B,MAA0B,6BCA1B,MAA0B,0BCA1B,MAA0B,8BCSzC,MAEMK,EAAmB,CACrBC,SAAU,CACNC,MAAO,WACPC,MAAO,UACPC,YAAa,qCACbC,KChBO,IAA0B,8BDkBrCC,SAAU,CACNJ,MAAO,WACPC,MAAO,UACPC,YAAa,wBACbC,KAAME,GAEVC,MAAO,CACHN,MAAO,QACPC,MAAO,UACPC,YAAa,kCACbC,KAAMI,GAEVC,UAAW,CACPR,MAAO,qBACPC,MAAO,UACPE,KAAMM,GAEVC,GAAI,CACAV,MAAO,YACPC,MAAO,UACPE,KAAMQ,GAEVC,MAAO,CACHZ,MAAO,QACPC,MAAO,UACPC,YAAa,mCACbC,KAAMU,IE3CC,MAAQ,W,mOCiBRC,MAZI3B,IAAuB,IAAtB,KAAEO,KAASqB,GAAM5B,EACjC,OACIpB,IAAAC,cAAA,IAAAC,EAAA,CAAGmB,UAAWK,EAAaC,KAAMA,GAAUqB,GACtC/B,YAAI,UCRF,EAAQ,YAAR,EAA2B,YAA3B,EAAiD,YCsBjDgC,MAfD7B,IAAmB,IAAlB,UAAEqB,GAAWrB,EACxB,MAAM,MAAEa,EAAK,KAAEG,GAASL,EAAiBU,GAEzC,OACIzC,IAAAC,cAAA,UAAQoB,UAAWK,GACf1B,IAAAC,cAAA,OAAKoB,UAAWK,EAAaE,IAAKQ,IAClCpC,IAAAC,cAAA,cAAYoB,UAAWK,GAAiBO,KCbrC,GAAC,KAAO,YAAY,SAAW,YC+B/BiB,MAxBA9B,IAAmB,IAAlB,UAAEqB,GAAWrB,EAIzB,OACIpB,IAAAC,cAAA,UAAQoB,UAAWK,EAAOyB,MACtBnD,IAAAC,cAAA,OAAKoB,UAAWK,EAAO0B,OACnBpD,IAAAC,cAACgD,EAAK,CAACR,UAAWA,OCdnB,GAAC,KAAO,YAAY,QAAU,aCe9BY,MAZAjC,IAAA,IAAC,QAAEkC,EAAO,IAAE1B,GAAKR,EAAA,OAC5BpB,IAAAC,cAAA,UAAQoB,UAAWK,EAAOyB,MACtBnD,IAAAC,cAAA,cAAYoB,UAAWK,EAAO4B,SAAUA,GACxCtD,IAAAC,cAAA,OAAKoB,UAAWK,EAAO6B,KAAM3B,IAAKA,MCN3B,EAAQ,YAAR,EAA8B,WAA9B,EAAiD,YAAjD,EAAwE,YAAxE,EAA+F,Y,gpBCY9G,MAAM4B,EAAYzD,GAAUC,IAAAC,cAAA,MAAAC,EAAA,CAAKmB,UAAWK,GAAqB3B,IAElD,MAAM0D,UAAiBzD,IAAM0D,UAAUrD,cAAA,SAAA7C,WAAAmG,EAAA,gBAavC,KACP,MACIC,MAAM,QAAEC,IACRtD,KAAKR,MAGT/B,OAAOS,SAASkD,KAAOkC,IAS3BC,SACI,MACIF,MAAM,UAAEnB,EAAS,KAAEsB,EAAI,OAAEC,EAAM,QAAEH,EAAO,SAAEI,EAAQ,SAAEC,GAAU,KAC9DvG,GACA4C,KAAKR,OACH,MAAEkC,EAAK,MAAEC,GAAUH,EAAiBU,GAE1C,OACIzC,IAAAC,cAACT,IAAgB2E,SAAQ,CAACC,MAAOzG,GAC7BqC,IAAAC,cAAA,OAAKoB,UAAWK,GACZ1B,IAAAC,cAACiD,EAAM,CAACT,UAAWA,IACnBzC,IAAAC,cAAA,OAAKoB,UAAWK,GACZ1B,IAAAC,cAAA,WACID,IAAAC,cAAA,MAAIoB,UAAWK,GAAeT,YAAI,WAAY,CAACiD,EAAUjC,KACzDjC,IAAAC,cAACuD,EAAQ,KAAEvC,YAAI,kBAAmB,CAACgB,KACnCjC,IAAAC,cAACuD,EAAQ,KACLxD,IAAAC,cAAC8C,EAAU,CAACpB,KAAMkC,EAASQ,MAAO,CAAEC,gBAAiBpC,QC1D1ElE,OAAOuG,WAAa,MD6DCvE,IAAAC,cAACuD,EAAQ,KACLxD,IAAAC,cAACoD,EAAM,CAACC,QAASrC,YAAI,WAAYW,IAAKoC,KAG7CC,GACGjE,IAAAC,cAACuD,EAAQ,KACLxD,IAAAC,cAACkB,EAAQ,CAACE,UAAWK,UE7DzD,MAAMkC,EAAO5F,OAAOwG,cACZ7G,KAAIA,GAAKK,OAAOyG,SAASC,gBAEjCtE,IAAMI,OAAOxC,OAAO2G,SAEpBb,iBAAO9D,IAAAC,cAAC2E,EAAW,CAAChB,KAAMA,EAAMjG,KAAMA,IAAU8G,SAASI,eAAe,W","file":"redirect.e07bc152f783ccde164b.js","sourcesContent":["export default function(ua) {\n    const normalized = (ua || '').toLowerCase();\n\n    const Android = normalized.includes('android');\n    const BlackBerry = normalized.includes('blackberry');\n    const iOS = /iphone|ipad|ipod/i.test(normalized);\n    const OperaMini = normalized.includes('opera mini');\n    const IEMobile = normalized.includes('iemobile');\n    const Safari = normalized.includes('safari');\n    const WebView = normalized.includes('wv');\n    const isMobile = Android || BlackBerry || iOS || OperaMini || IEMobile;\n\n    return {\n        Android,\n        BlackBerry,\n        iOS,\n        OperaMini,\n        IEMobile,\n        Safari,\n        WebView,\n        isMobile,\n    };\n}\n","import { useMemo } from 'react';\nimport { uaParser } from '@mssgme/shared';\nimport { useLanguage } from './useLanguage';\nimport { branding_url, main_hostname, fallback_language } from 'config';\n\nexport function useBrandingUrl({ target, url } = {}) {\n    const lang = useLanguage();\n    const { isMobile } = useMemo(() => uaParser(window.navigator?.userAgent), []);\n    const resultUrl = useMemo(() => {\n        const baseUrl = (url || branding_url).replace('{lang}', lang === fallback_language ? '' : `/${lang}`);\n        const target = isMobile ? 'mobile' : 'desktop';\n        const content =\n            window.location.hostname === main_hostname\n                ? window.location.pathname.split('/')[1]\n                : window.location.hostname;\n        const urlObj = new URL(baseUrl);\n        const finalTarget = target || (isMobile ? 'mobile' : 'desktop');\n\n        urlObj.search = new URLSearchParams({\n            utm_source: 'userpage_branding_logo',\n            utm_medium: `userpage_branding_${finalTarget}`,\n            utm_campaign: `userpage_branding_${finalTarget}`,\n            utm_content: content,\n        });\n\n        return urlObj.toString();\n    }, [lang, target, url]);\n\n    return resultUrl;\n}\n","import { createContext, useContext } from 'react';\n\nexport const LanguageContext = createContext('en');\n\nexport function useLanguage() {\n    return useContext(LanguageContext);\n}\n","module.exports = CONFIG;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport function LinkBlank(props) {\n    return <a target=\"_blank\" rel=\"noopener noreferrer\" {...props} />;\n}\n\nLinkBlank.propTypes = {\n    href: PropTypes.string.isRequired,\n};\n","import format from 'string-template';\n\nexport class Translator {\n    constructor(locales = {}) {\n        this.locales = locales;\n    }\n\n    extend(locales) {\n        this.locales = Object.assign({}, this.locales, locales);\n    }\n\n    t(key, values, def = key) {\n        if (!this.locales[key]) return def;\n        return format(this.locales[key], values);\n    }\n\n    /**\n     * Return localized string based on `key` and `values`, or `def` if key not found in localization table.\n     *\n     * @returns {(key: string, values: object, def?: string) => string} Translator function\n     */\n    get bound() {\n        return this.t.bind(this);\n    }\n}\n\nexport const trans = new Translator();\n/**\n * Return localized string based on `key` and `values`, or `def` if key not found in localization table.\n *\n * @type {(key: string, values: object, def?: string) => string} Translator function\n */\nexport const __t = trans.bound;\n","export default __webpack_public_path__ + \"ui/img/logo_branding.svg\";","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_1ywNy5hJ\",\"link\":\"_1aIMptGt\",\"slideDown\":\"_2_hPEiJp\",\"animated\":\"_1qeOWlDh\",\"text\":\"_35B-32pk\",\"decorateText\":\"_25CXFhmE\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport logoSrc from '../../../img/logo_branding.svg';\n\nimport { useLanguage, useBrandingUrl } from '@mssgme/hooks';\nimport { LinkBlank } from '../LinkBlank';\nimport styles from './Branding.module.scss';\n\nexport function Branding({ className, animated = false }) {\n    const lang = useLanguage();\n    const brandingUrl = useBrandingUrl();\n    const poweredBy = lang === 'ru' ? 'мы используем' : 'powered by';\n\n    return (\n        <div className={classNames(styles.root, className, styles.slideDown, animated ? styles.animated : null)}>\n            <LinkBlank href={brandingUrl} className={styles.link}>\n                <img src={logoSrc} alt=\"mssg.me logo\" />\n                <span className={styles.text}>\n                    {poweredBy} <span className={styles.decorateText}>mssg.me</span>\n                </span>\n            </LinkBlank>\n        </div>\n    );\n}\n\nBranding.propTypes = {\n    className: PropTypes.string,\n    animated: PropTypes.bool,\n};\n","export default __webpack_public_path__ + \"ui/img/brands/facebook-messenger.svg\";","export default __webpack_public_path__ + \"ui/img/brands/skype.svg\";","export default __webpack_public_path__ + \"ui/img/brands/telegram.svg\";","export default __webpack_public_path__ + \"ui/img/brands/viber.svg\";","export default __webpack_public_path__ + \"ui/img/brands/vkontakte.svg\";","import { MESSENGERS } from '@mssgme/shared';\n\nimport FACEBOOK_MESSENGER_LOGO from '@mssgme/ui/img/brands/facebook-messenger.svg';\nimport SKYPE_LOGO from '@mssgme/ui/img/brands/skype.svg';\nimport TELEGRAM_LOGO from '@mssgme/ui/img/brands/telegram.svg';\nimport VIBER_LOGO from '@mssgme/ui/img/brands/viber.svg';\nimport VKONTAKTE_LOGO from '@mssgme/ui/img/brands/vkontakte.svg';\nimport WHATSAPP_LOGO from '@mssgme/ui/img/brands/whatsapp.svg';\n\nconst NO_DESKTOP_APP = ['vk', 'messenger'];\n\nconst MESSENGER_BRANDS = {\n    whatsapp: {\n        label: 'WhatsApp',\n        color: '#24d366',\n        downloadUrl: 'https://www.whatsapp.com/download/',\n        logo: WHATSAPP_LOGO,\n    },\n    telegram: {\n        label: 'Telegram',\n        color: '#1f98d4',\n        downloadUrl: 'https://telegram.org/',\n        logo: TELEGRAM_LOGO,\n    },\n    viber: {\n        label: 'Viber',\n        color: '#665cac',\n        downloadUrl: 'https://www.viber.com/download/',\n        logo: VIBER_LOGO,\n    },\n    messenger: {\n        label: 'Facebook Messenger',\n        color: '#0284ff',\n        logo: FACEBOOK_MESSENGER_LOGO,\n    },\n    vk: {\n        label: 'Vkontakte',\n        color: '#5b88bd',\n        logo: VKONTAKTE_LOGO,\n    },\n    skype: {\n        label: 'Skype',\n        color: '#00aff0',\n        downloadUrl: 'https://www.skype.com/get-skype/',\n        logo: SKYPE_LOGO,\n    },\n};\n\nexport { MESSENGERS as AVAILABLE_MESSENGERS, NO_DESKTOP_APP, MESSENGER_BRANDS };\n","export default __webpack_public_path__ + \"ui/img/brands/whatsapp.svg\";","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dKr2CIL4\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { __t } from '@mssgme/shared';\nimport styles from './SendButton.module.scss';\n\nconst SendButton = ({ href, ...rest }) => {\n    return (\n        <a className={styles.root} href={href} {...rest}>\n            {__t('send')}\n        </a>\n    );\n};\n\nSendButton.propTypes = {\n    href: PropTypes.string.isRequired,\n};\n\nexport default SendButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3Bp_q_eT\",\"logo\":\"_2QqorARP\",\"caption\":\"_2EkrzwPA\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MESSENGERS } from '@mssgme/shared';\nimport { MESSENGER_BRANDS } from '../constants';\n\nimport styles from './Brand.module.scss';\n\nconst Brand = ({ messenger }) => {\n    const { label, logo } = MESSENGER_BRANDS[messenger];\n\n    return (\n        <figure className={styles.root}>\n            <img className={styles.logo} src={logo} />\n            <figcaption className={styles.caption}>{label}</figcaption>\n        </figure>\n    );\n};\n\nBrand.propTypes = {\n    messenger: PropTypes.oneOf(MESSENGERS).isRequired,\n};\n\nexport default Brand;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_15hssE44\",\"download\":\"kaKHfKHj\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NO_DESKTOP_APP, MESSENGER_BRANDS, AVAILABLE_MESSENGERS } from '../constants';\nimport { __t } from '@mssgme/shared';\n// import { isMobile } from '@mssgme/helpers';\nimport Brand from '../Brand';\nimport styles from './Header.module.scss';\n\nconst Header = ({ messenger }) => {\n    // const hasDesktopApp = NO_DESKTOP_APP.indexOf(messenger) < 0;\n    // const { label, color, downloadUrl } = MESSENGER_BRANDS[messenger];\n\n    return (\n        <header className={styles.root}>\n            <div className={styles.brand}>\n                <Brand messenger={messenger} />\n            </div>\n            {/* {!isMobile() && hasDesktopApp && (\n                <div className={styles.download} style={{ backgroundColor: color }}>\n                    <a href={downloadUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n                        {__t('not_have', [label])} <strong>{__t('download_it')}</strong>\n                    </a>\n                </div>\n            )} */}\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    messenger: PropTypes.oneOf(AVAILABLE_MESSENGERS).isRequired,\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2vTzqfcT\",\"caption\":\"_2_PRiejF\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ScanQR.module.scss';\n\nconst ScanQR = ({ caption, src }) => (\n    <figure className={styles.root}>\n        <figcaption className={styles.caption}>{caption}</figcaption>\n        <img className={styles.text} src={src} />\n    </figure>\n);\n\nScanQR.propTypes = {\n    caption: PropTypes.string.isRequired,\n    src: PropTypes.string.isRequired,\n};\n\nexport default ScanQR;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3Kn6zukD\",\"content\":\"e43I_jKa\",\"write\":\"_2Zw331Oh\",\"pararaph\":\"_1diB90TT\",\"branding\":\"_2wZ5SMeT\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isMobile } from '@mssgme/helpers';\nimport { __t } from '@mssgme/shared';\nimport { LanguageContext } from '@mssgme/hooks';\nimport { Branding } from '@mssgme/ui';\nimport { MESSENGER_BRANDS, AVAILABLE_MESSENGERS } from './constants';\nimport SendButton from './SendButton';\nimport Header from './Header';\nimport ScanQR from './ScanQR';\nimport styles from './Redirect.module.scss';\n\nconst Pararaph = (props) => <div className={styles.pararaph} {...props} />;\n\nexport default class Redirect extends React.Component {\n    static propTypes = {\n        data: PropTypes.shape({\n            messenger: PropTypes.oneOf(AVAILABLE_MESSENGERS).isRequired,\n            name: PropTypes.string.isRequired,\n            appLink: PropTypes.string.isRequired,\n            fullname: PropTypes.string.isRequired,\n            branding: PropTypes.bool.isRequired,\n            qrCode: PropTypes.string,\n        }).isRequired,\n        lang: PropTypes.string,\n    };\n\n    openLink = () => {\n        const {\n            data: { appLink },\n        } = this.props;\n        // const isApp = !appLink.match(/^(https?:\\/\\/.+)/);\n\n        window.location.href = appLink;\n    };\n\n    // componentDidMount() {\n    //     setTimeout(() => {\n    //         this.openLink();\n    //     }, 100);\n    // }\n\n    render() {\n        const {\n            data: { messenger, name, qrCode, appLink, branding, fullname },\n            lang,\n        } = this.props;\n        const { label, color } = MESSENGER_BRANDS[messenger];\n\n        return (\n            <LanguageContext.Provider value={lang}>\n                <div className={styles.root}>\n                    <Header messenger={messenger} />\n                    <div className={styles.content}>\n                        <div>\n                            <h1 className={styles.write}>{__t('write_on', [fullname, label])}</h1>\n                            <Pararaph>{__t('click_on_button', [label])}</Pararaph>\n                            <Pararaph>\n                                <SendButton href={appLink} style={{ backgroundColor: color }} />\n                            </Pararaph>\n                            {!isMobile() && (\n                                <Pararaph>\n                                    <ScanQR caption={__t('scan_qr')} src={qrCode} />\n                                </Pararaph>\n                            )}\n                            {branding && (\n                                <Pararaph>\n                                    <Branding className={styles.branding} />\n                                </Pararaph>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </LanguageContext.Provider>\n        );\n    }\n}\n","export default function isMobile() {\n    return window.outerWidth < 768;\n}\n","import '@mssgme/scss-basics';\nimport React from 'react';\nimport { render } from 'react-dom';\n\nimport { trans } from '@mssgme/shared';\nimport RedirectApp from './components/Redirect';\n\nconst data = window.INITIAL_DATA;\nconst { lang } = window.document.documentElement;\n\ntrans.extend(window.LOCALES);\n\nrender(<RedirectApp data={data} lang={lang} />, document.getElementById('root'));\n"],"sourceRoot":""}