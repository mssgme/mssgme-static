{"version":3,"sources":["webpack:////Users/sa2rn/Projects/inbox/packages/landings/src/Core/Page/PageBlocks/Accordion/AccordionItem.js"],"names":["AccordionItem","theme","item","isOpen","onToggle","useMemo","headerStyle","Theme","compile","textStyle","contentStyle","handleToggle","useCallback","className","styles","div","title","initial","onClick","style","titleText","cn","titleIcon","opened","size","section","key","animate","exit","variants","open","opacity","height","marginTop","collapsed","overflow","transition","duration","ease","content","propTypes","PropTypes","object","isRequired","bool","func"],"mappings":"s5BASA,IAAMA,EAAgB,SAAC,GAAsC,MAApCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAAe,EACnBC,mBAClC,iBAAO,CACHC,YAAaC,IAAMC,QAAN,OACNP,GADM,IAETQ,UAAWR,EAAMK,eAErBI,aAAcH,IAAMC,QAAQP,MAEhC,CAACA,IARGK,EADiD,EACjDA,YAAaI,EADoC,EACpCA,aAUfC,EAAeC,uBAAY,WAAYR,GAAYA,EAASF,KAAQ,CAACA,EAAME,IAEjF,OACI,yBAAKS,UAAWC,IAAOZ,MACnB,kBAAC,IAAOa,IAAR,CAAYF,UAAWC,IAAOE,MAAOC,SAAS,EAAOC,QAASP,EAAcQ,MAAOb,GAC/E,yBAAKO,UAAWC,IAAOM,WAAYlB,EAAKc,OACxC,kBAAC,IAAD,CAAQH,UAAWQ,KAAE,SAAIP,IAAOQ,WAAY,GAAvB,IAA8BR,IAAOS,OAASpB,GAA9C,IAAyDqB,KAAM,MAGxF,kBAAC,IAAD,CAAiBP,SAAS,GACrBd,GACG,kBAAC,IAAOsB,QAAR,CACIC,IAAI,UACJT,QAAQ,YACRU,QAAQ,OACRC,KAAK,YACLC,SAAU,CACNC,KAAM,CAAEC,QAAS,EAAGC,OAAQ,OAAQC,UAAW,GAC/CC,UAAW,CAAEH,QAAS,EAAGC,OAAQ,EAAGC,UAAW,EAAGE,SAAU,WAEhEC,WAAY,CAAEC,SAAU,GAAKC,KAAM,aACnCzB,UAAWC,IAAOyB,QAClBpB,MAAOT,GAENR,EAAKqC,YAQ9BvC,EAAcwC,UAAY,CACtBtC,KAAMuC,IAAUC,OAAOC,WACvB1C,MAAOwC,IAAUC,OAAOC,WACxBxC,OAAQsC,IAAUG,KAClBxC,SAAUqC,IAAUI,MAGT7C","file":"29.1ce7928da83d36715f85.js","sourcesContent":["import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo, useCallback } from 'react';\nimport { FiPlus } from 'react-icons/fi';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nimport { Theme } from '@mssgme/ui';\nimport styles from './Accordion.scss';\n\nconst AccordionItem = ({ theme, item, isOpen, onToggle }) => {\n    const { headerStyle, contentStyle } = useMemo(\n        () => ({\n            headerStyle: Theme.compile({\n                ...theme,\n                textStyle: theme.headerStyle,\n            }),\n            contentStyle: Theme.compile(theme),\n        }),\n        [theme]\n    );\n    const handleToggle = useCallback(() => void (onToggle && onToggle(item)), [item, onToggle]);\n\n    return (\n        <div className={styles.item}>\n            <motion.div className={styles.title} initial={false} onClick={handleToggle} style={headerStyle}>\n                <div className={styles.titleText}>{item.title}</div>\n                <FiPlus className={cn({ [styles.titleIcon]: true, [styles.opened]: isOpen })} size={20} />\n            </motion.div>\n\n            <AnimatePresence initial={false}>\n                {isOpen && (\n                    <motion.section\n                        key=\"content\"\n                        initial=\"collapsed\"\n                        animate=\"open\"\n                        exit=\"collapsed\"\n                        variants={{\n                            open: { opacity: 1, height: 'auto', marginTop: 8 },\n                            collapsed: { opacity: 0, height: 0, marginTop: 0, overflow: 'hidden' },\n                        }}\n                        transition={{ duration: 0.6, ease: 'easeInOut' }}\n                        className={styles.content}\n                        style={contentStyle}\n                    >\n                        {item.content}\n                    </motion.section>\n                )}\n            </AnimatePresence>\n        </div>\n    );\n};\n\nAccordionItem.propTypes = {\n    item: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    isOpen: PropTypes.bool,\n    onToggle: PropTypes.func,\n};\n\nexport default AccordionItem;\n"],"sourceRoot":""}