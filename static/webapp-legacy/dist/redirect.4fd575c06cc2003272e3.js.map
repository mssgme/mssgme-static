{"version":3,"sources":["webpack:////Users/sa2rn/Projects/inbox/packages/ui/img/brands/whatsapp.svg","webpack:////Users/sa2rn/Projects/inbox/packages/ui/img/brands/facebook-messenger.svg","webpack:///./components/Redirect/Header/styles.scss?d034","webpack:///./components/Redirect/Brand/styles.scss?188f","webpack:///./components/Redirect/SendButton/styles.scss?3039","webpack:////Users/sa2rn/Projects/inbox/packages/ui/img/brands/vkontakte.svg","webpack:///./components/Redirect/ScanQR/styles.scss?1e2c","webpack:////Users/sa2rn/Projects/inbox/packages/ui/img/brands/skype.svg","webpack:////Users/sa2rn/Projects/inbox/packages/ui/img/brands/telegram.svg","webpack:///./components/Redirect/styles.scss?2bbe","webpack:////Users/sa2rn/Projects/inbox/packages/ui/img/logo_branding.svg","webpack:////Users/sa2rn/Projects/inbox/packages/ui/img/brands/viber.svg","webpack:///external \"CONFIG\"","webpack:////Users/sa2rn/Projects/inbox/packages/ui/src/components/Branding/styles.scss?acb7","webpack:////Users/sa2rn/Projects/inbox/packages/ui/src/components/Branding/index.js","webpack:///./components/Redirect/constants.js","webpack:///./components/Redirect/SendButton/index.js","webpack:///./components/Redirect/Brand/index.js","webpack:///./components/Redirect/Header/index.js","webpack:///./components/Redirect/ScanQR/index.js","webpack:///./components/Redirect/index.js","webpack:////Users/sa2rn/Projects/inbox/packages/helpers/src/isMobile.js","webpack:///./redirect.js"],"names":["module","exports","CONFIG","Branding","className","animated","lang","useLanguage","brandingUrl","useBrandingUrl","poweredBy","classNames","styles","root","slideDown","LinkBlank","href","link","src","require","alt","text","decorateText","propTypes","PropTypes","string","bool","MESSENGER_BRANDS","whatsapp","label","color","downloadUrl","logo","WHATSAPP_LOGO","telegram","TELEGRAM_LOGO","viber","VIBER_LOGO","messenger","FACEBOOK_MESSENGER_LOGO","vk","VKONTAKTE_LOGO","skype","SKYPE_LOGO","SendButton","rest","__t","isRequired","Brand","caption","oneOf","MESSENGERS","Header","brand","AVAILABLE_MESSENGERS","ScanQR","Pararaph","props","pararaph","Redirect","openLink","appLink","data","window","location","this","qrCode","name","branding","fullname","Provider","value","content","write","style","backgroundColor","outerWidth","React","Component","shape","INITIAL_DATA","document","documentElement","trans","extend","LOCALES","ReactDOM","render","getElementById"],"mappings":"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","file":"redirect.4fd575c06cc2003272e3.js","sourcesContent":["module.exports = __webpack_public_path__ + \"ui/img/brands/whatsapp.svg\";","module.exports = __webpack_public_path__ + \"ui/img/brands/facebook-messenger.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_13symRrz\",\"download\":\"_2QCXZ4Ry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_2zHE0rYp\",\"logo\":\"_3NPpqWXV\",\"caption\":\"n8DUPivW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_34NOBq7X\"};","module.exports = __webpack_public_path__ + \"ui/img/brands/vkontakte.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Mkz8tDrE\",\"caption\":\"_2crAx_2M\"};","module.exports = __webpack_public_path__ + \"ui/img/brands/skype.svg\";","module.exports = __webpack_public_path__ + \"ui/img/brands/telegram.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_35Arv6PI\",\"content\":\"_1yirLGg2\",\"write\":\"uDlq6hz0\",\"pararaph\":\"OZ4qbxPG\",\"branding\":\"G-a6-kx2\"};","module.exports = __webpack_public_path__ + \"ui/img/logo_branding.svg\";","module.exports = __webpack_public_path__ + \"ui/img/brands/viber.svg\";","module.exports = CONFIG;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"-g_YDCQj\",\"link\":\"_1f9Ix5oU\",\"slideDown\":\"_3Z_qdlZz\",\"animated\":\"UfeNoRFZ\",\"text\":\"_26y5U69N\",\"decorateText\":\"_2k0y_5Qx\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { useLanguage, useBrandingUrl } from '@mssgme/hooks';\nimport LinkBlank from '../LinkBlank';\nimport styles from './styles.scss';\n\nexport function Branding({ className, animated = false }) {\n    const lang = useLanguage();\n    const brandingUrl = useBrandingUrl();\n    const poweredBy = lang === 'ru' ? 'мы используем' : 'powered by';\n\n    return (\n        <div className={classNames(styles.root, className, styles.slideDown, animated ? styles.animated : null)}>\n            <LinkBlank href={brandingUrl} className={styles.link}>\n                <img src={require('../../../img/logo_branding.svg')} alt=\"mssg.me logo\" />\n                <span className={styles.text}>\n                    {poweredBy} <span className={styles.decorateText}>mssg.me</span>\n                </span>\n            </LinkBlank>\n        </div>\n    );\n}\n\nBranding.propTypes = {\n    className: PropTypes.string,\n    animated: PropTypes.bool,\n};\n","import { MESSENGERS } from '@mssgme/shared';\n\nimport FACEBOOK_MESSENGER_LOGO from '@mssgme/ui/img/brands/facebook-messenger.svg';\nimport SKYPE_LOGO from '@mssgme/ui/img/brands/skype.svg';\nimport TELEGRAM_LOGO from '@mssgme/ui/img/brands/telegram.svg';\nimport VIBER_LOGO from '@mssgme/ui/img/brands/viber.svg';\nimport VKONTAKTE_LOGO from '@mssgme/ui/img/brands/vkontakte.svg';\nimport WHATSAPP_LOGO from '@mssgme/ui/img/brands/whatsapp.svg';\n\nconst NO_DESKTOP_APP = ['vk', 'messenger'];\n\nconst MESSENGER_BRANDS = {\n    whatsapp: {\n        label: 'WhatsApp',\n        color: '#24d366',\n        downloadUrl: 'https://www.whatsapp.com/download/',\n        logo: WHATSAPP_LOGO,\n    },\n    telegram: {\n        label: 'Telegram',\n        color: '#1f98d4',\n        downloadUrl: 'https://telegram.org/',\n        logo: TELEGRAM_LOGO,\n    },\n    viber: {\n        label: 'Viber',\n        color: '#665cac',\n        downloadUrl: 'https://www.viber.com/download/',\n        logo: VIBER_LOGO,\n    },\n    messenger: {\n        label: 'Facebook Messenger',\n        color: '#0284ff',\n        logo: FACEBOOK_MESSENGER_LOGO,\n    },\n    vk: {\n        label: 'Vkontakte',\n        color: '#5b88bd',\n        logo: VKONTAKTE_LOGO,\n    },\n    skype: {\n        label: 'Skype',\n        color: '#00aff0',\n        downloadUrl: 'https://www.skype.com/get-skype/',\n        logo: SKYPE_LOGO,\n    },\n};\n\nexport { MESSENGERS as AVAILABLE_MESSENGERS, NO_DESKTOP_APP, MESSENGER_BRANDS };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { __t } from '@mssgme/shared';\nimport styles from './styles.scss';\n\nconst SendButton = ({ href, ...rest }) => {\n    return (\n        <a className={styles.root} href={href} {...rest}>\n            {__t('send')}\n        </a>\n    );\n};\n\nSendButton.propTypes = {\n    href: PropTypes.string.isRequired,\n};\n\nexport default SendButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MESSENGERS } from '@mssgme/shared';\nimport { MESSENGER_BRANDS } from '../constants';\n\nimport styles from './styles.scss';\n\nconst Brand = ({ messenger }) => {\n    const { label, logo } = MESSENGER_BRANDS[messenger];\n\n    return (\n        <figure className={styles.root}>\n            <img className={styles.logo} src={logo} />\n            <figcaption className={styles.caption}>{label}</figcaption>\n        </figure>\n    );\n};\n\nBrand.propTypes = {\n    messenger: PropTypes.oneOf(MESSENGERS).isRequired,\n};\n\nexport default Brand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NO_DESKTOP_APP, MESSENGER_BRANDS, AVAILABLE_MESSENGERS } from '../constants';\nimport { __t } from '@mssgme/shared';\n// import { isMobile } from '@mssgme/helpers';\nimport Brand from '../Brand';\nimport styles from './styles.scss';\n\nconst Header = ({ messenger }) => {\n    // const hasDesktopApp = NO_DESKTOP_APP.indexOf(messenger) < 0;\n    // const { label, color, downloadUrl } = MESSENGER_BRANDS[messenger];\n\n    return (\n        <header className={styles.root}>\n            <div className={styles.brand}>\n                <Brand messenger={messenger} />\n            </div>\n            {/* {!isMobile() && hasDesktopApp && (\n                <div className={styles.download} style={{ backgroundColor: color }}>\n                    <a href={downloadUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n                        {__t('not_have', [label])} <strong>{__t('download_it')}</strong>\n                    </a>\n                </div>\n            )} */}\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    messenger: PropTypes.oneOf(AVAILABLE_MESSENGERS).isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.scss';\n\nconst ScanQR = ({ caption, src }) => (\n    <figure className={styles.root}>\n        <figcaption className={styles.caption}>{caption}</figcaption>\n        <img className={styles.text} src={src} />\n    </figure>\n);\n\nScanQR.propTypes = {\n    caption: PropTypes.string.isRequired,\n    src: PropTypes.string.isRequired,\n};\n\nexport default ScanQR;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isMobile } from '@mssgme/helpers';\nimport { __t } from '@mssgme/shared';\nimport { LanguageContext } from '@mssgme/hooks';\nimport { Branding } from '@mssgme/ui';\nimport { MESSENGER_BRANDS, AVAILABLE_MESSENGERS } from './constants';\nimport SendButton from './SendButton';\nimport Header from './Header';\nimport ScanQR from './ScanQR';\nimport styles from './styles.scss';\n\nconst Pararaph = (props) => <div className={styles.pararaph} {...props} />;\n\nexport default class Redirect extends React.Component {\n    static propTypes = {\n        data: PropTypes.shape({\n            messenger: PropTypes.oneOf(AVAILABLE_MESSENGERS).isRequired,\n            name: PropTypes.string.isRequired,\n            appLink: PropTypes.string.isRequired,\n            fullname: PropTypes.string.isRequired,\n            branding: PropTypes.bool.isRequired,\n            qrCode: PropTypes.string,\n        }).isRequired,\n        lang: PropTypes.string,\n    };\n\n    openLink = () => {\n        const {\n            data: { appLink },\n        } = this.props;\n        // const isApp = !appLink.match(/^(https?:\\/\\/.+)/);\n\n        window.location.href = appLink;\n    };\n\n    // componentDidMount() {\n    //     setTimeout(() => {\n    //         this.openLink();\n    //     }, 100);\n    // }\n\n    render() {\n        const {\n            data: { messenger, name, qrCode, appLink, branding, fullname },\n            lang,\n        } = this.props;\n        const { label, color } = MESSENGER_BRANDS[messenger];\n\n        return (\n            <LanguageContext.Provider value={lang}>\n                <div className={styles.root}>\n                    <Header messenger={messenger} />\n                    <div className={styles.content}>\n                        <div>\n                            <h1 className={styles.write}>{__t('write_on', [fullname, label])}</h1>\n                            <Pararaph>{__t('click_on_button', [label])}</Pararaph>\n                            <Pararaph>\n                                <SendButton href={appLink} style={{ backgroundColor: color }} />\n                            </Pararaph>\n                            {!isMobile() && (\n                                <Pararaph>\n                                    <ScanQR caption={__t('scan_qr')} src={qrCode} />\n                                </Pararaph>\n                            )}\n                            {branding && (\n                                <Pararaph>\n                                    <Branding className={styles.branding} />\n                                </Pararaph>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </LanguageContext.Provider>\n        );\n    }\n}\n","export default function isMobile() {\n    return window.outerWidth < 768;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { trans } from '@mssgme/shared';\nimport RedirectApp from './components/Redirect';\n\nconst data = window.INITIAL_DATA;\nconst { lang } = window.document.documentElement;\n\ntrans.extend(window.LOCALES);\n\nReactDOM.render(<RedirectApp data={data} lang={lang} />, document.getElementById('root'));\n"],"sourceRoot":""}