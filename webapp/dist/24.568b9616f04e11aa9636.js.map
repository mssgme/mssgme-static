{"version":3,"sources":["webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Accordion/PlusIcon.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Accordion/AccordionItem.js"],"names":["PlusIcon","props","React","createElement","IconBase","_extends","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","viewBox","x1","y1","x2","y2","AccordionItem","_ref","theme","item","isOpen","onToggle","headerStyle","contentStyle","useMemo","Theme","compile","textStyle","handleToggle","useCallback","className","styles","motion","div","title","initial","onClick","style","titleText","cn","titleIcon","opened","size","AnimatePresence","section","key","animate","exit","variants","open","opacity","height","marginTop","collapsed","overflow","transition","duration","ease","content"],"mappings":"o6BAKO,SAASA,EAASC,GACrB,OACIC,IAAAC,cAACC,IAAQC,EAAA,CACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,KAAK,OACLC,QAAQ,aACJV,GAEJC,IAAAC,cAAA,QAAMS,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChCb,IAAAC,cAAA,QAAMS,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,Q,gBC2C7BC,UAlDOC,IAAuC,IAAtC,MAAEC,EAAK,KAAEC,EAAI,OAAEC,EAAM,SAAEC,GAAUJ,EACpD,MAAM,YAAEK,EAAW,aAAEC,GAAiBC,kBAClC,KAAM,CACFF,YAAaG,IAAMC,QAAQ,IACpBR,EACHS,UAAWT,EAAMI,cAErBC,aAAcE,IAAMC,QAAQR,KAEhC,CAACA,IAECU,EAAeC,sBAAY,KAAYR,GAAYA,EAASF,IAAQ,CAACA,EAAME,IAEjF,OACInB,IAAAC,cAAA,OAAK2B,UAAWC,IAAOZ,MACnBjB,IAAAC,cAAC6B,IAAOC,IAAG,CAACH,UAAWC,IAAOG,MAAOC,SAAS,EAAOC,QAASR,EAAcS,MAAOf,GAC/EpB,IAAAC,cAAA,OAAK2B,UAAWC,IAAOO,WAAYnB,EAAKe,OACxChC,IAAAC,cAACH,EAAQ,CAAC8B,UAAWS,IAAG,CAAE,CAACR,IAAOS,YAAY,EAAM,CAACT,IAAOU,QAASrB,IAAWsB,KAAM,MAG1FxC,IAAAC,cAACwC,IAAe,CAACR,SAAS,GACrBf,GACGlB,IAAAC,cAAC6B,IAAOY,QAAO,CACXC,IAAI,UACJV,QAAQ,YACRW,QAAQ,OACRC,KAAK,YACLC,SAAU,CACNC,KAAM,CAAEC,QAAS,EAAGC,OAAQ,OAAQC,UAAW,GAC/CC,UAAW,CAAEH,QAAS,EAAGC,OAAQ,EAAGC,UAAW,EAAGE,SAAU,WAEhEC,WAAY,CAAEC,SAAU,GAAKC,KAAM,aACnC3B,UAAWC,IAAO2B,QAClBrB,MAAOd,GAENJ,EAAKuC","file":"24.568b9616f04e11aa9636.js","sourcesContent":["import React from 'react';\nimport { IconBase } from 'react-icons';\n\n// Use custom component instead '@mssgme/icons/PlusIcon' because bundling messes icon node structure,\n// making it harder to animate\nexport function PlusIcon(props) {\n    return (\n        <IconBase\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            {...props}\n        >\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n        </IconBase>\n    );\n}\n","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useMemo } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nimport { Theme } from '@mssgme/ui';\nimport { PlusIcon } from './PlusIcon';\n\nimport styles from './Accordion.module.scss';\n\nconst AccordionItem = ({ theme, item, isOpen, onToggle }) => {\n    const { headerStyle, contentStyle } = useMemo(\n        () => ({\n            headerStyle: Theme.compile({\n                ...theme,\n                textStyle: theme.headerStyle,\n            }),\n            contentStyle: Theme.compile(theme),\n        }),\n        [theme]\n    );\n    const handleToggle = useCallback(() => void (onToggle && onToggle(item)), [item, onToggle]);\n\n    return (\n        <div className={styles.item}>\n            <motion.div className={styles.title} initial={false} onClick={handleToggle} style={headerStyle}>\n                <div className={styles.titleText}>{item.title}</div>\n                <PlusIcon className={cn({ [styles.titleIcon]: true, [styles.opened]: isOpen })} size={20} />\n            </motion.div>\n\n            <AnimatePresence initial={false}>\n                {isOpen && (\n                    <motion.section\n                        key=\"content\"\n                        initial=\"collapsed\"\n                        animate=\"open\"\n                        exit=\"collapsed\"\n                        variants={{\n                            open: { opacity: 1, height: 'auto', marginTop: 8 },\n                            collapsed: { opacity: 0, height: 0, marginTop: 0, overflow: 'hidden' },\n                        }}\n                        transition={{ duration: 0.6, ease: 'easeInOut' }}\n                        className={styles.content}\n                        style={contentStyle}\n                    >\n                        {item.content}\n                    </motion.section>\n                )}\n            </AnimatePresence>\n        </div>\n    );\n};\n\nAccordionItem.propTypes = {\n    item: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    isOpen: PropTypes.bool,\n    onToggle: PropTypes.func,\n};\n\nexport default AccordionItem;\n"],"sourceRoot":""}