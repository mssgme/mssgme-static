{"version":3,"sources":["webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Giphy/Giphy.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Giphy/Giphy.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Giphy/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Audio/Audio.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Audio/Audio.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Audio/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Video/Video.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Video/Video.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/VideoGallery/VideoGallery.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/VideoGallery/VideoSlide.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/VideoGallery/VideoGallery.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/VideoGallery/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ImageGallery/ImageGallery.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ImageGallery/ImageSlide.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ImageGallery/ImageGallery.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ImageGallery/index.js"],"names":["Giphy","_ref","block","style","baseStyle","rest","useBlockTheme","gif","setGif","useState","ref","width","containerWidth","useMeasure","giphyFetch","useMemo","GiphyFetch","giphy_public_key","memoWidth","gifWidth","images","original","combined","useAsync","async","data","giphyId","React","createElement","BlockBase","_extends","cls","styles","className","cn","Gif","backgroundColor","hideAttribution","borderRadius","noLink","defaultProps","kind","GiphyBlockKind","Audio","url","insets","theme","hasAudio","ReactPlayer","canPlay","blockInsets","useBlockHorizontalInsetsPadding","padding","includes","height","config","mixcloud","options","hide_cover","hide_tracklist","hide_artwork","AudioBlockKind","Video","fixed","replace","fixShorts","hasVideo","wrapper","root","ratio","player","light","playing","controls","VideoBlockKind","YOUTUBE_TEST","YOUTUBE_ID_SPLITTER","VideoSlide","annotation","isActive","isLoaded","setIsLoaded","useBooleanHandler","isPlaying","play","stop","attributes","cover","_url$split$","youtubeVideoId","match","split","extractCover","useEffect","videoContainer","onPause","onPlay","onReady","fade","crossFade","VideoGallery","swiper","setSwiper","autoplay","effect","color","hasImage","useContrastingPageColor","resolvedInsets","margin","useDoubleNestedInsets","borderColor","isLightColor","hasPagination","videos","length","pagination","renderBullet","index","bullet","clickable","clickableClass","clickablePagination","bulletActiveClass","activeBullet","delay","autoplayOpts","stopAutoplay","useCallback","lazy","preview","placeholder","Swiper","key","flex","slideStyle","undefined","interactive","allowTouchMove","embedded","fadeEffect","onSliderMove","onSwiper","map","video","Object","assign","_ref2","onClick","_id","VideoGalleryBlockKind","ImageSlide","image","isViewMode","Tag","tagAttributes","scrollToHash","useAction","action","getMediaSizeUrl","useUploads","absoluteUrl","MediaSizes","Large","shouldFit","handleLoad","updateAutoHeight","handleClick","type","_swiper$lazy","initialImageLoaded","loadInSlide","imageBlock","fitOutside","imageContainer","alt","data-src","onLoad","preloader","LoadingIndicator","loadPrevNext","preloaderClass","loadedClass","loaded","ImageGallery","sortable","rawWidth","currentLightBoxSlideIndex","setCurrentLightBoxSlideIndex","isLightbox","openLightBox","closeLightBox","perView","total","restartDelay","Math","max","delayRestart","throttleMs","arguments","callback","setCallback","setter","fn","timer","setTimeout","clearTimeout","useThrottledCallback","handleChange","running","start","handleSlide","forceUpdate","useForceUpdate","hashItems","externalUrl","join","count","slidesPerView","watchOverflow","autoHeight","loop","onUpdate","LightBox","activeIndex","onClose","ImageGalleryBlockKind"],"mappings":"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","file":"12.f9eb61cd81d531e4a45b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3ISPBjHC\",\"content\":\"_15yqqiRH\",\"placeholder\":\"_3VpReIeK\"};","import cn from 'classnames';\nimport React, { useMemo, useState } from 'react';\nimport { useAsync, useMeasure } from 'react-use';\nimport { Gif } from '@giphy/react-components';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\n\nimport { giphy_public_key } from 'config';\nimport { GiphyBlockKind } from '@mssgme/shared';\nimport { cls } from '@mssgme/helpers';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { BlockBase } from '../BlockBase';\n\nimport styles from './Giphy.scss';\n\nexport default function Giphy({ block, style: baseStyle, ...rest }) {\n    const { style } = useBlockTheme(block);\n    const [gif, setGif] = useState(null);\n    const [ref, { width: containerWidth }] = useMeasure();\n    const giphyFetch = useMemo(() => new GiphyFetch(giphy_public_key), []);\n    const memoWidth = useMemo(() => containerWidth, [!!containerWidth]);\n    const gifWidth = gif?.images.original.width > memoWidth ? memoWidth : gif?.images.original.width;\n    const combined = useMemo(() => (baseStyle ? { ...style, ...baseStyle } : style), [style, baseStyle]);\n\n    useAsync(async () => {\n        const { data } = await giphyFetch.gif(block.giphyId);\n\n        setGif(data);\n    }, [block.giphyId]);\n\n    return (\n        <BlockBase style={combined} {...cls(styles.root, rest)}>\n            <div className={cn({ [styles.content]: true, [styles.placeholder]: !gif })} ref={ref}>\n                {gif && (\n                    <Gif\n                        gif={gif}\n                        backgroundColor=\"transparent\"\n                        hideAttribution\n                        width={gifWidth || 200}\n                        borderRadius={16}\n                        noLink\n                    />\n                )}\n            </div>\n        </BlockBase>\n    );\n}\n\nGiphy.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nGiphy.defaultProps = BlockBase.defaultProps;\n\nGiphy.kind = GiphyBlockKind;\n","import Giphy from './Giphy';\n\nexport default Giphy;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_34Sz_TzY\",\"hasAudio\":\"_2nVbQ7tq\",\"player\":\"_2WAlTW55\",\"mixcloud\":\"_3g4Vq4zq\"};","import cn from 'classnames';\nimport ReactPlayer from 'react-player';\nimport React, { useMemo } from 'react';\n\nimport { cls } from '@mssgme/helpers';\nimport { AudioBlockKind } from '@mssgme/shared';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { BlockBase, useBlockHorizontalInsetsPadding } from '../BlockBase';\n\nimport styles from './Audio.scss';\n\nexport default function Audio({ block, block: { url }, insets, ...rest }) {\n    const { theme, style } = useBlockTheme(block);\n    const hasAudio = ReactPlayer.canPlay(url);\n    const blockInsets = useBlockHorizontalInsetsPadding(insets, theme.padding === 'yes');\n\n    return (\n        <BlockBase insets={blockInsets} {...cls(rest)}>\n            <div className={cn(styles.root, { [styles.hasAudio]: hasAudio })} style={style}>\n                {hasAudio && (\n                    <ReactPlayer\n                        className={cn({ [styles.player]: true, [styles.mixcloud]: url.includes('mixcloud.com') })}\n                        url={url}\n                        width=\"100%\"\n                        height=\"100%\"\n                        config={{\n                            mixcloud: {\n                                options: {\n                                    hide_cover: false,\n                                    hide_tracklist: false,\n                                    hide_artwork: false,\n                                },\n                            },\n                        }}\n                    />\n                )}\n            </div>\n        </BlockBase>\n    );\n}\n\nAudio.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nAudio.defaultProps = BlockBase.defaultProps;\n\nAudio.kind = AudioBlockKind;\n","import Audio from './Audio';\n\nexport default Audio;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3FRtghnH\",\"hasVideo\":\"_3Aj67paT\",\"square\":\"_2YR5Euqa\",\"vertical\":\"_1xfKGWnN\",\"yes\":\"_1ugyYonT\",\"player\":\"IpnyRsKe\"};","import cn from 'classnames';\nimport ReactPlayer from 'react-player';\nimport React from 'react';\n\nimport { VideoBlockKind } from '@mssgme/shared';\nimport { cls } from '@mssgme/helpers';\nimport { LandingsPropTypes } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { BlockBase, useBlockHorizontalInsetsPadding } from '../BlockBase';\n\nimport styles from './Video.scss';\n\nconst fixShorts = (url) => {\n    return url && url.replace(/(youtu(?:.be|be.com))\\/shorts/i, '$1/embed');\n};\n\nexport default function Video({ block, block: { url }, insets, ...rest }) {\n    const { theme, style } = useBlockTheme(block);\n    const fixed = fixShorts(url);\n    const hasVideo = ReactPlayer.canPlay(fixed);\n\n    const blockInsets = useBlockHorizontalInsetsPadding(insets, theme.padding === 'yes');\n\n    return (\n        <BlockBase insets={blockInsets} {...cls(styles.wrapper, rest)}>\n            <div className={cn(styles.root, styles[theme.ratio], { [styles.hasVideo]: hasVideo })} style={style}>\n                {hasVideo && (\n                    <ReactPlayer\n                        className={styles.player}\n                        light\n                        playing\n                        controls\n                        url={fixed}\n                        width=\"100%\"\n                        height=\"100%\"\n                    />\n                )}\n            </div>\n        </BlockBase>\n    );\n}\n\nVideo.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nVideo.defaultProps = BlockBase.defaultProps;\n\nVideo.kind = VideoBlockKind;\n","// extracted by mini-css-extract-plugin\nexport default {\"inList\":\"_3ir0lTB7\",\"clickablePagination\":\"_2dI5vLAe\",\"bullet\":\"O1Bh9zR7\",\"activeBullet\":\"i0wkGPHl\",\"videoContainer\":\"_1UDdl4GO\",\"hasVideo\":\"_7LTOnhgp\",\"square\":\"H0L-bW_T\",\"vertical\":\"_1ekZWqw3\",\"yes\":\"_2UtHsL93\",\"player\":\"GkWss4MK\",\"annotation\":\"xzfbHz2b\",\"preview\":\"_340yrqN2\",\"placeholder\":\"_3OIPciSq\",\"rectangle\":\"Y2zj_2-K\"};","import PropTypes from 'prop-types';\nimport ReactPlayer from 'react-player';\nimport React, { useEffect, useMemo } from 'react';\n\nimport { cls } from '@mssgme/helpers';\nimport { useBooleanHandler } from '@mssgme/hooks';\n\nimport styles from './VideoGallery.scss';\n\nconst YOUTUBE_TEST = /^https:\\/\\/(www.)?youtu\\.?be/;\nconst YOUTUBE_ID_SPLITTER = /v\\/|v=|youtu\\.be\\//;\nconst fixShorts = (url) => url && url.replace(/(youtu(?:\\.be|be\\.com))\\/shorts/i, '$1/embed');\nconst extractCover = (url) => {\n    const youtubeVideoId = url.match(YOUTUBE_TEST) ? url.split(YOUTUBE_ID_SPLITTER)[1]?.split(/[?&]/)[0] : null;\n\n    if (youtubeVideoId) {\n        return `https://i.ytimg.com/vi/${youtubeVideoId}/hqdefault.jpg`;\n    }\n};\n\nexport const VideoSlide = ({ url, annotation = '', isActive = true, ratio, ...rest }) => {\n    const [isLoaded, setIsLoaded] = useBooleanHandler(false);\n    const [isPlaying, play, stop] = useBooleanHandler(false);\n    const [hasVideo, attributes] = useMemo(() => {\n        const fixed = fixShorts(url) || '';\n        const cover = extractCover(fixed);\n\n        return [\n            ReactPlayer.canPlay(fixed),\n            {\n                light: cover || true,\n                url: fixed,\n            },\n        ];\n    }, [url]);\n\n    useEffect(() => {\n        if (isLoaded) {\n            play();\n        }\n    }, [isLoaded]);\n\n    return (\n        <div {...cls([styles.videoContainer, styles[ratio], { [styles.hasVideo]: hasVideo }], rest)}>\n            {hasVideo && (\n                <ReactPlayer\n                    className={styles.player}\n                    controls\n                    playing={isPlaying && isActive}\n                    width=\"100%\"\n                    height=\"100%\"\n                    onPause={stop}\n                    onPlay={play}\n                    onReady={setIsLoaded}\n                    {...attributes}\n                />\n            )}\n            {annotation && !isLoaded && !isPlaying && <div className={styles.annotation}>{annotation}</div>}\n        </div>\n    );\n};\n\nVideoSlide.propTypes = {\n    url: PropTypes.string.isRequired,\n    annotation: PropTypes.string,\n    isActive: PropTypes.bool,\n    ratio: PropTypes.string.isRequired,\n    style: PropTypes.object,\n    onClick: PropTypes.func.isRequired,\n};\n","import cn from 'classnames';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useMeasure } from 'react-use';\n\nimport { cls, isLightColor } from '@mssgme/helpers';\nimport { VideoGalleryBlockKind } from '@mssgme/shared';\nimport { LandingsPropTypes, Swiper } from '@mssgme/ui';\nimport { useBlockTheme, useContrastingPageColor } from '../../../hooks';\nimport { useDoubleNestedInsets } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { VideoSlide } from './VideoSlide';\n\nimport styles from './VideoGallery.scss';\n\nconst fade = { crossFade: true };\n\nexport default function VideoGallery({ block, insets, style: baseStyle, ...rest }) {\n    const [ref, { width }] = useMeasure();\n    const [swiper, setSwiper] = useState(null);\n    const {\n        theme: { ratio, padding, autoplay, effect },\n        style,\n    } = useBlockTheme(block);\n    const { color, hasImage } = useContrastingPageColor();\n    const { resolvedInsets, margin } = useDoubleNestedInsets(insets, padding);\n    const borderColor = hasImage && (isLightColor(color) ? '#333' : '#eee');\n    const hasPagination = block.videos.length > 1;\n    const pagination = useMemo(() => {\n        return hasPagination\n            ? {\n                renderBullet: (index, className) =>\n                    `<span style=\"background-color: ${color};${\n                        borderColor ? `border: 1px solid ${borderColor}` : ''\n                    };\" class=\"${className + ' ' + styles.bullet}\"></span>`,\n                clickable: true,\n                clickableClass: styles.clickablePagination,\n                bulletActiveClass: styles.activeBullet,\n            }\n            : false;\n    }, [hasPagination, color]);\n    const delay = autoplay * 1000;\n    const autoplayOpts = useMemo(() => hasPagination && !!delay && { delay }, [hasPagination, delay]);\n\n    const stopAutoplay = useCallback(() => void swiper?.autoplay.stop(), []);\n\n    return (\n        <BlockBase lazy ref={ref} insets={resolvedInsets} {...cls(styles.root, rest)}>\n            {block.videos.length === 0 ? (\n                <div className={styles.preview}>\n                    <div className={cn(styles.placeholder, styles[ratio])} />\n                </div>\n            ) : (\n                <Swiper\n                    key={`${block.videos.length}-${autoplay}-${effect}-${width}-${color}`}\n                    flex\n                    slideStyle={padding ? { padding: `0 ${margin}px` } : undefined}\n                    interactive={rest.interactive}\n                    allowTouchMove={hasPagination && !rest.embedded}\n                    autoplay={autoplayOpts}\n                    effect={effect}\n                    pagination={pagination}\n                    fadeEffect={fade}\n                    onSliderMove={stopAutoplay}\n                    onSwiper={setSwiper}\n                >\n                    {block.videos.map((video, index) =>\n                        Object.assign(\n                            ({ isActive }) => (\n                                <VideoSlide\n                                    url={video.url}\n                                    annotation={video.annotation}\n                                    style={style}\n                                    ratio={ratio}\n                                    isActive={isActive}\n                                    onClick={stopAutoplay}\n                                />\n                            ),\n                            { key: video._id || `${video.url}-${index}` }\n                        )\n                    )}\n                </Swiper>\n            )}\n        </BlockBase>\n    );\n}\n\nVideoGallery.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nVideoGallery.defaultProps = BlockBase.defaultProps;\n\nVideoGallery.kind = VideoGalleryBlockKind;\n","import VideoGallery from './VideoGallery';\n\nexport default VideoGallery;\n","// extracted by mini-css-extract-plugin\nexport default {\"blurred\":\"_251K1cse\",\"slide\":\"_2_gsfIu5\",\"clickablePagination\":\"_3XJQ6puG\",\"bullet\":\"_2VIBQrdW\",\"activeBullet\":\"_1aTahp4u\",\"imageBlock\":\"_3GUIjoJS\",\"annotation\":\"KTkjYbis\",\"imageContainer\":\"_1-tgI8sz\",\"preloader\":\"_2tOe0o8y\",\"placeholder\":\"_3cKn-sRE\",\"original\":\"_1ZSVkp4I\",\"loaded\":\"_3R0DaN2b\",\"square\":\"KFmfISnG\",\"image\":\"_3LN39vZd\",\"rectangle\":\"_2pksWdsk\",\"fit-inside\":\"Am3gE8ry\",\"fitInside\":\"Am3gE8ry\",\"fit-outside\":\"_36CDNn75\",\"fitOutside\":\"_36CDNn75\",\"stretch\":\"_1l7WBzhg\",\"fill\":\"_1gsgNUXV\",\"perView-2\":\"_3S9K9Wu5\",\"perView2\":\"_3S9K9Wu5\",\"perView-3\":\"_2ZF09eZO\",\"perView3\":\"_2ZF09eZO\",\"perView-4\":\"ZjBGwFK5\",\"perView4\":\"ZjBGwFK5\",\"perView-5\":\"_7k6yJXBF\",\"perView5\":\"_7k6yJXBF\",\"preview\":\"Kxv_08hZ\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect } from 'react';\n\nimport { LoadingIndicator } from '@mssgme/ui';\nimport { useUploads, MediaSizes, useAction } from '../../../hooks';\n\nimport styles from './ImageGallery.scss';\n\nexport const ImageSlide = ({ index, image, style, theme: { ratio }, onClick, swiper, isViewMode, interactive }) => {\n    const { Tag, tagAttributes, scrollToHash } = useAction({ action: image.action, isViewMode, interactive });\n    const { getMediaSizeUrl } = useUploads();\n    const absoluteUrl = getMediaSizeUrl(image.url, MediaSizes.Large);\n    const shouldFit = ratio !== 'original';\n\n    const handleLoad = useCallback(() => void (swiper && swiper.updateAutoHeight()), [swiper]);\n    const handleClick = interactive && image.action.type === 'fullImage' ? () => onClick(index) : null;\n\n    useEffect(() => {\n        if (swiper?.lazy?.initialImageLoaded) {\n            swiper.lazy.loadInSlide(index);\n        }\n    }, [index, image]);\n\n    return (\n        <div\n            className={cn(styles.imageBlock, {\n                [styles.placeholder]: !absoluteUrl,\n                [styles.fitOutside]: shouldFit,\n                [styles[ratio]]: styles[ratio],\n            })}\n            style={style}\n            onClick={scrollToHash}\n        >\n            <Tag className={styles.imageContainer} onClick={handleClick} {...tagAttributes}>\n                <div className={styles.image}>\n                    <img\n                        alt={image.annotation || 'Image'}\n                        className=\"swiper-lazy\"\n                        data-src={absoluteUrl}\n                        onLoad={handleLoad}\n                    />\n                </div>\n                <div className={styles.preloader}>\n                    <LoadingIndicator />\n                </div>\n            </Tag>\n\n            {image.annotation && <div className={styles.annotation}>{image.annotation}</div>}\n        </div>\n    );\n};\n\nImageSlide.propTypes = {\n    index: PropTypes.number.isRequired,\n    image: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n        externalUrl: PropTypes.string,\n        modal: PropTypes.bool,\n        annotation: PropTypes.string,\n        action: PropTypes.object,\n    }).isRequired,\n    theme: PropTypes.object.isRequired,\n    style: PropTypes.object,\n    onClick: PropTypes.func,\n    swiper: PropTypes.object,\n    isViewMode: PropTypes.bool,\n    interactive: PropTypes.bool,\n};\n","import cn from 'classnames';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useMeasure } from 'react-use';\n\nimport { ImageGalleryBlockKind } from '@mssgme/shared';\nimport { cls, isLightColor } from '@mssgme/helpers';\nimport { useBooleanHandler, useForceUpdate } from '@mssgme/hooks';\nimport { LandingsPropTypes, Swiper } from '@mssgme/ui';\nimport { useBlockTheme, useContrastingPageColor } from '../../../hooks';\nimport { LightBox, useDoubleNestedInsets } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { ImageSlide } from './ImageSlide';\n\nimport styles from './ImageGallery.scss';\n\nexport const useThrottledCallback = (throttleMs = 1000) => {\n    const [callback, setCallback] = useState(null);\n    const setter = useCallback((fn) => setCallback(() => fn), []);\n\n    useEffect(() => {\n        if (!callback) {\n            return;\n        }\n\n        const timer = setTimeout(callback, throttleMs);\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [callback, throttleMs]);\n\n    return setter;\n};\n\nconst fade = { crossFade: true };\nconst lazy = { loadPrevNext: true, preloaderClass: styles.preloader, loadedClass: styles.loaded };\n\nexport default function ImageGallery({ block, insets, sortable, ...rest }) {\n    const [ref, { width: rawWidth }] = useMeasure();\n    const [swiper, setSwiper] = useState(null);\n    const [currentLightBoxSlideIndex, setCurrentLightBoxSlideIndex] = useState(0);\n    const [isLightbox, openLightBox, closeLightBox] = useBooleanHandler();\n    const { theme, style } = useBlockTheme(block);\n    const { color, hasImage } = useContrastingPageColor();\n    const { ratio, padding, perView, autoplay, effect } = theme;\n    const { resolvedInsets, margin } = useDoubleNestedInsets(insets, padding);\n    const width = useMemo(() => rawWidth, [!!rawWidth]);\n    const total = block.images.length;\n    const hasPagination = total > perView;\n    const delay = autoplay * 1000;\n    const restartDelay = Math.max(1000, 5000 - delay);\n    const pagination = useMemo(() => {\n        if (!hasPagination) {\n            return false;\n        }\n\n        const borderColor = hasImage ? `border: 1px solid ${isLightColor(color) ? '#333' : '#eee'}` : '';\n\n        return {\n            renderBullet: (index, className) =>\n                `<span style=\"background-color:${color};${borderColor};\" class=\"${className} ${styles.bullet}\"></span>`,\n            clickable: true,\n            clickableClass: styles.clickablePagination,\n            bulletActiveClass: styles.activeBullet,\n        };\n    }, [hasPagination, color]);\n    const autoplayOpts = useMemo(() => hasPagination && !!delay && { delay }, [hasPagination, delay]);\n\n    const delayRestart = useThrottledCallback(restartDelay);\n    const handleChange = useCallback(\n        (swiper) => {\n            if ((swiper.autoplay && swiper.autoplay.running) || !autoplayOpts) {\n                return;\n            }\n\n            delayRestart(() => {\n                swiper.autoplay && swiper.autoplay.start();\n            });\n        },\n        [autoplayOpts]\n    );\n\n    const handleSlide = useCallback((index) => {\n        setCurrentLightBoxSlideIndex(index);\n        openLightBox();\n    }, []);\n\n    const forceUpdate = useForceUpdate();\n    const hashItems = block.images.map(({ url, externalUrl }) => `${url}-${externalUrl}`).join(':');\n    const key = sortable\n        ? `${hashItems}-${perView}-${autoplay}-${effect}-${color}-${ratio}-${forceUpdate.count}-${width}`\n        : 'swiper';\n\n    return (\n        <BlockBase\n            lazy\n            ref={ref}\n            insets={resolvedInsets}\n            sortable={sortable}\n            {...cls([styles.root, styles[`perView-${perView}`]], rest)}\n        >\n            {total > 0 ? (\n                <Swiper\n                    key={key}\n                    interactive={rest.interactive}\n                    slideStyle={padding ? { padding: `0 ${margin}px` } : undefined}\n                    slidesPerView={perView}\n                    allowTouchMove={hasPagination && !rest.embedded}\n                    flex\n                    watchOverflow\n                    autoHeight\n                    loop\n                    autoplay={autoplayOpts}\n                    pagination={pagination}\n                    fadeEffect={fade}\n                    lazy={lazy}\n                    effect={effect}\n                    onSliderMove={handleChange}\n                    onSwiper={setSwiper}\n                    onUpdate={forceUpdate}\n                >\n                    {block.images.map((image, index) => (\n                        <ImageSlide\n                            key={image._id || `${image.url}-${index}`}\n                            index={index}\n                            image={image}\n                            swiper={swiper}\n                            style={style}\n                            theme={theme}\n                            onClick={handleSlide}\n                            isViewMode={rest.isViewMode}\n                            interactive={rest.interactive}\n                        />\n                    ))}\n                </Swiper>\n            ) : (\n                <div className={styles.preview}>\n                    <div className={cn(styles.placeholder, styles[ratio])} />\n                </div>\n            )}\n\n            {isLightbox && (\n                <LightBox activeIndex={currentLightBoxSlideIndex} images={block.images} onClose={closeLightBox} />\n            )}\n        </BlockBase>\n    );\n}\n\nImageGallery.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nImageGallery.defaultProps = BlockBase.defaultProps;\n\nImageGallery.kind = ImageGalleryBlockKind;\n","import ImageGallery from './ImageGallery';\n\nexport default ImageGallery;\n"],"sourceRoot":""}