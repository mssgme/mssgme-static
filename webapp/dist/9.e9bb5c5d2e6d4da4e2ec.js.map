{"version":3,"sources":["webpack:////drone/src/packages/userpage-core/src/landings/hooks/useContrastingColor.js","webpack:////drone/src/packages/lib/src/feedbackApi.js","webpack:////drone/src/packages/shared/src/landings/feedbacks.js","webpack:////drone/src/packages/ui/src/components/Inputs/CountrySelect/index.js","webpack:////drone/src/packages/ui/src/components/Inputs/RadioGroup/styles.scss","webpack:////drone/src/packages/ui/src/components/Inputs/RadioGroup/index.js","webpack:////drone/src/packages/ui/src/components/Inputs/CheckboxGroup/styles.scss","webpack:////drone/src/packages/ui/src/components/Inputs/CheckboxGroup/index.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInput.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInput.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInputs.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInputs.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionFormContent.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionFormContent.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionForm.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGridItem.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGridItem.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesModal.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesModal.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGrid.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGrid.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/index.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useProductsApi.js","webpack:////drone/src/node_modules/react-use/esm/useDebounce.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/ButtonsMenu.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/ButtonsMenu.js","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/TextButton.scss","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/TextButton.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/FilterMenu.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/FilterMenu.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/CollectionsBar.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/Products.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/Products.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PassthroughRoute.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/PageProductsRouting.js"],"names":["useContrastingPageColor","theme","colors","backgroundImage","backgroundImageOpacity","style","backgroundColor","usePageTheme","isLightBG","isLightColor","isLightContrasting","buttonBackground","hasImage","TinyColor","equals","background","color","useBasePageColor","percent","arguments","length","undefined","backgroundDimmed","darken","lighten","toHexString","FeedbackApi","BaseApi","submit","workspaceId","websiteId","payload","this","post","mapDynamicFieldToName","_ref","index","_id","priorityCountries","separator","label","value","disabled","getDefaultCountriesOptions","memoizeOne","lang","countriesArray","Object","values","countries","map","item","alpha_2","alpha_3","sort","item1","item2","localeCompare","prioritizedCountries","filter","country","includes","indexOf","restCountries","CountrySelect","rest","i18n","useTranslation","React","createElement","SelectSimple","_extends","options","language","RadioGroup","className","name","onChange","userWebsiteField","classNames","styles","option","isSelected","key","version","viewBox","xmlns","width","height","fill","fillRule","transform","x","y","rx","stroke","strokeWidth","type","checked","dangerouslySetInnerHTML","__html","CheckboxGroup","Field","as","Checkbox","builderInput","placeholder","typesMap","component","Input","email","phone","text","date","time","number","select","radio","checkbox","handleEnterKey","e","preventDefault","getFieldProps","maxLength","optionsString","isTextArea","split","i","Textarea","onKeyPress","DynamicFormInput","input","defaultMaxSize","defaultStyle","useInputTheme","useCustomInputTheme","size","fieldProps","field","meta","useField","FormField","shakeError","errors","touched","error","errorStyle","inputClassName","labelClassName","DynamicFormInputs","block","cls","root","gridMode","items","SubscriptionFormContent","onSubmit","rawSubmit","interactive","sent","setSent","useState","validationSchema","useMemo","_ref2","object","reduce","acc","validator","string","trim","max","__t","required","matches","message","excludeEmptyString","mapDynamicInputsToValidationSchema","FormTag","loading","useAsyncFn","async","pairs","_values$item$_id","formik","useEnhancedFormik","initialValues","handleSentModalClosed","useCallback","resetForm","useEffect","hasUrl","sentUrl","timer","setTimeout","window","location","clearTimeout","setErrors","mapValues","FormikProvider","id","SubmitButton","ThemedButton","isInitialHidden","fullWidth","isFetching","buttonTextColor","borderRadius","sendLabel","AnimatePresence","ThemedModal","compact","overlay","showHeader","onClose","handleClose","onClick","FiX","FiCheck","sentText","SubscriptionForm","baseStyle","useBlockTheme","website","useWebsiteData","combined","useMergedStyles","handleSubmit","feedbackApi","workspace","blockId","data","submitEvent","CustomEvent","detail","document","dispatchEvent","BlockBase","defaultProps","kind","SubscriptionFormBlockKind","ServicesGridItem","themeStyles","getMediaSizeUrl","useUploads","photoUrl","MediaSizes","Half","cn","thumbnail","LazyImage","src","alt","title","emptyPlaceholder","IoMdImage","price","formattedDiscount","discount","discountPrice","amount","lineThrough","formatted","ServicesModal","services","contacts","activeIndex","onClosing","handleHash","page","usePageData","history","useHistory","hasMultipleServices","contactBlocks","enabled","_ref3","blocks","find","_ref4","handleSlideChange","swiper","replace","realIndex","Swiper","allowTouchMove","initialSlide","noSwipingClass","speed","pagination","onInit","onSlideChange","service","assign","_ref5","isActive","isPrev","isNext","ServiceContent","ServicesGrid","sortable","delay","useLocation","hashId","hash","slice","slideIndexFromHash","findIndex","hasSlideFromHash","Number","isInteger","setPage","isDelayed","setDelayed","isServicesModal","setIsServicesModal","currentServiceIndex","setCurrentServiceIndex","total","hasMore","Math","ceil","sliced","handleLoadMore","old","openServicesModal","closeServicesModal","push","pathname","useTimeoutFn","Spinner","lazy","servicesList","opacity","pointerEvents","moreButtonContainer","MoreButton","ServicesGridBlockKind","useProductsApi","query","isMounted","useMountedState","store","setStore","hasNext","next","publishedCount","pending","run","getProducts","useFetching","results","productsStore","productsApi","list","limit","resetStore","collection","collections","include","published","prevProducts","concat","fn","ms","deps","_a","isReady","cancel","reset","useDebounce","catch","handleError","ButtonsMenu","activeCollectionId","onSelect","hasLeftBtn","moveLeft","hasRightBtn","moveRight","moveTo","useHorizontalTabbedScroll","baseUrl","resolvePathname","themeStyle","button","productsCategoryTextColor","buttonActive","arrowButton","arrowBg","isTabbed","filterMode","ItemTag","Link","handleClick","_e$target$dataset","_items$index","slug","target","dataset","useDeepCompareEffect","ref","col","data-index","data-slug","to","default","TextButton","props","PureButton","FilterMenuItem","active","publishedProductsCount","FilterMenu","useRef","isOpen","toggle","useToggle","selected","isMatchId","useClickAway","handleSelect","aria-pressed","ChevronDownIcon","Fade","in","CollectionsBar","Item","product","baseProductUrl","fromCollection","_product$slug","toLowerCase","state","ProductItem","tag","Products","_showCollections$","isMobileMode","generateUrl","useNavigationUtils","collectionIds","get","activeCollections","showCollections","Boolean","setActiveCollectionId","pick","isMobile","keyHash","handleMore","getFromCollection","keys","cols","_showCollections$2","firstId","SearchIcon","ProductsBlockKind","PassthroughRoute","path","exact","Component","makeProps","p","render","match","params","Route","PageProductsRouting","contexts","productSlug","collectionSlug","defaultCollectionId","Fragment","CollectionView","ProductView","UserOrdersPage","UserOrderPage","OrderPage","PaymentStatusPage"],"mappings":"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","file":"9.e9bb5c5d2e6d4da4e2ec.js","sourcesContent":["import TinyColor from 'tinycolor2';\nimport { isLightColor } from '@mssgme/helpers';\n\nimport { usePageTheme } from './useWebsiteTheme';\n\nexport const useContrastingPageColor = () => {\n    const {\n        theme: { colors, backgroundImage, backgroundImageOpacity },\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const isLightBG = isLightColor(backgroundColor);\n    const isLightContrasting = isLightColor(colors.buttonBackground);\n    const isBgUntouched = TinyColor.equals(backgroundColor, colors.background);\n    const hasImage = !!backgroundImage && backgroundImageOpacity > 0;\n\n    if (isBgUntouched && !(isLightBG && isLightContrasting)) {\n        return {\n            color: colors.buttonBackground,\n            hasImage,\n            backgroundColor,\n        };\n    }\n\n    return {\n        color: isLightBG ? '#333' : '#eee',\n        hasImage,\n        backgroundColor,\n    };\n};\nexport const useDimmedPageColor = (percent = 10) => {\n    const {\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const color = new TinyColor(backgroundColor);\n    const isLightBG = isLightColor(color);\n\n    return (isLightBG ? color.darken(percent) : color.lighten(percent)).toHexString();\n};\nexport const useBasePageColor = (percent = 10) => {\n    const {\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const color = new TinyColor(backgroundColor);\n    const isLightBG = isLightColor(color);\n\n    return {\n        isLightBG,\n        backgroundColor,\n        backgroundDimmed: (isLightBG ? color.darken(percent) : color.lighten(percent)).toHexString(),\n    };\n};\n","import { BaseApi } from './baseApi';\n\nexport class FeedbackApi extends BaseApi {\n    submit(workspaceId, websiteId, payload) {\n        return this.post(`/workspaces/${workspaceId}/websites/${websiteId}/feedback`, payload);\n    }\n}\n\nexport default ((options) => new FeedbackApi(options))();\n","import { object, string } from 'yup';\n\nimport { __t } from '../trans';\n\nexport const defaultDynamicFieldLengthLimit = 250;\nexport const mapDynamicFieldToName = ({ _id }, index) => _id || `field-${index}`;\nexport const mapDynamicInputsToValidationSchema = ({ items }) =>\n    object({\n        ...items.reduce((acc, item, index) => {\n            const field = mapDynamicFieldToName(item, index);\n            let validator = string()\n                .trim()\n                .max(item.size || defaultDynamicFieldLengthLimit, __t('field_too_long'));\n\n            if (item.required) {\n                validator = validator.required(__t('field_required'));\n            }\n\n            switch (item.type) {\n                case 'email': {\n                    validator = validator.email(__t('field_email'));\n\n                    break;\n                }\n                case 'phone': {\n                    validator = validator.matches(/\\+?[\\d\\-\\s()]{5,}/, {\n                        name: 'phone',\n                        message: __t('field_phone'),\n                        excludeEmptyString: true,\n                    });\n\n                    break;\n                }\n            }\n\n            acc[field] = validator;\n\n            return acc;\n        }, {}),\n    });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoizeOne from 'memoize-one';\nimport { useTranslation } from 'react-i18next';\n\nimport SelectSimple from '../SelectSimple';\nimport countries from './countries.json';\n\nconst priorityCountries = ['UA', 'KZ', 'RU', 'US'];\nconst separator = {\n    label: '--------------------',\n    value: 'separator1',\n    disabled: true,\n};\n\nexport const getDefaultCountriesOptions = memoizeOne((lang) => {\n    const countriesArray = Object.values(countries)\n        .map((item) => ({\n            label: item[`${lang}_name`],\n            value: `${item.alpha_2}-${item.alpha_3}`,\n            alpha_2: item.alpha_2,\n        }))\n        .sort((item1, item2) => item1.label ? item1.label.localeCompare(item2.label) : item1['en_name'].localeCompare(item2['en_name']));\n\n    const prioritizedCountries = countriesArray\n        .filter((country) => priorityCountries.includes(country.alpha_2))\n        .sort((item1, item2) => priorityCountries.indexOf(item1.alpha_2) - priorityCountries.indexOf(item2.alpha_2));\n    const restCountries = countriesArray.filter((country) => !prioritizedCountries.includes(country));\n\n    return [...prioritizedCountries, separator, ...restCountries];\n});\n\nconst CountrySelect = ({ ...rest }) => {\n    const { i18n } = useTranslation();\n\n    return <SelectSimple {...rest} options={getDefaultCountriesOptions(i18n.language)} />;\n};\n\nCountrySelect.propTypes = {\n    lang: PropTypes.string,\n};\n\nexport default CountrySelect;\n","// extracted by mini-css-extract-plugin\nexport default {\"pane\":\"_3qwvKJdU\",\"radio\":\"_3M-OICMF\",\"radioDot\":\"_1WsCkYdb\",\"active\":\"_3niUZvmH\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './styles.scss';\n\nconst RadioGroup = ({ options, value, className, name, onChange, userWebsiteField, style }) => (\n    <div className={classNames(className, userWebsiteField && styles.pane)} style={style}>\n        {options.map((option, index) => {\n            const isSelected = value === option.value;\n\n            return (\n                <div key={name + index} className={classNames(styles.radio, isSelected && styles.active)}>\n                    <label>\n                        <svg\n                            version=\"1.1\"\n                            viewBox=\"0 0 18 18\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"18\"\n                            height=\"18\"\n                        >\n                            <g fill=\"none\" fillRule=\"evenodd\">\n                                <g transform=\"translate(-568 -3567)\">\n                                    <g transform=\"translate(568 3567)\">\n                                        <rect\n                                            x=\".75\"\n                                            y=\".75\"\n                                            width=\"16.5\"\n                                            height=\"16.5\"\n                                            rx=\"8.25\"\n                                            stroke={style?.color ? style.color : '#007AFF\"'}\n                                            strokeWidth=\"1.5\"\n                                        />\n                                        <rect className={styles.radioDot} x=\"3\" y=\"3\" width=\"12\" height=\"12\" rx=\"6\" fill={style?.color ? style.color : '#007AFF\"'} />\n                                    </g>\n                                </g>\n                            </g>\n                        </svg>\n\n                        <input type=\"radio\" name={name} value={option.value} checked={isSelected} onChange={onChange} />\n                        <span dangerouslySetInnerHTML={{ __html: option.label }} />\n                    </label>\n                </div>\n            );\n        })}\n    </div>\n);\n\nRadioGroup.propTypes = {\n    value: PropTypes.string,\n    className: PropTypes.string,\n    name: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({ label: PropTypes.string, value: PropTypes.string })).isRequired,\n    onChange: PropTypes.func.isRequired,\n    userWebsiteField: PropTypes.bool,\n    style: PropTypes.object,\n};\n\nexport default RadioGroup;\n","// extracted by mini-css-extract-plugin\nexport default {\"pane\":\"VGHdNTVb\",\"radio\":\"_2_QVkYwX\",\"checkbox\":\"gN5qfTgR\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Field } from 'formik';\n\nimport Checkbox from '../Checkbox';\n\nimport styles from './styles.scss';\n\nconst CheckboxGroup = ({ options, className, name, value, onChange, userWebsiteField, style }) => (\n    <div className={classNames(className, userWebsiteField && styles.pane)} style={style}>\n        {options.map((option, index) => {\n            const isSelected = value?.includes(option.value);\n\n            return (\n                <Field\n                    as={Checkbox}\n                    key={name + index}\n                    builderInput\n                    name={name}\n                    value={option.value}\n                    placeholder={option.label}\n                    onChange={onChange}\n                    isSelected={isSelected}\n                    className={styles.checkbox}\n                    style={style}\n                />\n            );\n        })}\n    </div>\n);\n\nCheckboxGroup.propTypes = {\n    className: PropTypes.string,\n    name: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({ label: PropTypes.string, value: PropTypes.string })).isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.array,\n    userWebsiteField: PropTypes.bool,\n    style: PropTypes.object,\n};\n\nexport default CheckboxGroup;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"_1Bcpw_pC\",\"label\":\"_3hGNtA0_\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useField } from 'formik';\n\nimport { mapDynamicFieldToName } from '@mssgme/shared';\nimport { FormField, Input, Textarea, SelectSimple, RadioGroup, CheckboxGroup, CountrySelect } from '@mssgme/ui';\n\nimport { useCustomInputTheme, useInputTheme } from '../../hooks';\n\nimport styles from './DynamicFormInput.scss';\n\nconst typesMap = {\n    name: {\n        type: 'text',\n        component: Input,\n    },\n    email: {\n        type: 'email',\n        component: Input,\n    },\n    phone: {\n        type: 'tel',\n        component: Input,\n    },\n    text: {\n        type: 'text',\n        component: Input,\n    },\n    date: {\n        type: 'date',\n        component: Input,\n    },\n    time: {\n        type: 'time',\n        component: Input,\n    },\n    number: {\n        type: 'number',\n        component: Input,\n    },\n    select: {\n        component: SelectSimple,\n    },\n    radio: {\n        component: RadioGroup,\n    },\n    checkbox: {\n        component: CheckboxGroup,\n    },\n    country: {\n        component: CountrySelect,\n    },\n};\n\nconst handleEnterKey = (e) => {\n    if (e.key === 'Enter') {\n        e.preventDefault();\n    }\n};\n\nconst getFieldProps = (type, maxLength, optionsString) => {\n    const inputElementTypes = ['name', 'email', 'tel', 'text', 'date', 'time', 'number'];\n    const isTextArea = maxLength > 250 && type === 'text';\n    const options = optionsString ? optionsString.split(/\\r?\\n/).filter((i) => i).map((i) => ({ label: i, value: i })) : null;\n\n    if (inputElementTypes.includes(type)) {\n        return {\n            type: isTextArea ? null : typesMap[type].type,\n            maxLength: ['date', 'time', 'number'].includes(type) ? null : maxLength,\n            component: isTextArea ? Textarea : Input,\n            onKeyPress: isTextArea ? undefined : handleEnterKey,\n        };\n    }\n\n    return { component: typesMap[type].component, options };\n};\n\nexport const DynamicFormInput = ({ index, input, as, defaultMaxSize, theme }) => {\n    const defaultStyle = useInputTheme(theme);\n    const customStyle = useCustomInputTheme(theme);\n    const style = customStyle || defaultStyle;\n    const maxLength = input.size || defaultMaxSize;\n    const name = mapDynamicFieldToName(input, index);\n    const fieldProps = { name, ...getFieldProps(input.type, maxLength, input.options) };\n    const [field, meta] = useField(fieldProps);\n\n    return (\n        <FormField\n            shakeError\n            as={as}\n            name={name}\n            errors={meta.touched && meta.error}\n            label={input.label || input.type}\n            style={style.input}\n            errorStyle={style.error}\n            inputClassName={styles.input}\n            labelClassName={styles.label}\n            {...field}\n            {...fieldProps}\n            { ...(['radio', 'checkbox'].includes(input.type) ? { userWebsiteField: true } : {}) }\n        />\n    );\n};\n\nDynamicFormInput.propTypes = {\n    input: PropTypes.shape({\n        _id: PropTypes.string,\n        label: PropTypes.string,\n        required: PropTypes.bool,\n        size: PropTypes.number,\n        options: PropTypes.string,\n        type: PropTypes.string,\n    }).isRequired,\n    index: PropTypes.number.isRequired,\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n    type: PropTypes.string,\n    defaultMaxSize: PropTypes.number.isRequired,\n    theme: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qsFFCJh2\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { cls } from '@mssgme/helpers';\n\nimport { DynamicFormInput } from './DynamicFormInput';\n\nimport styles from './DynamicFormInputs.scss';\n\nexport const DynamicFormInputs = ({ block, theme, defaultMaxSize, ...rest }) => {\n    return (\n        <ul {...cls([styles.root, styles[theme.gridMode]], rest)}>\n            {block.items.map((item, index) => (\n                <DynamicFormInput\n                    as=\"li\"\n                    key={item._id || index}\n                    index={index}\n                    input={item}\n                    defaultMaxSize={defaultMaxSize}\n                    theme={theme}\n                />\n            ))}\n        </ul>\n    );\n};\n\nDynamicFormInputs.propTypes = {\n    block: PropTypes.shape({\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                _id: PropTypes.string,\n                label: PropTypes.string,\n                required: PropTypes.bool,\n                size: PropTypes.number,\n                options: PropTypes.string,\n                type: PropTypes.string,\n            })\n        ).isRequired,\n    }).isRequired,\n    theme: PropTypes.object.isRequired,\n    defaultMaxSize: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"_35FFwmIV\",\"successContent\":\"Pbq8WWuk\",\"icon\":\"_3tc4nquV\",\"closeIcon\":\"G81q4QWv\",\"text\":\"_3Aqm6-Qf\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAsyncFn } from 'react-use';\nimport { AnimatePresence } from 'framer-motion';\nimport { FiCheck, FiX } from 'react-icons/fi';\nimport { mapValues } from 'lodash';\n\nimport {\n    __t,\n    defaultDynamicFieldLengthLimit,\n    mapDynamicFieldToName,\n    mapDynamicInputsToValidationSchema,\n} from '@mssgme/shared';\nimport { FormikProvider, LandingsPropTypes, SubmitButton, useEnhancedFormik, getDefaultCountriesOptions } from '@mssgme/ui';\nimport { DynamicFormInputs, ThemedButton, ThemedModal } from '../../../UI';\n\nimport styles from './SubscriptionFormContent.scss';\n\nexport const SubscriptionFormContent = ({ block, theme, onSubmit: rawSubmit, interactive, ...rest }) => {\n    const [sent, setSent] = useState(null);\n    const validationSchema = useMemo(() => mapDynamicInputsToValidationSchema(block), [block]);\n    const FormTag = interactive ? 'form' : 'div';\n\n    const [{ loading, error }, onSubmit] = useAsyncFn(\n        async (values) => {\n            if (false === (await rawSubmit(values))) {\n                return;\n            }\n\n            const items = block.items.map((item, index) => {\n                const field = mapDynamicFieldToName(item, index);\n                const value = values[item._id] ?? values[field];\n\n                return {\n                    key: field,\n                    label: item.label,\n                    value,\n                };\n            });\n            const pairs = items.filter(({ value }) => value);\n\n            setSent(pairs);\n        },\n        [rawSubmit]\n    );\n\n    const formik = useEnhancedFormik({\n        initialValues: useMemo(() =>\n            block.items.reduce(\n                (acc, item, index) => (\n                    (acc[mapDynamicFieldToName(item, index)] = ['select', 'radio'].includes(item.type) ?\n                        item.options.split(/\\r?\\n/).filter((i) => i)[0] :\n                        item.type === 'country' ?\n                            getDefaultCountriesOptions('en')[0].value :\n                            item.type === 'checkbox' ?\n                                [item.options.split(/\\r?\\n/).filter((i) => i)[0]] :\n                                ''\n                    ),\n                    acc\n                ),\n                {}\n            )\n        ),\n        validationSchema,\n        onSubmit,\n    });\n\n    const handleSentModalClosed = useCallback(() => {\n        setSent(false);\n        formik.resetForm();\n    }, [formik]);\n\n    useEffect(() => {\n        if (sent && block.hasUrl && block.sentUrl) {\n            const timer = setTimeout(() => (window.location = block.sentUrl), 1000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [sent, block.hasUrl, block.sentUrl, formik]);\n\n    useEffect(() => {\n        formik.setErrors(mapValues(error?.errors, (value) => __t(value)));\n    }, [error]);\n\n    return (\n        <FormikProvider value={formik}>\n            <FormTag id={`form_${block._id}`} {...rest}>\n                <DynamicFormInputs theme={theme} block={block} defaultMaxSize={defaultDynamicFieldLengthLimit} />\n\n                <div className={styles.buttonContainer}>\n                    <SubmitButton\n                        as={ThemedButton}\n                        theme={theme}\n                        isInitialHidden={false}\n                        fullWidth\n                        isFetching={loading}\n                        disabled={!block.items.length}\n                        style={{\n                            backgroundColor: theme.buttonBackground,\n                            color: theme.buttonTextColor,\n                            borderRadius: theme.borderRadius,\n                        }}\n                    >\n                        {block.sendLabel}\n                    </SubmitButton>\n                </div>\n            </FormTag>\n\n            <AnimatePresence>\n                {sent && (\n                    <ThemedModal compact overlay showHeader={false} onClose={handleSentModalClosed}>\n                        {(handleClose) => (\n                            <div className={styles.successContent}>\n                                <div className={styles.closeIcon} onClick={handleClose}>\n                                    <FiX size={26} />\n                                </div>\n                                <FiCheck size={60} className={styles.icon} />\n                                <p className={styles.text}>{block.sentText}</p>\n                            </div>\n                        )}\n                    </ThemedModal>\n                )}\n            </AnimatePresence>\n        </FormikProvider>\n    );\n};\n\nSubscriptionFormContent.propTypes = {\n    block: LandingsPropTypes.block.isRequired,\n    theme: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    interactive: PropTypes.bool,\n};\n","import React, { useCallback } from 'react';\n\nimport { SubscriptionFormBlockKind } from '@mssgme/shared';\nimport { feedbackApi } from '@mssgme/lib';\nimport { LandingsPropTypes, useMergedStyles } from '@mssgme/ui';\n\nimport { useBlockTheme, useWebsiteData } from '../../../hooks';\nimport { BlockBase } from '../BlockBase';\nimport { SubscriptionFormContent } from './SubscriptionFormContent';\n\nexport default function SubscriptionForm({ block, style: baseStyle, interactive, ...rest }) {\n    const { theme, style } = useBlockTheme(block);\n    const website = useWebsiteData();\n    const combined = useMergedStyles(style, baseStyle);\n\n    const handleSubmit = useCallback(\n        async (values) => {\n            if (!interactive) {\n                return;\n            }\n\n            await feedbackApi.submit(website.workspace, website._id, { blockId: block._id, data: values });\n\n            const submitEvent = new CustomEvent('formSubmitted', {\n                detail: block._id,\n            });\n\n            document.dispatchEvent(submitEvent);\n        },\n        [website, interactive]\n    );\n\n    return (\n        <BlockBase\n            as={SubscriptionFormContent}\n            interactive={interactive}\n            block={block}\n            style={combined}\n            theme={theme}\n            onSubmit={handleSubmit}\n            {...rest}\n        />\n    );\n}\n\nSubscriptionForm.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nSubscriptionForm.defaultProps = BlockBase.defaultProps;\n\nSubscriptionForm.kind = SubscriptionFormBlockKind;\n","import SubscriptionForm from './SubscriptionForm';\n\nexport default SubscriptionForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"-XoAMny0\",\"thumbnail\":\"C_R44W3m\",\"emptyPlaceholder\":\"_335lD0ul\",\"meta\":\"_3haFePjs\",\"title\":\"_19uOjj9I\",\"price\":\"_1YA6epaj\",\"discountPrice\":\"_26QDH8kd\",\"lineThrough\":\"_1iPjetGG\",\"list\":\"_1BKtItoB\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { IoMdImage } from 'react-icons/io';\n\nimport { __t } from '@mssgme/shared';\nimport { LazyImage } from '@mssgme/ui';\nimport { useUploads, MediaSizes } from '../../../hooks';\n\nimport styles from './ServicesGridItem.scss';\n\nexport const ServicesGridItem = ({ item, themeStyles, ...rest }) => {\n    const { getMediaSizeUrl } = useUploads();\n    const photoUrl = getMediaSizeUrl(item.photoUrl, MediaSizes.Half);\n\n    return (\n        <div className={cn(styles.item, styles[themeStyles.gridMode])} {...rest}>\n            <div className={styles.thumbnail} style={{ backgroundColor: themeStyles.backgroundColor }}>\n                {photoUrl ? (\n                    <LazyImage src={photoUrl} alt={item.title} />\n                ) : (\n                    <div className={styles.emptyPlaceholder}>\n                        <IoMdImage size=\"40%\" color=\"#fff\" />\n                    </div>\n                )}\n            </div>\n            <div className={styles.meta} style={{ color: themeStyles.color }}>\n                <div>\n                    <h6 className={styles.title}>{item.title}</h6>\n                    {item.price && (\n                        <div className={styles.price}>\n                            {item.price.formattedDiscount &&\n                                (item.price.discount === 0 ? (\n                                    <span className={styles.discountPrice}>{__t('free')}</span>\n                                ) : (\n                                    <span className={styles.discountPrice}>{item.price.formattedDiscount}</span>\n                                ))}\n                            {item.price.amount === 0 ? (\n                                __t('free')\n                            ) : (\n                                <span className={item.price.formattedDiscount ? styles.lineThrough : null}>\n                                    {item.price.formatted}\n                                </span>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nServicesGridItem.propTypes = {\n    item: PropTypes.object.isRequired,\n    themeStyles: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"_2XbhEsS0\",\"swiper\":\"QnbvWe1q\",\"noSwiping\":\"_2zN_ACNB\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Swiper } from '@mssgme/ui';\nimport { usePageData } from '../../../hooks';\nimport { ServiceContent, ThemedModal } from '../../../UI';\n\nimport styles from './ServicesModal.scss';\n\nexport function ServicesModal({\n    services,\n    contacts,\n    activeIndex,\n    interactive,\n    onClose,\n    onClosing,\n    themeStyles,\n    handleHash,\n}) {\n    const page = usePageData();\n    const history = useHistory();\n    const hasMultipleServices = services.length > 1;\n\n    const contactBlocks = useMemo(\n        () =>\n            contacts\n                .filter(({ enabled }) => enabled)\n                .map(({ blockId }) => page.blocks.find(({ _id }) => _id === blockId)),\n        [page, contacts]\n    );\n\n    const handleSlideChange = useCallback(\n        (swiper) => {\n            if (handleHash) {\n                history.replace('#' + services[swiper.realIndex]._id);\n            }\n        },\n        [handleHash, services]\n    );\n\n    return (\n        <ThemedModal overlay handleHash showHeader={false} onClose={onClose}>\n            <div className={styles.content}>\n                <Swiper\n                    className={styles.swiper}\n                    allowTouchMove={hasMultipleServices}\n                    initialSlide={activeIndex}\n                    noSwipingClass={styles.noSwiping}\n                    speed={600}\n                    pagination={false}\n                    onInit={handleSlideChange}\n                    onSlideChange={handleSlideChange}\n                >\n                    {services.map((service, index) =>\n                        Object.assign(\n                            ({ isActive, isPrev, isNext }) => (\n                                <ServiceContent\n                                    themeStyles={themeStyles}\n                                    service={service}\n                                    contacts={contactBlocks}\n                                    isActive={isActive}\n                                    isPrev={isPrev}\n                                    isNext={isNext}\n                                    interactive={interactive}\n                                    onClose={onClose}\n                                />\n                            ),\n                            { key: service._id || index }\n                        )\n                    )}\n                </Swiper>\n            </div>\n        </ThemedModal>\n    );\n}\n\nServicesModal.propTypes = {\n    services: PropTypes.array.isRequired,\n    contacts: PropTypes.array.isRequired,\n    activeIndex: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onClosing: PropTypes.func,\n    themeStyles: PropTypes.object.isRequired,\n    handleHash: PropTypes.bool,\n    interactive: PropTypes.bool,\n};\n\nServicesModal.defaultProps = {\n    handleHash: true,\n    interactive: true,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"servicesList\":\"_1tPoDiYt\",\"list\":\"_11aOBJzF\",\"moreButtonContainer\":\"_1WE-HNBa\",\"blurred\":\"VgXs12px\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router';\nimport { useTimeoutFn } from 'react-use';\n\nimport { __t, ServicesGridBlockKind } from '@mssgme/shared';\nimport { LandingsPropTypes, Spinner } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { MoreButton } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { ServicesGridItem } from './ServicesGridItem';\nimport { ServicesModal } from './ServicesModal';\n\nimport styles from './ServicesGrid.scss';\n\nconst ITEMS_PER_PAGE = 6;\n\n// TODO: Migrate/convert all service grid items to normal products and remove this block. Replace with Products block.\n\nexport default function ServicesGrid({ block, sortable, interactive, delay = 0, ...rest }) {\n    const location = useLocation();\n    const history = useHistory();\n    const hashId = location.hash && location.hash.slice(1);\n    const slideIndexFromHash = hashId && block.items.findIndex((item) => item._id === hashId);\n    const hasSlideFromHash = Number.isInteger(slideIndexFromHash) && slideIndexFromHash >= 0;\n    const { theme } = useBlockTheme(block);\n    const [page, setPage] = useState(1);\n    const [isDelayed, setDelayed] = useState(!!delay);\n    const [isServicesModal, setIsServicesModal] = useState(false);\n    const [currentServiceIndex, setCurrentServiceIndex] = useState(0);\n    const total = block.items.length;\n    const pages = Math.ceil(total / ITEMS_PER_PAGE);\n    const hasMore = page < pages;\n    const sliced = hasMore ? block.items.slice(0, page * ITEMS_PER_PAGE) : block.items;\n\n    const handleLoadMore = useCallback(() => setPage((old) => old + 1), []);\n    const openServicesModal = useCallback(() => {\n        setIsServicesModal(true);\n    }, []);\n    const closeServicesModal = useCallback(() => {\n        setIsServicesModal(false);\n        history.push(location.pathname);\n    }, [location.pathname]);\n\n    useEffect(() => {\n        if (hasSlideFromHash && !sortable) {\n            setCurrentServiceIndex(slideIndexFromHash);\n            openServicesModal();\n        }\n    }, [hasSlideFromHash]);\n\n    useTimeoutFn(() => setDelayed(false), delay);\n\n    if (isDelayed) {\n        return (\n            <BlockBase {...rest}>\n                <Spinner />\n            </BlockBase>\n        );\n    }\n\n    return (\n        <BlockBase lazy {...rest}>\n            {sliced.length ? (\n                <ul className={cn(styles.servicesList, styles[theme.gridMode])}>\n                    {sliced.map((item, index) => (\n                        <li key={item._id || index}>\n                            <ServicesGridItem\n                                item={item}\n                                themeStyles={theme}\n                                onClick={() => {\n                                    setCurrentServiceIndex(index);\n                                    openServicesModal();\n                                }}\n                            />\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <ul\n                    className={cn(styles.servicesList, styles[theme.gridMode])}\n                    style={{ opacity: 0.7, pointerEvents: 'none' }}\n                >\n                    <li>\n                        <ServicesGridItem\n                            themeStyles={theme}\n                            item={{\n                                title: __t('title'),\n                                price: { amount: 9.99, formatted: '$19.99', formattedDiscount: '$9.99' },\n                            }}\n                        />\n                    </li>\n                    <li>\n                        <ServicesGridItem\n                            themeStyles={theme}\n                            item={{\n                                title: __t('title'),\n                                price: { amount: 9.99, formatted: '$19.99', formattedDiscount: '$9.99' },\n                            }}\n                        />\n                    </li>\n                </ul>\n            )}\n\n            {hasMore && (\n                <div className={styles.moreButtonContainer}>\n                    <MoreButton\n                        onClick={handleLoadMore}\n                        style={{\n                            backgroundColor: theme.backgroundColor,\n                            color: theme.color,\n                            borderRadius: theme.borderRadius,\n                        }}\n                    />\n                </div>\n            )}\n            {isServicesModal && (\n                <ServicesModal\n                    handleHash={interactive}\n                    themeStyles={theme}\n                    contacts={block.contacts}\n                    services={block.items}\n                    activeIndex={currentServiceIndex}\n                    interactive={interactive}\n                    onClose={closeServicesModal}\n                />\n            )}\n        </BlockBase>\n    );\n}\n\nServicesGrid.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n    delay: PropTypes.number,\n};\n\nServicesGrid.defaultProps = BlockBase.defaultProps;\n\nServicesGrid.kind = ServicesGridBlockKind;\n","import ServicesGrid from './ServicesGrid';\n\nexport default ServicesGrid;\n","import { useState } from 'react';\nimport { useDebounce, useMountedState } from 'react-use';\n\nimport { handleError, productsApi } from '@mssgme/lib';\nimport { useFetching } from '@mssgme/hooks';\n\nexport const useProductsApi = ({ workspaceId, websiteId, query }) => {\n    const isMounted = useMountedState();\n    const [store, setStore] = useState({ hasNext: false, next: null, publishedCount: 0, items: [], isFetching: true });\n    const { pending: isFetching, run: getProducts } = useFetching(\n        async (resetStore) => {\n            const { results, next, ...productsStore } = await productsApi.list(workspaceId, {\n                limit: query.limit,\n                next: resetStore ? null : store.next,\n                collection: query.collections.include,\n                website: websiteId,\n                published: true,\n            });\n\n            if (!isMounted()) {\n                return;\n            }\n\n            setStore((prevProducts) => {\n                const items = resetStore ? results : prevProducts.items.concat(results);\n                const hasNext = productsStore.hasNext && !(query.total && items.length >= query.total);\n\n                return {\n                    ...productsStore,\n                    next: (hasNext && next) || null,\n                    items: query.total ? items.slice(0, query.total) : items,\n                    hasNext,\n                };\n            });\n        },\n        [store.next, query]\n    );\n\n    useDebounce(() => void getProducts(true).catch(handleError), 100, [query]);\n\n    return {\n        ...store,\n        isFetching: store.isFetching || isFetching,\n        getProducts,\n    };\n};\n","import { useEffect } from 'react';\nimport useTimeoutFn from './useTimeoutFn';\nexport default function useDebounce(fn, ms, deps) {\n    if (ms === void 0) { ms = 0; }\n    if (deps === void 0) { deps = []; }\n    var _a = useTimeoutFn(fn, ms), isReady = _a[0], cancel = _a[1], reset = _a[2];\n    useEffect(reset, deps);\n    return [isReady, cancel];\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3dvk4qMK\",\"item\":\"_3awBxbh9\",\"active\":\"zyqy27XG\",\"list\":\"_2agEy5u-\",\"clipLeft\":\"_1gV7--Yd\",\"clipRight\":\"_3kz8zbIR\",\"controlContainerLeft\":\"_25EQ80Ed\",\"controlContainerRight\":\"_3JnavzXx\",\"control\":\"hhPWLPiY\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { __t } from '@mssgme/shared';\nimport { resolvePathname } from '@mssgme/helpers';\nimport { useHorizontalTabbedScroll } from '@mssgme/ui';\nimport { useBasePageColor } from '../../../../hooks';\n\nimport styles from './ButtonsMenu.scss';\n\nexport const ButtonsMenu = ({ items, interactive, activeCollectionId, theme, onSelect, ...rest }) => {\n    const location = useLocation();\n    const { root, hasLeftBtn, moveLeft, list, hasRightBtn, moveRight, moveTo } = useHorizontalTabbedScroll(\n        items.length\n    );\n    const { backgroundColor, backgroundDimmed, isLightBG } = useBasePageColor();\n    const baseUrl = useMemo(() => resolvePathname(location.pathname, 'c'), [location.pathname]);\n    const themeStyle = useMemo(\n        () => ({\n            button: {\n                backgroundColor: theme.backgroundColor,\n                color: theme.productsCategoryTextColor || theme.color,\n                borderRadius: theme.borderRadius,\n            },\n            buttonActive: {\n                backgroundColor: theme.buttonBackground,\n                color: theme.buttonTextColor,\n                borderRadius: theme.borderRadius,\n            },\n            arrowButton: { color: theme.color },\n            arrowBg: { color: backgroundColor },\n        }),\n        [theme, backgroundColor, backgroundDimmed, isLightBG]\n    );\n\n    const isTabbed = theme.filterMode === 'tabs';\n    const ItemTag = interactive ? Link : 'div';\n    const handleClick = useCallback(\n        (e) => {\n            if (!isTabbed) {\n                return;\n            }\n\n            e.preventDefault();\n\n            const slug = e.target.dataset?.slug;\n            const index = items.findIndex((item) => item.slug === slug);\n            const id = items[index]?._id;\n\n            if (id === activeCollectionId) {\n                // onSelect(null);\n            } else {\n                moveTo(index);\n                onSelect(id);\n            }\n        },\n        [isTabbed, activeCollectionId, items, moveTo, onSelect]\n    );\n\n    useDeepCompareEffect(() => {\n        if (items.length) {\n            moveTo(0);\n            onSelect(items[0]._id);\n        }\n    }, [items]);\n\n    return (\n        <div className={styles.root} ref={root} {...rest}>\n            {hasLeftBtn && (\n                <div key={`le-${backgroundColor}`} className={styles.controlContainerLeft} onClick={moveLeft}>\n                    <div className={styles.control} style={themeStyle.arrowButton}>\n                        &larr;\n                    </div>\n                </div>\n            )}\n\n            <ul className={cn(styles.list, hasLeftBtn && styles.clipLeft, hasRightBtn && styles.clipRight)} ref={list}>\n                {items.map((col, index) => {\n                    const isActive = isTabbed && activeCollectionId === col._id;\n\n                    return (\n                        <li\n                            key={col._id}\n                            data-index={index}\n                            className={cn({ [styles.item]: true, [styles.active]: isActive })}\n                        >\n                            <ItemTag\n                                style={isActive ? themeStyle.buttonActive : themeStyle.button}\n                                data-slug={col.slug}\n                                onClick={handleClick}\n                                {...interactive && { to: `${baseUrl}/${col.slug}` }}\n                            >\n                                {col.default ? __t('all_products') : col.name}\n                            </ItemTag>\n                        </li>\n                    );\n                })}\n            </ul>\n\n            {hasRightBtn && (\n                <div key={`ri-${backgroundColor}`} className={styles.controlContainerRight} onClick={moveRight}>\n                    <div className={styles.control} style={themeStyle.arrowButton}>\n                        &rarr;\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nButtonsMenu.propTypes = {\n    items: PropTypes.array.isRequired,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"_1cheHu2s\",\"startIcon\":\"_3QTRIM5a\",\"endIcon\":\"bgPcNmEE\"};","import React from 'react';\nimport PureButton from './PureButton';\n\nimport styles from './TextButton.scss';\n\nexport default function TextButton(props) {\n    return <PureButton styles={styles} {...props} />;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2dUvypCw\",\"select\":\"_5GfWMbLF\",\"button\":\"_1RWnUF4N\",\"label\":\"_146sE58Z\",\"arrow\":\"_17yoFmZR\",\"option\":\"_3-EPpWFr\",\"active\":\"_2mmR5s76\",\"optionLabel\":\"Hm8d5GxS\",\"badge\":\"yfPVOd0T\",\"dropdown\":\"_3ViuLY5O\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef } from 'react';\nimport { useClickAway, useToggle } from 'react-use';\n\nimport { __t } from '@mssgme/shared';\nimport { isMatchId } from '@mssgme/helpers';\nimport { ChevronDownIcon } from '@mssgme/icons';\nimport { Fade, TextButton } from '@mssgme/ui';\n\nimport styles from './FilterMenu.scss';\n\nexport const FilterMenuItem = ({ collection, active, onSelect }) => {\n    const handleClick = useCallback(() => onSelect(collection._id), [onSelect, collection]);\n\n    return (\n        <div className={cn(styles.option, active && styles.active)} onClick={handleClick}>\n            <span className={styles.optionLabel}>{collection.default ? __t('all_products') : collection.name}</span>\n            <span className={styles.badge}>{collection.publishedProductsCount}</span>\n        </div>\n    );\n};\n\nFilterMenuItem.propTypes = {\n    collection: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n};\n\nexport const FilterMenu = ({ items, activeCollectionId, theme, interactive, onSelect, ...rest }) => {\n    const root = useRef();\n    const [isOpen, toggle] = useToggle();\n    const selected = items.find(isMatchId(activeCollectionId));\n\n    useClickAway(root, () => toggle(false));\n\n    const handleSelect = useCallback((id) => {\n        onSelect(id);\n        toggle(false);\n    });\n\n    return (\n        <div className={styles.root} {...rest}>\n            <div className={styles.select} ref={root}>\n                <TextButton aria-pressed={isOpen} className={styles.button} onClick={toggle}>\n                    <span className={styles.label}>\n                        {selected && (selected.default ? __t('all_products') : selected.name)}\n                        {selected && <span>&nbsp;({selected?.publishedProductsCount})</span>}\n                    </span>\n                    <ChevronDownIcon size={16} className={styles.arrow} />\n                </TextButton>\n\n                <Fade in={isOpen}>\n                    <div className={styles.dropdown}>\n                        {items.map((collection) => (\n                            <FilterMenuItem\n                                key={collection._id}\n                                active={collection._id === activeCollectionId}\n                                collection={collection}\n                                onSelect={handleSelect}\n                            />\n                        ))}\n                    </div>\n                </Fade>\n            </div>\n        </div>\n    );\n};\n\nFilterMenu.propTypes = {\n    items: PropTypes.array.isRequired,\n    baseUrl: PropTypes.string.isRequired,\n    buttonStyle: PropTypes.object,\n    arrowsStyle: PropTypes.object,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { ButtonsMenu } from './ButtonsMenu';\nimport { FilterMenu } from './FilterMenu';\n\nexport function CollectionsBar({ theme, ...rest }) {\n    return theme.filterMode === 'filter' ? (\n        <FilterMenu theme={theme} {...rest} />\n    ) : (\n        <ButtonsMenu theme={theme} {...rest} />\n    );\n}\n\nCollectionsBar.propTypes = {\n    items: PropTypes.array.isRequired,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"zqQ_UzIa\",\"title\":\"_2YZlafSS\",\"list\":\"v4gRAsY4\",\"mobileMode\":\"_2d3Wg2J0\",\"empty\":\"_8ORnZ2Rf\",\"icon\":\"_149SoVjF\",\"description\":\"l6CXojOX\",\"moreBtnContainer\":\"_3OrypCfY\",\"moreBtn\":\"_3N_b-4yz\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useMountedState } from 'react-use';\nimport { get, pick } from 'lodash';\n\nimport { __t, ProductsBlockKind } from '@mssgme/shared';\nimport { cls, isMatchId, isMobile, keyHash } from '@mssgme/helpers';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { LandingsPropTypes, Spinner } from '@mssgme/ui';\nimport { SearchIcon } from '@mssgme/icons';\nimport { ProductItem } from '../../../../products';\nimport { useBlockTheme, useProductsApi, useWebsiteData } from '../../../hooks';\nimport { MoreButton } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { CollectionsBar } from './CollectionsBar';\n\nimport styles from './Products.scss';\n\nexport const Item = ({ product, baseProductUrl, fromCollection, interactive, ...rest }) => {\n    const to = useMemo(\n        () =>\n            interactive\n                ? {\n                    pathname: `${baseProductUrl}/${product.slug?.toLowerCase()}`,\n                    state: { fromCollection },\n                }\n                : undefined,\n        [baseProductUrl, interactive, product]\n    );\n\n    return <ProductItem product={product} tag={interactive ? Link : 'div'} to={to} {...rest} />;\n};\n\nItem.propTypes = {\n    product: PropTypes.object.isRequired,\n    interactive: PropTypes.bool,\n    fromCollection: PropTypes.string,\n    baseProductUrl: PropTypes.string,\n    style: PropTypes.object,\n};\n\nexport default function Products({ block, interactive, isMobileMode, ...rest }) {\n    const website = useWebsiteData();\n    const isMounted = useMountedState();\n    const location = useLocation();\n    const { generateUrl } = useNavigationUtils();\n    const { theme, style } = useBlockTheme(block);\n    const collectionIds = get(block, 'collections.include', []);\n    const activeCollections = website.collections.filter((col) => col.published && col.publishedProductsCount);\n    const showCollections = collectionIds.length\n        ? collectionIds.map((id) => activeCollections.find(isMatchId(id))).filter(Boolean)\n        : activeCollections;\n    const isTabbed = theme.filterMode !== 'buttons';\n    const [activeCollectionId, setActiveCollectionId] = useState(showCollections[0]?._id || null);\n\n    const options = pick(block, ['products', 'total', 'sort']);\n    const query = useMemo(\n        () => ({\n            ...options,\n            limit: isMobile() ? 6 : 12,\n            collections: activeCollectionId && isTabbed ? { include: [activeCollectionId] } : block.collections,\n        }),\n        [website.collections, keyHash(options), activeCollectionId, isTabbed]\n    );\n    const { hasNext, isFetching, items, getProducts } = useProductsApi({\n        workspaceId: website.workspace,\n        websiteId: website._id,\n        query,\n    });\n    const handleMore = useCallback(() => getProducts(), [getProducts]);\n    const baseProductUrl = useMemo(() => generateUrl('p'), [location.pathname]);\n    const defaultStyle = useMemo(() => ({ color: theme.color }), [theme]);\n    const getFromCollection = (product) => Object.keys(product.cols || {}).find((id) => collectionIds.includes(id));\n\n    useEffect(() => {\n        const firstId = showCollections[0]?._id;\n\n        if (firstId !== activeCollectionId && !showCollections.find(isMatchId(activeCollectionId))) {\n            if (isMounted()) {\n                setActiveCollectionId(firstId);\n            }\n        }\n    }, [activeCollectionId, showCollections]);\n\n    return (\n        <BlockBase {...cls([styles.root, isMobileMode && styles.mobileMode], rest)}>\n            {!!block.title && (\n                <div className={styles.title} style={defaultStyle}>\n                    {block.title}\n                </div>\n            )}\n\n            {showCollections.length > 1 && (\n                <CollectionsBar\n                    theme={theme}\n                    style={defaultStyle}\n                    items={showCollections}\n                    interactive={interactive}\n                    activeCollectionId={activeCollectionId}\n                    onSelect={setActiveCollectionId}\n                />\n            )}\n\n            <ul className={styles.list}>\n                {items.map((product) => (\n                    <li key={product._id}>\n                        <Item\n                            product={product}\n                            interactive={interactive}\n                            baseProductUrl={baseProductUrl}\n                            fromCollection={activeCollectionId || getFromCollection(product)}\n                            themeStyles={theme}\n                            style={defaultStyle}\n                        />\n                    </li>\n                ))}\n\n                {!(items.length || isFetching) && (\n                    <li key=\"empty-list\" className={styles.empty} style={defaultStyle}>\n                        <SearchIcon className={styles.icon} size={48} />\n                        <div className={styles.description}>{__t('no_products')}</div>\n                    </li>\n                )}\n            </ul>\n\n            {isFetching ? (\n                <Spinner />\n            ) : (\n                hasNext && (\n                    <div className={styles.moreBtnContainer}>\n                        <MoreButton\n                            className={styles.moreBtn}\n                            style={{ ...style, color: theme.productsCategoryTextColor }}\n                            onClick={handleMore}\n                            disabled={isFetching}\n                        />\n                    </div>\n                )\n            )}\n        </BlockBase>\n    );\n}\n\nProducts.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nProducts.defaultProps = BlockBase.defaultProps;\n\nProducts.kind = ProductsBlockKind;\n","import Products from './Products';\n\nexport default Products;\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { Route } from 'react-router-dom';\n\nexport const PassthroughRoute = ({ path, exact, component: Component, makeProps = (p) => p }) => {\n    const render = useCallback(\n        ({ match }) => {\n            const props = makeProps(match.params);\n\n            return props && <Component {...props} />;\n        },\n        [Component, makeProps]\n    );\n\n    return <Route exact={exact} path={path} render={render} />;\n};\n\nPassthroughRoute.propTypes = {\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n    exact: PropTypes.bool,\n    component: PropTypes.any.isRequired,\n    makeProps: PropTypes.func,\n};\n","import React, { useMemo } from 'react';\n\nimport { useWebsiteData } from '../../hooks';\nimport { CollectionView, ProductView } from '../../Product';\nimport { OrderPage, PaymentStatusPage, UserOrderPage, UserOrdersPage } from '../../Order';\nimport { PassthroughRoute } from '../PassthroughRoute';\n\nexport default function PageProductsRouting() {\n    const website = useWebsiteData();\n    const contexts = useMemo(\n        () => ({\n            product: ({ productSlug, collectionSlug }) => ({\n                productSlug,\n                collectionSlug,\n                workspaceId: website.workspace,\n                defaultCollectionId: website.defaultCollectionId,\n            }),\n            collection: ({ collectionSlug }) => {\n                const collection = collectionSlug\n                    && website.collections.find(({ slug }) => slug === collectionSlug.toLowerCase());\n\n                if (!collection) {\n                    return null;\n                }\n\n                return {\n                    workspaceId: website.workspace,\n                    websiteId: website._id,\n                    collection,\n                };\n            },\n        }),\n        [website.workspace, website.defaultCollectionId, website.collections]\n    );\n\n    return (\n        <>\n            <PassthroughRoute path=\"/c/:collectionSlug\" makeProps={contexts.collection} component={CollectionView} />\n\n            <PassthroughRoute\n                path={['/p/:productSlug', '/c/:collectionSlug/p/:productSlug']}\n                makeProps={contexts.product}\n                component={ProductView}\n            />\n\n            <PassthroughRoute path=\"/user-orders\" component={UserOrdersPage} />\n            <PassthroughRoute path=\"/user-orders/:orderId\" exact component={UserOrderPage} />\n            <PassthroughRoute\n                path={[\n                    '/orders/:orderId',\n                    '/p/:productSlug/orders/:orderId',\n                    '/c/:collectionSlug/p/:productSlug/orders/:orderId',\n                ]}\n                exact\n                component={OrderPage}\n            />\n            <PassthroughRoute path=\"/orders/:orderId/payment/:status\" component={PaymentStatusPage} />\n        </>\n    );\n}\n"],"sourceRoot":""}