{"version":3,"sources":["webpack:////drone/src/packages/userpage-core/src/landings/hooks/useContrastingColor.js","webpack:////drone/src/packages/lib/src/feedbackApi.js","webpack:////drone/src/packages/shared/src/landings/feedbacks.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInputs.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInputs.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionFormContent.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionFormContent.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionForm.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGridItem.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGridItem.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesModal.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesModal.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGrid.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGrid.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/index.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useProductsApi.js","webpack:////drone/src/node_modules/react-use/esm/useDebounce.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/ButtonsMenu.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/ButtonsMenu.js","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/TextButton.scss","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/TextButton.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/FilterMenu.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/FilterMenu.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/CollectionsBar.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/Products.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/Products.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PassthroughRoute.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/PageProductsRouting.js"],"names":["useContrastingPageColor","theme","colors","backgroundImage","backgroundImageOpacity","style","backgroundColor","usePageTheme","isLightBG","isLightColor","isLightContrasting","buttonBackground","hasImage","TinyColor","equals","background","color","useBasePageColor","percent","arguments","length","undefined","backgroundDimmed","darken","lighten","toHexString","FeedbackApi","BaseApi","submit","workspaceId","websiteId","payload","this","post","mapDynamicFieldToName","_ref","index","_id","handleEnterKey","e","key","preventDefault","DynamicFormInput","input","as","type","defaultMaxSize","maxLength","size","isTextField","React","createElement","TextField","name","label","required","wrapAs","component","Input","Textarea","onKeyPress","inputTypes","email","phone","text","DynamicFormInputs","_ref2","block","rest","cls","styles","root","gridMode","items","map","item","SubscriptionFormContent","onSubmit","rawSubmit","interactive","sent","setSent","useState","validationSchema","useMemo","object","reduce","acc","field","validator","string","trim","max","__t","matches","message","excludeEmptyString","mapDynamicInputsToValidationSchema","FormTag","loading","error","useAsyncFn","async","values","pairs","_values$item$_id","value","filter","formik","useEnhancedFormik","initialValues","handleSentModalClosed","useCallback","resetForm","useEffect","hasUrl","sentUrl","timer","setTimeout","window","location","clearTimeout","setErrors","mapValues","errors","FormikProvider","_extends","id","className","SubmitButton","ThemedButton","isInitialHidden","fullWidth","isFetching","disabled","buttonTextColor","borderRadius","sendLabel","AnimatePresence","ThemedModal","compact","overlay","showHeader","onClose","handleClose","onClick","FiX","FiCheck","sentText","SubscriptionForm","baseStyle","useBlockTheme","website","useWebsiteData","combined","useMergedStyles","handleSubmit","feedbackApi","workspace","blockId","data","submitEvent","CustomEvent","detail","document","dispatchEvent","BlockBase","defaultProps","kind","SubscriptionFormBlockKind","ServicesGridItem","themeStyles","getMediaSizeUrl","useUploads","photoUrl","MediaSizes","Half","cn","thumbnail","LazyImage","src","alt","title","emptyPlaceholder","IoMdImage","meta","price","formattedDiscount","discount","discountPrice","amount","lineThrough","formatted","animate","from","to","transition","startAnimation","stop","ServicesModal","services","contacts","activeIndex","onClosing","handleHash","page","usePageData","history","useHistory","opacity","useMotionValue","hasMultipleServices","contactBlocks","enabled","_ref3","blocks","find","_ref4","handleSlideChange","swiper","replace","realIndex","pathname","stiffness","onComplete","ReactDom","createPortal","motion","div","Swiper","allowTouchMove","initialSlide","noSwipingClass","speed","pagination","onInit","onSlideChange","service","Object","assign","_ref5","isActive","isPrev","isNext","ServiceContent","querySelector","ServicesGrid","sortable","delay","useLocation","hashId","hash","slice","slideIndexFromHash","findIndex","hasSlideFromHash","Number","isInteger","setPage","isDelayed","setDelayed","isServicesModal","setIsServicesModal","currentServiceIndex","setCurrentServiceIndex","total","hasMore","Math","ceil","sliced","handleLoadMore","old","openServicesModal","closingServicesModal","closeServicesModal","useTimeoutFn","Spinner","lazy","servicesList","pointerEvents","moreButtonContainer","MoreButton","ServicesGridBlockKind","useProductsApi","query","isMounted","useMountedState","store","setStore","hasNext","next","publishedCount","pending","run","getProducts","useFetching","results","productsStore","productsApi","list","limit","resetStore","collection","collections","include","published","prevProducts","concat","fn","ms","deps","_a","isReady","cancel","reset","useDebounce","catch","handleError","ButtonsMenu","activeCollectionId","onSelect","generateUrl","useNavigationUtils","hasLeftBtn","moveLeft","hasRightBtn","moveRight","moveTo","useHorizontalTabbedScroll","baseUrl","themeStyle","button","productsCategoryTextColor","buttonActive","arrowButton","arrowBg","isTabbed","filterMode","ItemTag","Link","handleClick","_e$target$dataset","_items$index","slug","target","dataset","useDeepCompareEffect","ref","col","data-index","data-slug","default","TextButton","props","PureButton","FilterMenuItem","active","publishedProductsCount","FilterMenu","useRef","isOpen","toggle","useToggle","selected","isMatchId","useClickAway","handleSelect","aria-pressed","ChevronDownIcon","Fade","in","CollectionsBar","Item","product","baseProductUrl","fromCollection","state","ProductItem","tag","Products","_showCollections$","isMobileMode","collectionIds","get","activeCollections","showCollections","Boolean","setActiveCollectionId","options","pick","isMobile","keyHash","handleMore","defaultStyle","getFromCollection","keys","cols","includes","_showCollections$2","firstId","SearchIcon","ProductsBlockKind","PassthroughRoute","path","exact","Component","makeProps","p","render","match","params","Route","PageProductsRouting","contexts","productSlug","collectionSlug","defaultCollectionId","Fragment","CollectionView","ProductView","UserOrdersPage","UserOrderPage","OrderPage","PaymentStatusPage"],"mappings":"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","file":"9.08c203fa953b2d84a998.js","sourcesContent":["import TinyColor from 'tinycolor2';\nimport { isLightColor } from '@mssgme/helpers';\n\nimport { usePageTheme } from './useWebsiteTheme';\n\nexport const useContrastingPageColor = () => {\n    const {\n        theme: { colors, backgroundImage, backgroundImageOpacity },\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const isLightBG = isLightColor(backgroundColor);\n    const isLightContrasting = isLightColor(colors.buttonBackground);\n    const isBgUntouched = TinyColor.equals(backgroundColor, colors.background);\n    const hasImage = !!backgroundImage && backgroundImageOpacity > 0;\n\n    if (isBgUntouched && !(isLightBG && isLightContrasting)) {\n        return {\n            color: colors.buttonBackground,\n            hasImage,\n            backgroundColor,\n        };\n    }\n\n    return {\n        color: isLightBG ? '#333' : '#eee',\n        hasImage,\n        backgroundColor,\n    };\n};\nexport const useDimmedPageColor = (percent = 10) => {\n    const {\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const color = new TinyColor(backgroundColor);\n    const isLightBG = isLightColor(color);\n\n    return (isLightBG ? color.darken(percent) : color.lighten(percent)).toHexString();\n};\nexport const useBasePageColor = (percent = 10) => {\n    const {\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const color = new TinyColor(backgroundColor);\n    const isLightBG = isLightColor(color);\n\n    return {\n        isLightBG,\n        backgroundColor,\n        backgroundDimmed: (isLightBG ? color.darken(percent) : color.lighten(percent)).toHexString(),\n    };\n};\n","import { BaseApi } from './baseApi';\n\nexport class FeedbackApi extends BaseApi {\n    submit(workspaceId, websiteId, payload) {\n        return this.post(`/workspaces/${workspaceId}/websites/${websiteId}/feedback`, payload);\n    }\n}\n\nexport default ((options) => new FeedbackApi(options))();\n","import { object, string } from 'yup';\n\nimport { __t } from '../trans';\n\nexport const defaultDynamicFieldLengthLimit = 250;\nexport const mapDynamicFieldToName = ({ _id }, index) => _id || `field-${index}`;\nexport const mapDynamicInputsToValidationSchema = ({ items }) =>\n    object({\n        ...items.reduce((acc, item, index) => {\n            const field = mapDynamicFieldToName(item, index);\n            let validator = string()\n                .trim()\n                .max(item.size || defaultDynamicFieldLengthLimit, __t('field_too_long'));\n\n            if (item.required) {\n                validator = validator.required(__t('field_required'));\n            }\n\n            switch (item.type) {\n                case 'email': {\n                    validator = validator.email(__t('field_email'));\n\n                    break;\n                }\n                case 'phone': {\n                    validator = validator.matches(/\\+?[\\d\\-\\s()]{5,}/, {\n                        name: 'phone',\n                        message: __t('field_phone'),\n                        excludeEmptyString: true,\n                    });\n\n                    break;\n                }\n            }\n\n            acc[field] = validator;\n\n            return acc;\n        }, {}),\n    });\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qsFFCJh2\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { mapDynamicFieldToName } from '@mssgme/shared';\nimport { cls } from '@mssgme/helpers';\nimport { Input, Textarea } from '@mssgme/ui';\nimport { TextField } from '../Inputs';\n\nimport styles from './DynamicFormInputs.scss';\n\nconst handleEnterKey = (e) => {\n    if (e.key === 'Enter') {\n        e.preventDefault();\n    }\n};\n\nexport const DynamicFormInput = ({ index, input, as, type, defaultMaxSize, theme }) => {\n    const maxLength = input.size || defaultMaxSize;\n    const isTextField = maxLength <= 250;\n\n    return (\n        <TextField\n            name={mapDynamicFieldToName(input, index)}\n            label={input.label}\n            required={input.required}\n            maxLength={maxLength}\n            wrapAs={as}\n            component={isTextField ? Input : Textarea}\n            type={type || 'text'}\n            onKeyPress={isTextField ? handleEnterKey : undefined}\n            theme={theme}\n        />\n    );\n};\n\nDynamicFormInput.propTypes = {\n    input: PropTypes.shape({\n        _id: PropTypes.string,\n        label: PropTypes.string,\n        required: PropTypes.bool,\n        size: PropTypes.number,\n    }).isRequired,\n    index: PropTypes.number.isRequired,\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n    type: PropTypes.string,\n    defaultMaxSize: PropTypes.number.isRequired,\n    theme: PropTypes.object,\n};\n\nconst inputTypes = {\n    name: 'text',\n    email: 'email',\n    phone: 'tel',\n    text: 'text',\n};\n\nexport const DynamicFormInputs = ({ block, theme, defaultMaxSize, ...rest }) => {\n    return (\n        <ul {...cls([styles.root, styles[theme.gridMode]], rest)}>\n            {block.items.map((item, index) => (\n                <DynamicFormInput\n                    as=\"li\"\n                    key={item._id || index}\n                    index={index}\n                    input={item}\n                    type={inputTypes[item.type]}\n                    defaultMaxSize={defaultMaxSize}\n                    theme={theme}\n                />\n            ))}\n        </ul>\n    );\n};\n\nDynamicFormInputs.propTypes = {\n    block: PropTypes.shape({\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                _id: PropTypes.string,\n                label: PropTypes.string,\n                required: PropTypes.bool,\n                size: PropTypes.number,\n            })\n        ).isRequired,\n    }).isRequired,\n    theme: PropTypes.object.isRequired,\n    defaultMaxSize: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"_35FFwmIV\",\"successContent\":\"Pbq8WWuk\",\"icon\":\"_3tc4nquV\",\"closeIcon\":\"G81q4QWv\",\"text\":\"_3Aqm6-Qf\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAsyncFn } from 'react-use';\nimport { AnimatePresence } from 'framer-motion';\nimport { FiCheck, FiX } from 'react-icons/fi';\nimport { mapValues } from 'lodash';\n\nimport {\n    __t,\n    defaultDynamicFieldLengthLimit,\n    mapDynamicFieldToName,\n    mapDynamicInputsToValidationSchema,\n} from '@mssgme/shared';\nimport { FormikProvider, LandingsPropTypes, SubmitButton, useEnhancedFormik } from '@mssgme/ui';\nimport { DynamicFormInputs, ThemedButton, ThemedModal } from '../../../UI';\n\nimport styles from './SubscriptionFormContent.scss';\n\nexport const SubscriptionFormContent = ({ block, theme, onSubmit: rawSubmit, interactive, ...rest }) => {\n    const [sent, setSent] = useState(null);\n    const validationSchema = useMemo(() => mapDynamicInputsToValidationSchema(block), [block]);\n    const FormTag = interactive ? 'form' : 'div';\n\n    const [{ loading, error }, onSubmit] = useAsyncFn(\n        async (values) => {\n            if (false === (await rawSubmit(values))) {\n                return;\n            }\n\n            const items = block.items.map((item, index) => {\n                const field = mapDynamicFieldToName(item, index);\n                const value = values[item._id] ?? values[field];\n\n                return {\n                    key: field,\n                    label: item.label,\n                    value,\n                };\n            });\n            const pairs = items.filter(({ value }) => value);\n\n            setSent(pairs);\n        },\n        [rawSubmit]\n    );\n\n    const formik = useEnhancedFormik({\n        initialValues: useMemo(() =>\n            block.items.reduce((acc, item, index) => ((acc[mapDynamicFieldToName(item, index)] = ''), acc), {})\n        ),\n        validationSchema,\n        onSubmit,\n    });\n\n    const handleSentModalClosed = useCallback(() => {\n        setSent(false);\n        formik.resetForm();\n    }, [formik]);\n\n    useEffect(() => {\n        if (sent && block.hasUrl && block.sentUrl) {\n            const timer = setTimeout(() => (window.location = block.sentUrl), 1000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [sent, block.hasUrl, block.sentUrl, formik]);\n\n    useEffect(() => {\n        formik.setErrors(mapValues(error?.errors, (value) => __t(value)));\n    }, [error]);\n\n    return (\n        <FormikProvider value={formik}>\n            <FormTag id={`form_${block._id}`} {...rest}>\n                <DynamicFormInputs theme={theme} block={block} defaultMaxSize={defaultDynamicFieldLengthLimit} />\n\n                <div className={styles.buttonContainer}>\n                    <SubmitButton\n                        as={ThemedButton}\n                        theme={theme}\n                        isInitialHidden={false}\n                        fullWidth\n                        isFetching={loading}\n                        disabled={!block.items.length}\n                        style={{\n                            backgroundColor: theme.buttonBackground,\n                            color: theme.buttonTextColor,\n                            borderRadius: theme.borderRadius,\n                        }}\n                    >\n                        {block.sendLabel}\n                    </SubmitButton>\n                </div>\n            </FormTag>\n\n            <AnimatePresence>\n                {sent && (\n                    <ThemedModal compact overlay showHeader={false} onClose={handleSentModalClosed}>\n                        {(handleClose) => (\n                            <div className={styles.successContent}>\n                                <div className={styles.closeIcon} onClick={handleClose}>\n                                    <FiX size={26} />\n                                </div>\n                                <FiCheck size={60} className={styles.icon} />\n                                <p className={styles.text}>{block.sentText}</p>\n                            </div>\n                        )}\n                    </ThemedModal>\n                )}\n            </AnimatePresence>\n        </FormikProvider>\n    );\n};\n\nSubscriptionFormContent.propTypes = {\n    block: LandingsPropTypes.block.isRequired,\n    theme: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    interactive: PropTypes.bool,\n};\n","import React, { useCallback } from 'react';\n\nimport { SubscriptionFormBlockKind } from '@mssgme/shared';\nimport { feedbackApi } from '@mssgme/lib';\nimport { LandingsPropTypes, useMergedStyles } from '@mssgme/ui';\n\nimport { useBlockTheme, useWebsiteData } from '../../../hooks';\nimport { BlockBase } from '../BlockBase';\nimport { SubscriptionFormContent } from './SubscriptionFormContent';\n\nexport default function SubscriptionForm({ block, style: baseStyle, interactive, ...rest }) {\n    const { theme, style } = useBlockTheme(block);\n    const website = useWebsiteData();\n    const combined = useMergedStyles(style, baseStyle);\n\n    const handleSubmit = useCallback(\n        async (values) => {\n            if (!interactive) {\n                return;\n            }\n\n            await feedbackApi.submit(website.workspace, website._id, { blockId: block._id, data: values });\n\n            const submitEvent = new CustomEvent('formSubmitted', {\n                detail: block._id,\n            });\n\n            document.dispatchEvent(submitEvent);\n        },\n        [website, interactive]\n    );\n\n    return (\n        <BlockBase\n            as={SubscriptionFormContent}\n            interactive={interactive}\n            block={block}\n            style={combined}\n            theme={theme}\n            onSubmit={handleSubmit}\n            {...rest}\n        />\n    );\n}\n\nSubscriptionForm.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nSubscriptionForm.defaultProps = BlockBase.defaultProps;\n\nSubscriptionForm.kind = SubscriptionFormBlockKind;\n","import SubscriptionForm from './SubscriptionForm';\n\nexport default SubscriptionForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"-XoAMny0\",\"thumbnail\":\"C_R44W3m\",\"emptyPlaceholder\":\"_335lD0ul\",\"meta\":\"_3haFePjs\",\"title\":\"_19uOjj9I\",\"price\":\"_1YA6epaj\",\"discountPrice\":\"_26QDH8kd\",\"lineThrough\":\"_1iPjetGG\",\"list\":\"_1BKtItoB\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { IoMdImage } from 'react-icons/io';\n\nimport { __t } from '@mssgme/shared';\nimport { LazyImage } from '@mssgme/ui';\nimport { useUploads, MediaSizes } from '../../../hooks';\n\nimport styles from './ServicesGridItem.scss';\n\nexport const ServicesGridItem = ({ item, themeStyles, ...rest }) => {\n    const { getMediaSizeUrl } = useUploads();\n    const photoUrl = getMediaSizeUrl(item.photoUrl, MediaSizes.Half);\n\n    return (\n        <div className={cn(styles.item, styles[themeStyles.gridMode])} {...rest}>\n            <div className={styles.thumbnail} style={{ backgroundColor: themeStyles.backgroundColor }}>\n                {photoUrl ? (\n                    <LazyImage src={photoUrl} alt={item.title} />\n                ) : (\n                    <div className={styles.emptyPlaceholder}>\n                        <IoMdImage size=\"40%\" color=\"#fff\" />\n                    </div>\n                )}\n            </div>\n            <div className={styles.meta} style={{ color: themeStyles.color }}>\n                <div>\n                    <h6 className={styles.title}>{item.title}</h6>\n                    {item.price && (\n                        <div className={styles.price}>\n                            {item.price.formattedDiscount &&\n                                (item.price.discount === 0 ? (\n                                    <span className={styles.discountPrice}>{__t('free')}</span>\n                                ) : (\n                                    <span className={styles.discountPrice}>{item.price.formattedDiscount}</span>\n                                ))}\n                            {item.price.amount === 0 ? (\n                                __t('free')\n                            ) : (\n                                <span className={item.price.formattedDiscount ? styles.lineThrough : null}>\n                                    {item.price.formatted}\n                                </span>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nServicesGridItem.propTypes = {\n    item: PropTypes.object.isRequired,\n    themeStyles: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Vs34Y2Ah\",\"header\":\"_2e4UGjJN\",\"controls\":\"_2sYXvV1t\",\"control\":\"_28-9kyQf\",\"closeButton\":\"_3Je-sAwM\",\"content\":\"_2XbhEsS0\",\"swiper\":\"QnbvWe1q\",\"noSwiping\":\"_2zN_ACNB\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport ReactDom from 'react-dom';\nimport { useHistory } from 'react-router';\n// import { FiChevronLeft, FiChevronRight, FiX } from 'react-icons/fi';\nimport { motion, startAnimation, useMotionValue } from 'framer-motion';\n\nimport { Swiper } from '@mssgme/ui';\nimport { usePageData, usePageTheme } from '../../../hooks';\nimport { ServiceContent } from '../../../UI';\n\nimport styles from './ServicesModal.scss';\n\nconst animate = (from, to, transition) => {\n    void startAnimation('', from, to, transition);\n\n    return {\n        stop: () => from.stop(),\n    };\n};\n\nexport function ServicesModal({\n    services,\n    contacts,\n    activeIndex,\n    interactive,\n    onClose,\n    onClosing,\n    themeStyles,\n    handleHash,\n}) {\n    const page = usePageData();\n    const {\n        style: { backgroundColor },\n    } = usePageTheme(true, true);\n    const history = useHistory();\n    const opacity = useMotionValue(0);\n    // const navigationPrevRef = React.useRef(null);\n    // const navigationNextRef = React.useRef(null);\n    const hasMultipleServices = services.length > 1;\n    // const isMobile = useIsMobile();\n\n    const contactBlocks = useMemo(\n        () =>\n            contacts\n                .filter(({ enabled }) => enabled)\n                .map(({ blockId }) => page.blocks.find(({ _id }) => _id === blockId)),\n        [page, contacts]\n    );\n\n    // const handleInit = useCallback(\n    //     (swiper) => {\n    //         swiper.params.navigation.prevEl = navigationPrevRef.current;\n    //         swiper.params.navigation.nextEl = navigationNextRef.current;\n    //         swiper.navigation.update();\n    //     },\n    //     [navigationPrevRef, navigationNextRef]\n    // );\n    const handleSlideChange = useCallback(\n        (swiper) => {\n            if (handleHash) {\n                history.replace('#' + services[swiper.realIndex]._id);\n            }\n        },\n        [handleHash, services]\n    );\n    const handleClose = useCallback(() => {\n        if (handleHash) {\n            history.replace(history.location.pathname);\n        }\n\n        onClosing && onClosing();\n\n        animate(opacity, 0, {\n            type: 'spring',\n            stiffness: 100,\n            onComplete: onClose,\n        });\n    }, [onClose, onClosing, handleHash]);\n\n    useEffect(() => {\n        const controls = animate(opacity, 1, {\n            type: 'spring',\n            stiffness: 100,\n        });\n\n        return controls.stop;\n    }, []);\n\n    return ReactDom.createPortal(\n        <motion.div className={styles.root} style={{ opacity, backgroundColor }}>\n            {/*<div className={styles.header} style={{ color: themeStyles.color }}>*/}\n            {/*    <div className={styles.closeButton} onClick={handleClose}>*/}\n            {/*        <FiX size={24} />*/}\n            {/*    </div>*/}\n            {/*    /!*{hasMultipleServices && (*!/*/}\n            {/*    /!*    <div className={styles.controls} style={{ display: isMobile ? 'none' : null }}>*!/*/}\n            {/*    /!*        <div className={styles.control} ref={navigationPrevRef}>*!/*/}\n            {/*    /!*            <FiChevronLeft size={24} />*!/*/}\n            {/*    /!*        </div>*!/*/}\n            {/*    /!*        <div className={styles.control} ref={navigationNextRef}>*!/*/}\n            {/*    /!*            <FiChevronRight size={24} />*!/*/}\n            {/*    /!*        </div>*!/*/}\n            {/*    /!*    </div>*!/*/}\n            {/*    /!*)}*!/*/}\n            {/*    <div className={styles.closeButton} style={{ opacity: 0, pointerEvents: 'none' }}>*/}\n            {/*        <FiX size={24} />*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n            <div className={styles.content}>\n                <Swiper\n                    className={styles.swiper}\n                    allowTouchMove={hasMultipleServices}\n                    initialSlide={activeIndex}\n                    noSwipingClass={styles.noSwiping}\n                    speed={600}\n                    pagination={false}\n                    // watchOverflow={services.length > 1}\n                    // loop={services.length > 1}\n                    onInit={handleSlideChange}\n                    onSlideChange={handleSlideChange}\n                >\n                    {services.map((service, index) =>\n                        Object.assign(\n                            ({ isActive, isPrev, isNext }) => (\n                                <ServiceContent\n                                    themeStyles={themeStyles}\n                                    service={service}\n                                    contacts={contactBlocks}\n                                    isActive={isActive}\n                                    isPrev={isPrev}\n                                    isNext={isNext}\n                                    interactive={interactive}\n                                    onClose={handleClose}\n                                />\n                            ),\n                            { key: service._id || index }\n                        )\n                    )}\n                </Swiper>\n            </div>\n        </motion.div>,\n        document.querySelector('#page_root, #mainRoot')\n    );\n}\n\nServicesModal.propTypes = {\n    services: PropTypes.array.isRequired,\n    contacts: PropTypes.array.isRequired,\n    activeIndex: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onClosing: PropTypes.func,\n    themeStyles: PropTypes.object.isRequired,\n    handleHash: PropTypes.bool,\n    interactive: PropTypes.bool,\n};\n\nServicesModal.defaultProps = {\n    handleHash: true,\n    interactive: true,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"servicesList\":\"_1tPoDiYt\",\"list\":\"_11aOBJzF\",\"moreButtonContainer\":\"_1WE-HNBa\",\"blurred\":\"VgXs12px\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { useTimeoutFn } from 'react-use';\n\nimport { __t, ServicesGridBlockKind } from '@mssgme/shared';\nimport { LandingsPropTypes, Spinner } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { MoreButton } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { ServicesGridItem } from './ServicesGridItem';\nimport { ServicesModal } from './ServicesModal';\n\nimport styles from './ServicesGrid.scss';\n\nconst ITEMS_PER_PAGE = 6;\n\nexport default function ServicesGrid({ block, sortable, interactive, delay = 0, ...rest }) {\n    const location = useLocation();\n    const hashId = location.hash && location.hash.slice(1);\n    const slideIndexFromHash = hashId && block.items.findIndex((item) => item._id === hashId);\n    const hasSlideFromHash = Number.isInteger(slideIndexFromHash) && slideIndexFromHash >= 0;\n    const { theme } = useBlockTheme(block);\n    const [page, setPage] = useState(1);\n    const [isDelayed, setDelayed] = useState(!!delay);\n    const [isServicesModal, setIsServicesModal] = useState(false);\n    const [currentServiceIndex, setCurrentServiceIndex] = useState(0);\n    const total = block.items.length;\n    const pages = Math.ceil(total / ITEMS_PER_PAGE);\n    const hasMore = page < pages;\n    const sliced = hasMore ? block.items.slice(0, page * ITEMS_PER_PAGE) : block.items;\n\n    const handleLoadMore = useCallback(() => setPage((old) => old + 1), []);\n    const openServicesModal = useCallback(() => {\n        // const rootEl = document.querySelector('#page_root_inner, #mainRoot > div');\n        // rootEl.classList.add(styles.blurred);\n        setIsServicesModal(true);\n    }, []);\n    const closingServicesModal = useCallback(() => {\n        // const rootEl = document.querySelector('#page_root_inner, #mainRoot > div');\n        // rootEl.classList.remove(styles.blurred);\n    }, []);\n    const closeServicesModal = useCallback(() => {\n        setIsServicesModal(false);\n    }, []);\n\n    useEffect(() => {\n        if (hasSlideFromHash && !sortable) {\n            setCurrentServiceIndex(slideIndexFromHash);\n            openServicesModal();\n        }\n    }, [hasSlideFromHash]);\n\n    useTimeoutFn(() => setDelayed(false), delay);\n\n    if (isDelayed) {\n        return (\n            <BlockBase {...rest}>\n                <Spinner />\n            </BlockBase>\n        );\n    }\n\n    return (\n        <BlockBase lazy {...rest}>\n            {sliced.length ? (\n                <ul className={cn(styles.servicesList, styles[theme.gridMode])}>\n                    {sliced.map((item, index) => (\n                        <li key={item._id || index}>\n                            <ServicesGridItem\n                                item={item}\n                                themeStyles={theme}\n                                onClick={() => {\n                                    setCurrentServiceIndex(index);\n                                    openServicesModal();\n                                }}\n                            />\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <ul\n                    className={cn(styles.servicesList, styles[theme.gridMode])}\n                    style={{ opacity: 0.7, pointerEvents: 'none' }}\n                >\n                    <li>\n                        <ServicesGridItem\n                            themeStyles={theme}\n                            item={{\n                                title: __t('title'),\n                                price: { amount: 9.99, formatted: '$19.99', formattedDiscount: '$9.99' },\n                            }}\n                        />\n                    </li>\n                    <li>\n                        <ServicesGridItem\n                            themeStyles={theme}\n                            item={{\n                                title: __t('title'),\n                                price: { amount: 9.99, formatted: '$19.99', formattedDiscount: '$9.99' },\n                            }}\n                        />\n                    </li>\n                </ul>\n            )}\n\n            {hasMore && (\n                <div className={styles.moreButtonContainer}>\n                    <MoreButton\n                        onClick={handleLoadMore}\n                        style={{\n                            backgroundColor: theme.backgroundColor,\n                            color: theme.color,\n                            borderRadius: theme.borderRadius,\n                        }}\n                    />\n                </div>\n            )}\n            {isServicesModal && (\n                <ServicesModal\n                    handleHash={interactive}\n                    themeStyles={theme}\n                    contacts={block.contacts}\n                    services={block.items}\n                    activeIndex={currentServiceIndex}\n                    interactive={interactive}\n                    onClose={closeServicesModal}\n                    onClosing={closingServicesModal}\n                />\n            )}\n        </BlockBase>\n    );\n}\n\nServicesGrid.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n    delay: PropTypes.number,\n};\n\nServicesGrid.defaultProps = BlockBase.defaultProps;\n\nServicesGrid.kind = ServicesGridBlockKind;\n","import ServicesGrid from './ServicesGrid';\n\nexport default ServicesGrid;\n","import { useState } from 'react';\nimport { useDebounce, useMountedState } from 'react-use';\n\nimport { handleError, productsApi } from '@mssgme/lib';\nimport { useFetching } from '@mssgme/hooks';\n\nexport const useProductsApi = ({ workspaceId, websiteId, query }) => {\n    const isMounted = useMountedState();\n    const [store, setStore] = useState({ hasNext: false, next: null, publishedCount: 0, items: [], isFetching: true });\n    const { pending: isFetching, run: getProducts } = useFetching(\n        async (resetStore) => {\n            const { results, next, ...productsStore } = await productsApi.list(workspaceId, {\n                limit: query.limit,\n                next: resetStore ? null : store.next,\n                collection: query.collections.include,\n                website: websiteId,\n                published: true,\n            });\n\n            if (!isMounted()) {\n                return;\n            }\n\n            setStore((prevProducts) => {\n                const items = resetStore ? results : prevProducts.items.concat(results);\n                const hasNext = productsStore.hasNext && !(query.total && items.length >= query.total);\n\n                return {\n                    ...productsStore,\n                    next: (hasNext && next) || null,\n                    items: query.total ? items.slice(0, query.total) : items,\n                    hasNext,\n                };\n            });\n        },\n        [store.next, query]\n    );\n\n    useDebounce(() => void getProducts(true).catch(handleError), 100, [query]);\n\n    return {\n        ...store,\n        isFetching: store.isFetching || isFetching,\n        getProducts,\n    };\n};\n","import { useEffect } from 'react';\nimport useTimeoutFn from './useTimeoutFn';\nexport default function useDebounce(fn, ms, deps) {\n    if (ms === void 0) { ms = 0; }\n    if (deps === void 0) { deps = []; }\n    var _a = useTimeoutFn(fn, ms), isReady = _a[0], cancel = _a[1], reset = _a[2];\n    useEffect(reset, deps);\n    return [isReady, cancel];\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3dvk4qMK\",\"item\":\"_3awBxbh9\",\"active\":\"zyqy27XG\",\"list\":\"_2agEy5u-\",\"clipLeft\":\"_1gV7--Yd\",\"clipRight\":\"_3kz8zbIR\",\"controlContainerLeft\":\"_25EQ80Ed\",\"controlContainerRight\":\"_3JnavzXx\",\"control\":\"hhPWLPiY\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Link } from 'react-router-dom';\n\nimport { __t } from '@mssgme/shared';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { useHorizontalTabbedScroll } from '@mssgme/ui';\nimport { useBasePageColor } from '../../../../hooks';\n\nimport styles from './ButtonsMenu.scss';\n\nexport const ButtonsMenu = ({ items, interactive, activeCollectionId, theme, onSelect, ...rest }) => {\n    const { generateUrl } = useNavigationUtils();\n    const { root, hasLeftBtn, moveLeft, list, hasRightBtn, moveRight, moveTo } = useHorizontalTabbedScroll(\n        items.length\n    );\n    const { backgroundColor, backgroundDimmed, isLightBG } = useBasePageColor();\n    const baseUrl = useMemo(() => generateUrl('c'), []);\n    const themeStyle = useMemo(\n        () => ({\n            button: {\n                backgroundColor: theme.backgroundColor,\n                color: theme.productsCategoryTextColor || theme.color,\n                borderRadius: theme.borderRadius,\n            },\n            buttonActive: {\n                backgroundColor: theme.buttonBackground,\n                color: theme.buttonTextColor,\n                borderRadius: theme.borderRadius,\n            },\n            arrowButton: { color: theme.color },\n            arrowBg: { color: backgroundColor },\n        }),\n        [theme, backgroundColor, backgroundDimmed, isLightBG]\n    );\n\n    const isTabbed = theme.filterMode === 'tabs';\n    const ItemTag = interactive ? Link : 'div';\n    const handleClick = useCallback(\n        (e) => {\n            if (!isTabbed) {\n                return;\n            }\n\n            e.preventDefault();\n\n            const slug = e.target.dataset?.slug;\n            const index = items.findIndex((item) => item.slug === slug);\n            const id = items[index]?._id;\n\n            if (id === activeCollectionId) {\n                // onSelect(null);\n            } else {\n                moveTo(index);\n                onSelect(id);\n            }\n        },\n        [isTabbed, activeCollectionId, items, moveTo, onSelect]\n    );\n\n    useDeepCompareEffect(() => {\n        if (items.length) {\n            moveTo(0);\n            onSelect(items[0]._id);\n        }\n    }, [items]);\n\n    return (\n        <div className={styles.root} ref={root} {...rest}>\n            {hasLeftBtn && (\n                <div key={`le-${backgroundColor}`} className={styles.controlContainerLeft} onClick={moveLeft}>\n                    <div className={styles.control} style={themeStyle.arrowButton}>\n                        &larr;\n                    </div>\n                </div>\n            )}\n\n            <ul className={cn(styles.list, hasLeftBtn && styles.clipLeft, hasRightBtn && styles.clipRight)} ref={list}>\n                {items.map((col, index) => {\n                    const isActive = isTabbed && activeCollectionId === col._id;\n\n                    return (\n                        <li\n                            key={col._id}\n                            data-index={index}\n                            className={cn({ [styles.item]: true, [styles.active]: isActive })}\n                        >\n                            <ItemTag\n                                style={isActive ? themeStyle.buttonActive : themeStyle.button}\n                                data-slug={col.slug}\n                                onClick={handleClick}\n                                {...interactive && { to: `${baseUrl}/${col.slug}` }}\n                            >\n                                {col.default ? __t('all_products') : col.name}\n                            </ItemTag>\n                        </li>\n                    );\n                })}\n            </ul>\n\n            {hasRightBtn && (\n                <div key={`ri-${backgroundColor}`} className={styles.controlContainerRight} onClick={moveRight}>\n                    <div className={styles.control} style={themeStyle.arrowButton}>\n                        &rarr;\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nButtonsMenu.propTypes = {\n    items: PropTypes.array.isRequired,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"_1cheHu2s\",\"startIcon\":\"_3QTRIM5a\",\"endIcon\":\"bgPcNmEE\"};","import React from 'react';\nimport PureButton from './PureButton';\n\nimport styles from './TextButton.scss';\n\nexport default function TextButton(props) {\n    return <PureButton styles={styles} {...props} />;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2dUvypCw\",\"select\":\"_5GfWMbLF\",\"button\":\"_1RWnUF4N\",\"label\":\"_146sE58Z\",\"arrow\":\"_17yoFmZR\",\"option\":\"_3-EPpWFr\",\"active\":\"_2mmR5s76\",\"optionLabel\":\"Hm8d5GxS\",\"badge\":\"yfPVOd0T\",\"dropdown\":\"_3ViuLY5O\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef } from 'react';\nimport { useClickAway, useToggle } from 'react-use';\n\nimport { __t } from '@mssgme/shared';\nimport { isMatchId } from '@mssgme/helpers';\nimport { ChevronDownIcon } from '@mssgme/icons';\nimport { Fade, TextButton } from '@mssgme/ui';\n\nimport styles from './FilterMenu.scss';\n\nexport const FilterMenuItem = ({ collection, active, onSelect }) => {\n    const handleClick = useCallback(() => onSelect(collection._id), [onSelect, collection]);\n\n    return (\n        <div className={cn(styles.option, active && styles.active)} onClick={handleClick}>\n            <span className={styles.optionLabel}>{collection.default ? __t('all_products') : collection.name}</span>\n            <span className={styles.badge}>{collection.publishedProductsCount}</span>\n        </div>\n    );\n};\n\nFilterMenuItem.propTypes = {\n    collection: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n};\n\nexport const FilterMenu = ({ items, activeCollectionId, theme, interactive, onSelect, ...rest }) => {\n    const root = useRef();\n    const [isOpen, toggle] = useToggle();\n    const selected = items.find(isMatchId(activeCollectionId));\n\n    useClickAway(root, () => toggle(false));\n\n    const handleSelect = useCallback((id) => {\n        onSelect(id);\n        toggle(false);\n    });\n\n    return (\n        <div className={styles.root} {...rest}>\n            <div className={styles.select} ref={root}>\n                <TextButton aria-pressed={isOpen} className={styles.button} onClick={toggle}>\n                    <span className={styles.label}>\n                        {selected && (selected.default ? __t('all_products') : selected.name)}\n                        {selected && <span>&nbsp;({selected?.publishedProductsCount})</span>}\n                    </span>\n                    <ChevronDownIcon size={16} className={styles.arrow} />\n                </TextButton>\n\n                <Fade in={isOpen}>\n                    <div className={styles.dropdown}>\n                        {items.map((collection) => (\n                            <FilterMenuItem\n                                key={collection._id}\n                                active={collection._id === activeCollectionId}\n                                collection={collection}\n                                onSelect={handleSelect}\n                            />\n                        ))}\n                    </div>\n                </Fade>\n            </div>\n        </div>\n    );\n};\n\nFilterMenu.propTypes = {\n    items: PropTypes.array.isRequired,\n    baseUrl: PropTypes.string.isRequired,\n    buttonStyle: PropTypes.object,\n    arrowsStyle: PropTypes.object,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { ButtonsMenu } from './ButtonsMenu';\nimport { FilterMenu } from './FilterMenu';\n\nexport function CollectionsBar({ theme, ...rest }) {\n    return theme.filterMode === 'filter' ? (\n        <FilterMenu theme={theme} {...rest} />\n    ) : (\n        <ButtonsMenu theme={theme} {...rest} />\n    );\n}\n\nCollectionsBar.propTypes = {\n    items: PropTypes.array.isRequired,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"zqQ_UzIa\",\"title\":\"_2YZlafSS\",\"list\":\"v4gRAsY4\",\"mobileMode\":\"_2d3Wg2J0\",\"empty\":\"_8ORnZ2Rf\",\"icon\":\"_149SoVjF\",\"description\":\"l6CXojOX\",\"moreBtnContainer\":\"_3OrypCfY\",\"moreBtn\":\"_3N_b-4yz\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useMountedState } from 'react-use';\nimport { get, pick } from 'lodash';\n\nimport { __t, ProductsBlockKind } from '@mssgme/shared';\nimport { cls, isMatchId, isMobile, keyHash } from '@mssgme/helpers';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { LandingsPropTypes, Spinner } from '@mssgme/ui';\nimport { SearchIcon } from '@mssgme/icons';\nimport { ProductItem } from '../../../../products';\nimport { useBlockTheme, useProductsApi, useWebsiteData } from '../../../hooks';\nimport { MoreButton } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { CollectionsBar } from './CollectionsBar';\n\nimport styles from './Products.scss';\n\nexport const Item = ({ product, baseProductUrl, fromCollection, interactive, ...rest }) => {\n    const to = useMemo(\n        () =>\n            interactive\n                ? {\n                    pathname: `${baseProductUrl}/${product.slug}`,\n                    state: { fromCollection },\n                }\n                : undefined,\n        [baseProductUrl, interactive, product]\n    );\n\n    return <ProductItem product={product} tag={interactive ? Link : 'div'} to={to} {...rest} />;\n};\n\nItem.propTypes = {\n    product: PropTypes.object.isRequired,\n    interactive: PropTypes.bool,\n    fromCollection: PropTypes.string,\n    baseProductUrl: PropTypes.string,\n    style: PropTypes.object,\n};\n\nexport default function Products({ block, interactive, isMobileMode, ...rest }) {\n    const website = useWebsiteData();\n    const isMounted = useMountedState();\n    const location = useLocation();\n    const { generateUrl } = useNavigationUtils();\n    const { theme, style } = useBlockTheme(block);\n    const collectionIds = get(block, 'collections.include', []);\n    const activeCollections = website.collections.filter((col) => col.published && col.publishedProductsCount);\n    const showCollections = collectionIds.length\n        ? collectionIds.map((id) => activeCollections.find(isMatchId(id))).filter(Boolean)\n        : activeCollections;\n    const isTabbed = theme.filterMode !== 'buttons';\n    const [activeCollectionId, setActiveCollectionId] = useState(showCollections[0]?._id || null);\n\n    const options = pick(block, ['products', 'total', 'sort']);\n    const query = useMemo(\n        () => ({\n            ...options,\n            limit: isMobile() ? 6 : 12,\n            collections: activeCollectionId && isTabbed ? { include: [activeCollectionId] } : block.collections,\n        }),\n        [website.collections, keyHash(options), activeCollectionId, isTabbed]\n    );\n    const { hasNext, isFetching, items, getProducts } = useProductsApi({\n        workspaceId: website.workspace,\n        websiteId: website._id,\n        query,\n    });\n    const handleMore = useCallback(() => getProducts(), [getProducts]);\n    const baseProductUrl = useMemo(() => generateUrl('p'), [location.pathname]);\n    const defaultStyle = useMemo(() => ({ color: theme.color }), [theme]);\n    const getFromCollection = (product) => Object.keys(product.cols || {}).find((id) => collectionIds.includes(id));\n\n    useEffect(() => {\n        const firstId = showCollections[0]?._id;\n\n        if (firstId !== activeCollectionId && !showCollections.find(isMatchId(activeCollectionId))) {\n            if (isMounted()) {\n                setActiveCollectionId(firstId);\n            }\n        }\n    }, [activeCollectionId, showCollections]);\n\n    return (\n        <BlockBase {...cls([styles.root, isMobileMode && styles.mobileMode], rest)}>\n            {!!block.title && (\n                <div className={styles.title} style={defaultStyle}>\n                    {block.title}\n                </div>\n            )}\n\n            {showCollections.length > 1 && (\n                <CollectionsBar\n                    theme={theme}\n                    style={defaultStyle}\n                    items={showCollections}\n                    interactive={interactive}\n                    activeCollectionId={activeCollectionId}\n                    onSelect={setActiveCollectionId}\n                />\n            )}\n\n            <ul className={styles.list}>\n                {items.map((product) => (\n                    <li key={product._id}>\n                        <Item\n                            product={product}\n                            interactive={interactive}\n                            baseProductUrl={baseProductUrl}\n                            fromCollection={activeCollectionId || getFromCollection(product)}\n                            themeStyles={theme}\n                            style={defaultStyle}\n                        />\n                    </li>\n                ))}\n\n                {!(items.length || isFetching) && (\n                    <li key=\"empty-list\" className={styles.empty} style={defaultStyle}>\n                        <SearchIcon className={styles.icon} size={48} />\n                        <div className={styles.description}>{__t('no_products')}</div>\n                    </li>\n                )}\n            </ul>\n\n            {isFetching ? (\n                <Spinner />\n            ) : (\n                hasNext && (\n                    <div className={styles.moreBtnContainer}>\n                        <MoreButton\n                            className={styles.moreBtn}\n                            style={style}\n                            onClick={handleMore}\n                            disabled={isFetching}\n                        />\n                    </div>\n                )\n            )}\n        </BlockBase>\n    );\n}\n\nProducts.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nProducts.defaultProps = BlockBase.defaultProps;\n\nProducts.kind = ProductsBlockKind;\n","import Products from './Products';\n\nexport default Products;\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { Route } from 'react-router-dom';\n\nexport const PassthroughRoute = ({ path, exact, component: Component, makeProps = (p) => p }) => {\n    const render = useCallback(\n        ({ match }) => {\n            const props = makeProps(match.params);\n\n            return props && <Component {...props} />;\n        },\n        [Component, makeProps]\n    );\n\n    return <Route exact={exact} path={path} render={render} />;\n};\n\nPassthroughRoute.propTypes = {\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n    exact: PropTypes.bool,\n    component: PropTypes.any.isRequired,\n    makeProps: PropTypes.func,\n};\n","import React, { useMemo } from 'react';\n\nimport { useWebsiteData } from '../../hooks';\nimport { CollectionView, ProductView } from '../../Product';\nimport { OrderPage, PaymentStatusPage, UserOrderPage, UserOrdersPage } from '../../Order';\nimport { PassthroughRoute } from '../PassthroughRoute';\n\nexport default function PageProductsRouting() {\n    const website = useWebsiteData();\n    const contexts = useMemo(\n        () => ({\n            product: ({ productSlug, collectionSlug }) => ({\n                productSlug,\n                collectionSlug,\n                workspaceId: website.workspace,\n                defaultCollectionId: website.defaultCollectionId,\n            }),\n            collection: ({ collectionSlug }) => {\n                const collection = collectionSlug && website.collections.find(({ slug }) => slug === collectionSlug);\n\n                if (!collection) {\n                    return null;\n                }\n\n                return {\n                    workspaceId: website.workspace,\n                    websiteId: website._id,\n                    collection,\n                };\n            },\n        }),\n        [website.workspace, website.defaultCollectionId, website.collections]\n    );\n\n    return (\n        <>\n            <PassthroughRoute path=\"/c/:collectionSlug\" makeProps={contexts.collection} component={CollectionView} />\n\n            <PassthroughRoute\n                path={['/p/:productSlug', '/c/:collectionSlug/p/:productSlug']}\n                makeProps={contexts.product}\n                component={ProductView}\n            />\n\n            <PassthroughRoute path=\"/user-orders\" component={UserOrdersPage} />\n            <PassthroughRoute path=\"/user-orders/:orderId\" exact component={UserOrderPage} />\n            <PassthroughRoute\n                path={[\n                    '/orders/:orderId',\n                    '/p/:productSlug/orders/:orderId',\n                    '/c/:collectionSlug/p/:productSlug/orders/:orderId',\n                ]}\n                exact\n                component={OrderPage}\n            />\n            <PassthroughRoute path=\"/orders/:orderId/payment/:status\" component={PaymentStatusPage} />\n        </>\n    );\n}\n"],"sourceRoot":""}