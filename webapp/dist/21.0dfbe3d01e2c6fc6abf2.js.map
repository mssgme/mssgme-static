{"version":3,"sources":["webpack:////drone/src/packages/landings/src/Screens/Template/Edit/Create/PageThumbnailRenderer/PageThumbnailRenderer.module.scss","webpack:////drone/src/packages/landings/src/Screens/Template/Edit/Create/PageThumbnailRenderer/PageThumbnailRenderer.js"],"names":["CanvasRenderer","_ref","website","page","width","height","delay","onRendered","onError","style","useMemo","minWidth","minHeight","boxShadow","borderRadius","elemRef","setRef","useState","render","useCallback","async","canvas","html2canvas","element","useCORS","blob","Promise","resolve","reject","toBlob","e","console","log","ref","useEffect","runner","debounce","node","attempts","arguments","length","undefined","data","cancel","Error","React","createElement","className","styles","Page","interactive","PageThumbnailRenderer","_ref2","src","error","onChange","rest","cls","alt","position","alignItems","justifyContent","display","FiImage","size","color","LoadingIndicator","defaultProps"],"mappings":"+wBACe,EAAQ,WAAR,EAA+B,YAA/B,EAAoD,YAApD,EAAyE,YCWxF,MAAMA,EAAiBC,IAAkE,IAAjE,QAAEC,EAAO,KAAEC,EAAI,MAAEC,EAAK,OAAEC,EAAM,MAAEC,EAAK,WAAEC,EAAU,QAAEC,GAASP,EAChF,MAAMQ,EAAQC,kBACV,KAAM,CAAGN,QAAOO,SAAUP,EAAOC,SAAQO,UAAWP,EAAQQ,UAAW,OAAQC,aAAc,IAC7F,CAACV,EAAOC,KAELU,EAASC,GAAUC,qBACpBC,EAASC,sBAAYC,UACvB,IACI,MAAMC,QAAeC,IAAYC,EAAS,CACtCnB,QACAC,SACAmB,SAAS,IAGPC,QAAa,IAAIC,QAAQ,CAACC,EAASC,KACrC,IACIP,EAAOQ,OAAOF,EAAS,aAAc,IACvC,MAAOG,GACLF,EAAOE,MAIf,OAAKL,IACM,EAIb,MAAOK,GAGL,OADAC,QAAQC,IAAIF,IACL,KAITG,EAAMd,sBACPI,IACQA,IAILhB,EAAW,MACXS,EAAOO,KAEX,CAACpB,EAAMD,EAASK,IA2BpB,OAxBA2B,oBAAU,KACN,IAAKnB,EACD,OAGJ,MAAMoB,EAASC,mBAAShB,eAAOiB,GAAuB,IAAjBC,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC5C,MAAMG,QAAaxB,EAAOmB,GAC1BF,EAAOQ,SAEHD,EACAnC,EAAWmC,KACFJ,EAAW,EACpBH,EAAOE,EAAMC,GAEb9B,GAAWA,EAAQ,IAAIoC,MAAM,6BAElCtC,GAKH,OAHAE,GAAWA,EAAQ,MACnB2B,EAAOpB,GAEAoB,EAAOQ,QACf,CAAC5B,EAASR,IAGTsC,IAAAC,cAAA,OAAKC,UAAWC,EAAevC,MAAOA,GAClCoC,IAAAC,cAACG,IAAI,CAAChB,IAAKA,EAAKxB,MAAOA,EAAOyC,aAAa,EAAOhD,QAASA,EAASC,KAAMA,MAezEgD,EAAwBC,IAW/B,IAXgC,QAClClD,EAAO,KACPC,EAAI,MACJC,EAAK,OACLC,EAAM,MACNC,EAAK,IACL+C,EAAG,MACHC,EAAK,SACLC,EAAQ,QACR/C,KACGgD,GACNJ,EACG,OACIP,IAAAC,cAAA,MAASW,YAAIT,EAAaQ,GACtBX,IAAAC,cAAA,OAAKC,UAAWC,GACXK,EACGR,IAAAC,cAAA,OAAKO,IAAKA,EAAKK,IAAI,cACnBJ,EACAT,IAAAC,cAAA,OACIrC,MAAO,CACHkD,SAAU,WACVvD,MAAO,OACPC,OAAQ,OACRuD,WAAY,SACZC,eAAgB,SAChBC,QAAS,SAGbjB,IAAAC,cAACiB,IAAO,CAACC,KAAM,GAAIC,MAAM,UAG7BpB,IAAAC,cAACoB,IAAgB,OAIzBrB,IAAAC,cAAA,OAAKC,UAAWC,GACZH,IAAAC,cAAC9C,EAAc,CACXE,QAASA,EACTC,KAAMA,EACNC,MAAOA,EACPC,OAAQA,EACRC,MAAOA,EACPC,WAAYgD,EACZ/C,QAASA,OAmB7B2C,EAAsBgB,aAAe,CACjC/D,MAAO,IACPC,OAAQ,IACRC,MAAO,MAGI6C","file":"21.0dfbe3d01e2c6fc6abf2.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GN77rEPe\",\"offscreen\":\"_3ZSmcKz2\",\"sample\":\"_1GjBGm9D\",\"insert\":\"_2R38pYiA\"};","import html2canvas from 'html2canvas';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { debounce } from 'lodash';\nimport { FiImage } from 'react-icons/fi';\n\nimport { cls } from '@mssgme/helpers';\nimport { LoadingIndicator, LandingsPropTypes } from '@mssgme/ui';\nimport { Page } from '@mssgme/userpage-core';\n\nimport styles from './PageThumbnailRenderer.module.scss';\n\nconst CanvasRenderer = ({ website, page, width, height, delay, onRendered, onError }) => {\n    const style = useMemo(\n        () => ({ width, minWidth: width, height, minHeight: height, boxShadow: 'none', borderRadius: 0 }),\n        [width, height]\n    );\n    const [elemRef, setRef] = useState();\n    const render = useCallback(async (element) => {\n        try {\n            const canvas = await html2canvas(element, {\n                width,\n                height,\n                useCORS: true,\n            });\n\n            const blob = await new Promise((resolve, reject) => {\n                try {\n                    canvas.toBlob(resolve, 'image/jpeg', 80);\n                } catch (e) {\n                    reject(e);\n                }\n            });\n\n            if (!blob) {\n                return false;\n            }\n\n            return blob;\n        } catch (e) {\n            // eslint-disable-next-line no-console\n            console.log(e);\n            return false;\n        }\n    });\n\n    const ref = useCallback(\n        (element) => {\n            if (!element) {\n                return;\n            }\n\n            onRendered(null);\n            setRef(element);\n        },\n        [page, website, onRendered]\n    );\n\n    useEffect(() => {\n        if (!elemRef) {\n            return;\n        }\n\n        const runner = debounce(async (node, attempts = 2) => {\n            const data = await render(node);\n            runner.cancel();\n\n            if (data) {\n                onRendered(data);\n            } else if (--attempts > 0) {\n                runner(node, attempts);\n            } else {\n                onError && onError(new Error('Can\\'t generate preview'));\n            }\n        }, delay);\n\n        onError && onError(null);\n        runner(elemRef);\n\n        return runner.cancel;\n    }, [elemRef, onRendered]);\n\n    return (\n        <div className={styles.sample} style={style}>\n            <Page ref={ref} style={style} interactive={false} website={website} page={page} />\n        </div>\n    );\n};\n\nCanvasRenderer.propTypes = {\n    website: LandingsPropTypes.website.isRequired,\n    page: LandingsPropTypes.page.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    delay: PropTypes.number.isRequired,\n    onRendered: PropTypes.func.isRequired,\n    onError: PropTypes.func,\n};\n\nexport const PageThumbnailRenderer = ({\n    website,\n    page,\n    width,\n    height,\n    delay,\n    src,\n    error,\n    onChange,\n    onError,\n    ...rest\n}) => {\n    return (\n        <div {...cls(styles.root, rest)}>\n            <div className={styles.insert}>\n                {src ? (\n                    <img src={src} alt=\"Thumbnail\" />\n                ) : error ? (\n                    <div\n                        style={{\n                            position: 'absolute',\n                            width: '100%',\n                            height: '100%',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            display: 'flex',\n                        }}\n                    >\n                        <FiImage size={20} color=\"#999\" />\n                    </div>\n                ) : (\n                    <LoadingIndicator />\n                )}\n            </div>\n\n            <div className={styles.offscreen}>\n                <CanvasRenderer\n                    website={website}\n                    page={page}\n                    width={width}\n                    height={height}\n                    delay={delay}\n                    onRendered={onChange}\n                    onError={onError}\n                />\n            </div>\n        </div>\n    );\n};\n\nPageThumbnailRenderer.propTypes = {\n    website: LandingsPropTypes.website.isRequired,\n    page: LandingsPropTypes.page.isRequired,\n    src: PropTypes.string,\n    error: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    delay: PropTypes.number,\n    onChange: PropTypes.func.isRequired,\n    onError: PropTypes.func,\n};\n\nPageThumbnailRenderer.defaultProps = {\n    width: 375,\n    height: 506,\n    delay: 1500,\n};\n\nexport default PageThumbnailRenderer;\n"],"sourceRoot":""}