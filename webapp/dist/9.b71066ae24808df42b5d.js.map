{"version":3,"sources":["webpack:////drone/src/packages/lib/src/feedbackApi.js","webpack:////drone/src/packages/shared/src/landings/feedbacks.js","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInputs.scss","webpack:////drone/src/packages/userpage-core/src/landings/UI/DynamicFormInputs/DynamicFormInputs.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionFormContent.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionFormContent.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/SubscriptionForm.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/SubscriptionForm/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGridItem.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGridItem.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesModal.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesModal.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGrid.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/ServicesGrid.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/ServicesGrid/index.js","webpack:////drone/src/packages/userpage-core/src/landings/hooks/useProductsApi.js","webpack:////drone/src/node_modules/react-use/esm/useDebounce.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/ButtonsMenu.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/ButtonsMenu.js","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/TextButton.scss","webpack:////drone/src/packages/ui/src/components/Inputs/Buttons/TextButton.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/FilterMenu.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/FilterMenu.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/CollectionsBar/CollectionsBar.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/Products.scss","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/Products.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/Products/index.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PassthroughRoute.js","webpack:////drone/src/packages/userpage-core/src/landings/Page/PageBlocks/PageProductsRouting.js"],"names":["FeedbackApi","BaseApi","submit","workspaceId","websiteId","payload","this","post","mapDynamicFieldToName","_ref","index","_id","handleEnterKey","e","key","preventDefault","DynamicFormInput","input","as","type","defaultMaxSize","theme","maxLength","size","isTextField","React","createElement","TextField","name","label","required","wrapAs","component","Input","Textarea","onKeyPress","undefined","inputTypes","email","phone","text","DynamicFormInputs","_ref2","block","rest","cls","styles","root","gridMode","items","map","item","SubscriptionFormContent","onSubmit","rawSubmit","interactive","sent","setSent","useState","validationSchema","useMemo","object","reduce","acc","field","validator","string","trim","max","__t","matches","message","excludeEmptyString","mapDynamicInputsToValidationSchema","FormTag","loading","error","useAsyncFn","async","values","pairs","_values$item$_id","value","filter","formik","useEnhancedFormik","initialValues","handleSentModalClosed","useCallback","resetForm","useEffect","hasUrl","sentUrl","timer","setTimeout","window","location","clearTimeout","setErrors","mapValues","errors","FormikProvider","_extends","id","className","SubmitButton","ThemedButton","isInitialHidden","fullWidth","isFetching","disabled","length","style","backgroundColor","buttonBackground","color","buttonTextColor","borderRadius","sendLabel","AnimatePresence","ThemedModal","compact","overlay","showHeader","onClose","handleClose","onClick","FiX","FiCheck","sentText","SubscriptionForm","baseStyle","useBlockTheme","website","useWebsiteData","combined","useMergedStyles","handleSubmit","feedbackApi","workspace","blockId","data","submitEvent","CustomEvent","detail","document","dispatchEvent","BlockBase","defaultProps","kind","SubscriptionFormBlockKind","ServicesGridItem","themeStyles","getMediaSizeUrl","useUploads","photoUrl","MediaSizes","Half","cn","thumbnail","LazyImage","src","alt","title","emptyPlaceholder","IoMdImage","meta","price","formattedDiscount","discount","discountPrice","amount","lineThrough","formatted","ServicesModal","services","contacts","activeIndex","onClosing","handleHash","page","usePageData","history","useHistory","hasMultipleServices","contactBlocks","enabled","_ref3","blocks","find","isMatchedById","handleSlideChange","swiper","replace","realIndex","Swiper","allowTouchMove","initialSlide","noSwipingClass","speed","pagination","onInit","onSlideChange","service","Object","assign","_ref4","isActive","isPrev","isNext","ServiceContent","ServicesGrid","sortable","delay","useLocation","hashId","hash","slice","slideIndexFromHash","findIndex","hasSlideFromHash","Number","isInteger","setPage","isDelayed","setDelayed","isServicesModal","setIsServicesModal","currentServiceIndex","setCurrentServiceIndex","total","hasMore","Math","ceil","sliced","handleLoadMore","old","openServicesModal","closeServicesModal","push","pathname","useTimeoutFn","Spinner","lazy","servicesList","opacity","pointerEvents","moreButtonContainer","MoreButton","ServicesGridBlockKind","useProductsApi","query","isMounted","useMountedState","store","setStore","hasNext","next","publishedCount","pending","run","getProducts","useFetching","results","productsStore","productsApi","list","limit","resetStore","collection","collections","include","published","prevProducts","concat","fn","ms","deps","_a","isReady","cancel","reset","useDebounce","catch","handleError","ButtonsMenu","activeCollectionId","onSelect","hasLeftBtn","moveLeft","hasRightBtn","moveRight","moveTo","useHorizontalTabbedScroll","backgroundDimmed","isLightBG","useBasePageColor","baseUrl","resolvePathname","themeStyle","button","productsCategoryTextColor","buttonActive","arrowButton","arrowBg","isTabbed","filterMode","ItemTag","Link","handleClick","_e$target$dataset","_items$index","slug","target","dataset","useDeepCompareEffect","ref","col","data-index","data-slug","to","default","TextButton","props","PureButton","FilterMenuItem","active","publishedProductsCount","FilterMenu","useRef","isOpen","toggle","useToggle","selected","isMatchId","useClickAway","handleSelect","aria-pressed","ChevronDownIcon","Fade","in","CollectionsBar","Item","product","baseProductUrl","fromCollection","state","ProductItem","tag","Products","_showCollections$","isMobileMode","generateUrl","useNavigationUtils","collectionIds","get","activeCollections","showCollections","Boolean","setActiveCollectionId","options","pick","isMobile","keyHash","handleMore","defaultStyle","getFromCollection","keys","cols","includes","_showCollections$2","firstId","SearchIcon","ProductsBlockKind","PassthroughRoute","path","exact","Component","makeProps","p","render","match","params","Route","PageProductsRouting","contexts","productSlug","collectionSlug","defaultCollectionId","Fragment","CollectionView","ProductView","UserOrdersPage","UserOrderPage","OrderPage","PaymentStatusPage"],"mappings":"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","file":"9.b71066ae24808df42b5d.js","sourcesContent":["import { BaseApi } from './baseApi';\n\nexport class FeedbackApi extends BaseApi {\n    submit(workspaceId, websiteId, payload) {\n        return this.post(`/workspaces/${workspaceId}/websites/${websiteId}/feedback`, payload);\n    }\n}\n\nexport default ((options) => new FeedbackApi(options))();\n","import { object, string } from 'yup';\n\nimport { __t } from '../trans';\n\nexport const defaultDynamicFieldLengthLimit = 250;\nexport const mapDynamicFieldToName = ({ _id }, index) => _id || `field-${index}`;\nexport const mapDynamicInputsToValidationSchema = ({ items }) =>\n    object({\n        ...items.reduce((acc, item, index) => {\n            const field = mapDynamicFieldToName(item, index);\n            let validator = string()\n                .trim()\n                .max(item.size || defaultDynamicFieldLengthLimit, __t('field_too_long'));\n\n            if (item.required) {\n                validator = validator.required(__t('field_required'));\n            }\n\n            switch (item.type) {\n                case 'email': {\n                    validator = validator.email(__t('field_email'));\n\n                    break;\n                }\n                case 'phone': {\n                    validator = validator.matches(/\\+?[\\d\\-\\s()]{5,}/, {\n                        name: 'phone',\n                        message: __t('field_phone'),\n                        excludeEmptyString: true,\n                    });\n\n                    break;\n                }\n            }\n\n            acc[field] = validator;\n\n            return acc;\n        }, {}),\n    });\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qsFFCJh2\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { mapDynamicFieldToName } from '@mssgme/shared';\nimport { cls } from '@mssgme/helpers';\nimport { Input, Textarea } from '@mssgme/ui';\nimport { TextField } from '../Inputs';\n\nimport styles from './DynamicFormInputs.scss';\n\nconst handleEnterKey = (e) => {\n    if (e.key === 'Enter') {\n        e.preventDefault();\n    }\n};\n\nexport const DynamicFormInput = ({ index, input, as, type, defaultMaxSize, theme }) => {\n    const maxLength = input.size || defaultMaxSize;\n    const isTextField = maxLength <= 250;\n\n    return (\n        <TextField\n            name={mapDynamicFieldToName(input, index)}\n            label={input.label}\n            required={input.required}\n            maxLength={maxLength}\n            wrapAs={as}\n            component={isTextField ? Input : Textarea}\n            type={type || 'text'}\n            onKeyPress={isTextField ? handleEnterKey : undefined}\n            theme={theme}\n        />\n    );\n};\n\nDynamicFormInput.propTypes = {\n    input: PropTypes.shape({\n        _id: PropTypes.string,\n        label: PropTypes.string,\n        required: PropTypes.bool,\n        size: PropTypes.number,\n    }).isRequired,\n    index: PropTypes.number.isRequired,\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n    type: PropTypes.string,\n    defaultMaxSize: PropTypes.number.isRequired,\n    theme: PropTypes.object,\n};\n\nconst inputTypes = {\n    name: 'text',\n    email: 'email',\n    phone: 'tel',\n    text: 'text',\n};\n\nexport const DynamicFormInputs = ({ block, theme, defaultMaxSize, ...rest }) => {\n    return (\n        <ul {...cls([styles.root, styles[theme.gridMode]], rest)}>\n            {block.items.map((item, index) => (\n                <DynamicFormInput\n                    as=\"li\"\n                    key={item._id || index}\n                    index={index}\n                    input={item}\n                    type={inputTypes[item.type]}\n                    defaultMaxSize={defaultMaxSize}\n                    theme={theme}\n                />\n            ))}\n        </ul>\n    );\n};\n\nDynamicFormInputs.propTypes = {\n    block: PropTypes.shape({\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                _id: PropTypes.string,\n                label: PropTypes.string,\n                required: PropTypes.bool,\n                size: PropTypes.number,\n            })\n        ).isRequired,\n    }).isRequired,\n    theme: PropTypes.object.isRequired,\n    defaultMaxSize: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"_35FFwmIV\",\"successContent\":\"Pbq8WWuk\",\"icon\":\"_3tc4nquV\",\"closeIcon\":\"G81q4QWv\",\"text\":\"_3Aqm6-Qf\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAsyncFn } from 'react-use';\nimport { AnimatePresence } from 'framer-motion';\nimport { FiCheck, FiX } from 'react-icons/fi';\nimport { mapValues } from 'lodash';\n\nimport {\n    __t,\n    defaultDynamicFieldLengthLimit,\n    mapDynamicFieldToName,\n    mapDynamicInputsToValidationSchema,\n} from '@mssgme/shared';\nimport { FormikProvider, LandingsPropTypes, SubmitButton, useEnhancedFormik } from '@mssgme/ui';\nimport { DynamicFormInputs, ThemedButton, ThemedModal } from '../../../UI';\n\nimport styles from './SubscriptionFormContent.scss';\n\nexport const SubscriptionFormContent = ({ block, theme, onSubmit: rawSubmit, interactive, ...rest }) => {\n    const [sent, setSent] = useState(null);\n    const validationSchema = useMemo(() => mapDynamicInputsToValidationSchema(block), [block]);\n    const FormTag = interactive ? 'form' : 'div';\n\n    const [{ loading, error }, onSubmit] = useAsyncFn(\n        async (values) => {\n            if (false === (await rawSubmit(values))) {\n                return;\n            }\n\n            const items = block.items.map((item, index) => {\n                const field = mapDynamicFieldToName(item, index);\n                const value = values[item._id] ?? values[field];\n\n                return {\n                    key: field,\n                    label: item.label,\n                    value,\n                };\n            });\n            const pairs = items.filter(({ value }) => value);\n\n            setSent(pairs);\n        },\n        [rawSubmit]\n    );\n\n    const formik = useEnhancedFormik({\n        initialValues: useMemo(() =>\n            block.items.reduce((acc, item, index) => ((acc[mapDynamicFieldToName(item, index)] = ''), acc), {})\n        ),\n        validationSchema,\n        onSubmit,\n    });\n\n    const handleSentModalClosed = useCallback(() => {\n        setSent(false);\n        formik.resetForm();\n    }, [formik]);\n\n    useEffect(() => {\n        if (sent && block.hasUrl && block.sentUrl) {\n            const timer = setTimeout(() => (window.location = block.sentUrl), 1000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [sent, block.hasUrl, block.sentUrl, formik]);\n\n    useEffect(() => {\n        formik.setErrors(mapValues(error?.errors, (value) => __t(value)));\n    }, [error]);\n\n    return (\n        <FormikProvider value={formik}>\n            <FormTag id={`form_${block._id}`} {...rest}>\n                <DynamicFormInputs theme={theme} block={block} defaultMaxSize={defaultDynamicFieldLengthLimit} />\n\n                <div className={styles.buttonContainer}>\n                    <SubmitButton\n                        as={ThemedButton}\n                        theme={theme}\n                        isInitialHidden={false}\n                        fullWidth\n                        isFetching={loading}\n                        disabled={!block.items.length}\n                        style={{\n                            backgroundColor: theme.buttonBackground,\n                            color: theme.buttonTextColor,\n                            borderRadius: theme.borderRadius,\n                        }}\n                    >\n                        {block.sendLabel}\n                    </SubmitButton>\n                </div>\n            </FormTag>\n\n            <AnimatePresence>\n                {sent && (\n                    <ThemedModal compact overlay showHeader={false} onClose={handleSentModalClosed}>\n                        {(handleClose) => (\n                            <div className={styles.successContent}>\n                                <div className={styles.closeIcon} onClick={handleClose}>\n                                    <FiX size={26} />\n                                </div>\n                                <FiCheck size={60} className={styles.icon} />\n                                <p className={styles.text}>{block.sentText}</p>\n                            </div>\n                        )}\n                    </ThemedModal>\n                )}\n            </AnimatePresence>\n        </FormikProvider>\n    );\n};\n\nSubscriptionFormContent.propTypes = {\n    block: LandingsPropTypes.block.isRequired,\n    theme: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    interactive: PropTypes.bool,\n};\n","import React, { useCallback } from 'react';\n\nimport { SubscriptionFormBlockKind } from '@mssgme/shared';\nimport { feedbackApi } from '@mssgme/lib';\nimport { LandingsPropTypes, useMergedStyles } from '@mssgme/ui';\n\nimport { useBlockTheme, useWebsiteData } from '../../../hooks';\nimport { BlockBase } from '../BlockBase';\nimport { SubscriptionFormContent } from './SubscriptionFormContent';\n\nexport default function SubscriptionForm({ block, style: baseStyle, interactive, ...rest }) {\n    const { theme, style } = useBlockTheme(block);\n    const website = useWebsiteData();\n    const combined = useMergedStyles(style, baseStyle);\n\n    const handleSubmit = useCallback(\n        async (values) => {\n            if (!interactive) {\n                return;\n            }\n\n            await feedbackApi.submit(website.workspace, website._id, { blockId: block._id, data: values });\n\n            const submitEvent = new CustomEvent('formSubmitted', {\n                detail: block._id,\n            });\n\n            document.dispatchEvent(submitEvent);\n        },\n        [website, interactive]\n    );\n\n    return (\n        <BlockBase\n            as={SubscriptionFormContent}\n            interactive={interactive}\n            block={block}\n            style={combined}\n            theme={theme}\n            onSubmit={handleSubmit}\n            {...rest}\n        />\n    );\n}\n\nSubscriptionForm.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nSubscriptionForm.defaultProps = BlockBase.defaultProps;\n\nSubscriptionForm.kind = SubscriptionFormBlockKind;\n","import SubscriptionForm from './SubscriptionForm';\n\nexport default SubscriptionForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"-XoAMny0\",\"thumbnail\":\"C_R44W3m\",\"emptyPlaceholder\":\"_335lD0ul\",\"meta\":\"_3haFePjs\",\"title\":\"_19uOjj9I\",\"price\":\"_1YA6epaj\",\"discountPrice\":\"_26QDH8kd\",\"lineThrough\":\"_1iPjetGG\",\"list\":\"_1BKtItoB\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { IoMdImage } from 'react-icons/io';\n\nimport { __t } from '@mssgme/shared';\nimport { LazyImage } from '@mssgme/ui';\nimport { useUploads, MediaSizes } from '../../../hooks';\n\nimport styles from './ServicesGridItem.scss';\n\nexport const ServicesGridItem = ({ item, themeStyles, ...rest }) => {\n    const { getMediaSizeUrl } = useUploads();\n    const photoUrl = getMediaSizeUrl(item.photoUrl, MediaSizes.Half);\n\n    return (\n        <div className={cn(styles.item, styles[themeStyles.gridMode])} {...rest}>\n            <div className={styles.thumbnail} style={{ backgroundColor: themeStyles.backgroundColor }}>\n                {photoUrl ? (\n                    <LazyImage src={photoUrl} alt={item.title} />\n                ) : (\n                    <div className={styles.emptyPlaceholder}>\n                        <IoMdImage size=\"40%\" color=\"#fff\" />\n                    </div>\n                )}\n            </div>\n            <div className={styles.meta} style={{ color: themeStyles.color }}>\n                <div>\n                    <h6 className={styles.title}>{item.title}</h6>\n                    {item.price && (\n                        <div className={styles.price}>\n                            {item.price.formattedDiscount &&\n                                (item.price.discount === 0 ? (\n                                    <span className={styles.discountPrice}>{__t('free')}</span>\n                                ) : (\n                                    <span className={styles.discountPrice}>{item.price.formattedDiscount}</span>\n                                ))}\n                            {item.price.amount === 0 ? (\n                                __t('free')\n                            ) : (\n                                <span className={item.price.formattedDiscount ? styles.lineThrough : null}>\n                                    {item.price.formatted}\n                                </span>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nServicesGridItem.propTypes = {\n    item: PropTypes.object.isRequired,\n    themeStyles: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"_2XbhEsS0\",\"swiper\":\"QnbvWe1q\",\"noSwiping\":\"_2zN_ACNB\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { isMatchedById } from '@mssgme/shared';\nimport { Swiper } from '@mssgme/ui';\nimport { usePageData } from '../../../hooks';\nimport { ServiceContent, ThemedModal } from '../../../UI';\n\nimport styles from './ServicesModal.scss';\n\nexport function ServicesModal({\n    services,\n    contacts,\n    activeIndex,\n    interactive,\n    onClose,\n    onClosing,\n    themeStyles,\n    handleHash,\n}) {\n    const page = usePageData();\n    const history = useHistory();\n    const hasMultipleServices = services.length > 1;\n\n    const contactBlocks = useMemo(\n        () =>\n            contacts\n                .filter(({ enabled }) => enabled)\n                .map(({ blockId }) => page.blocks.find(isMatchedById(blockId))),\n        [page, contacts]\n    );\n\n    const handleSlideChange = useCallback(\n        (swiper) => {\n            if (handleHash) {\n                history.replace('#' + services[swiper.realIndex]._id);\n            }\n        },\n        [handleHash, services]\n    );\n\n    return (\n        <ThemedModal overlay handleHash showHeader={false} onClose={onClose}>\n            <div className={styles.content}>\n                <Swiper\n                    className={styles.swiper}\n                    allowTouchMove={hasMultipleServices}\n                    initialSlide={activeIndex}\n                    noSwipingClass={styles.noSwiping}\n                    speed={600}\n                    pagination={false}\n                    onInit={handleSlideChange}\n                    onSlideChange={handleSlideChange}\n                >\n                    {services.map((service, index) =>\n                        Object.assign(\n                            ({ isActive, isPrev, isNext }) => (\n                                <ServiceContent\n                                    themeStyles={themeStyles}\n                                    service={service}\n                                    contacts={contactBlocks}\n                                    isActive={isActive}\n                                    isPrev={isPrev}\n                                    isNext={isNext}\n                                    interactive={interactive}\n                                    onClose={onClose}\n                                />\n                            ),\n                            { key: service._id || index }\n                        )\n                    )}\n                </Swiper>\n            </div>\n        </ThemedModal>\n    );\n}\n\nServicesModal.propTypes = {\n    services: PropTypes.array.isRequired,\n    contacts: PropTypes.array.isRequired,\n    activeIndex: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onClosing: PropTypes.func,\n    themeStyles: PropTypes.object.isRequired,\n    handleHash: PropTypes.bool,\n    interactive: PropTypes.bool,\n};\n\nServicesModal.defaultProps = {\n    handleHash: true,\n    interactive: true,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"servicesList\":\"_1tPoDiYt\",\"list\":\"_11aOBJzF\",\"moreButtonContainer\":\"_1WE-HNBa\",\"blurred\":\"VgXs12px\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router';\nimport { useTimeoutFn } from 'react-use';\n\nimport { __t, ServicesGridBlockKind } from '@mssgme/shared';\nimport { LandingsPropTypes, Spinner } from '@mssgme/ui';\nimport { useBlockTheme } from '../../../hooks';\nimport { MoreButton } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { ServicesGridItem } from './ServicesGridItem';\nimport { ServicesModal } from './ServicesModal';\n\nimport styles from './ServicesGrid.scss';\n\nconst ITEMS_PER_PAGE = 6;\n\n// TODO: Migrate/convert all service grid items to normal products and remove this block. Replace with Products block.\n\nexport default function ServicesGrid({ block, sortable, interactive, delay = 0, ...rest }) {\n    const location = useLocation();\n    const history = useHistory();\n    const hashId = location.hash && location.hash.slice(1);\n    const slideIndexFromHash = hashId && block.items.findIndex((item) => item._id === hashId);\n    const hasSlideFromHash = Number.isInteger(slideIndexFromHash) && slideIndexFromHash >= 0;\n    const { theme } = useBlockTheme(block);\n    const [page, setPage] = useState(1);\n    const [isDelayed, setDelayed] = useState(!!delay);\n    const [isServicesModal, setIsServicesModal] = useState(false);\n    const [currentServiceIndex, setCurrentServiceIndex] = useState(0);\n    const total = block.items.length;\n    const pages = Math.ceil(total / ITEMS_PER_PAGE);\n    const hasMore = page < pages;\n    const sliced = hasMore ? block.items.slice(0, page * ITEMS_PER_PAGE) : block.items;\n\n    const handleLoadMore = useCallback(() => setPage((old) => old + 1), []);\n    const openServicesModal = useCallback(() => {\n        setIsServicesModal(true);\n    }, []);\n    const closeServicesModal = useCallback(() => {\n        setIsServicesModal(false);\n        history.push(location.pathname);\n    }, [location.pathname]);\n\n    useEffect(() => {\n        if (hasSlideFromHash && !sortable) {\n            setCurrentServiceIndex(slideIndexFromHash);\n            openServicesModal();\n        }\n    }, [hasSlideFromHash]);\n\n    useTimeoutFn(() => setDelayed(false), delay);\n\n    if (isDelayed) {\n        return (\n            <BlockBase {...rest}>\n                <Spinner />\n            </BlockBase>\n        );\n    }\n\n    return (\n        <BlockBase lazy {...rest}>\n            {sliced.length ? (\n                <ul className={cn(styles.servicesList, styles[theme.gridMode])}>\n                    {sliced.map((item, index) => (\n                        <li key={item._id || index}>\n                            <ServicesGridItem\n                                item={item}\n                                themeStyles={theme}\n                                onClick={() => {\n                                    setCurrentServiceIndex(index);\n                                    openServicesModal();\n                                }}\n                            />\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <ul\n                    className={cn(styles.servicesList, styles[theme.gridMode])}\n                    style={{ opacity: 0.7, pointerEvents: 'none' }}\n                >\n                    <li>\n                        <ServicesGridItem\n                            themeStyles={theme}\n                            item={{\n                                title: __t('title'),\n                                price: { amount: 9.99, formatted: '$19.99', formattedDiscount: '$9.99' },\n                            }}\n                        />\n                    </li>\n                    <li>\n                        <ServicesGridItem\n                            themeStyles={theme}\n                            item={{\n                                title: __t('title'),\n                                price: { amount: 9.99, formatted: '$19.99', formattedDiscount: '$9.99' },\n                            }}\n                        />\n                    </li>\n                </ul>\n            )}\n\n            {hasMore && (\n                <div className={styles.moreButtonContainer}>\n                    <MoreButton\n                        onClick={handleLoadMore}\n                        style={{\n                            backgroundColor: theme.backgroundColor,\n                            color: theme.color,\n                            borderRadius: theme.borderRadius,\n                        }}\n                    />\n                </div>\n            )}\n            {isServicesModal && (\n                <ServicesModal\n                    handleHash={interactive}\n                    themeStyles={theme}\n                    contacts={block.contacts}\n                    services={block.items}\n                    activeIndex={currentServiceIndex}\n                    interactive={interactive}\n                    onClose={closeServicesModal}\n                />\n            )}\n        </BlockBase>\n    );\n}\n\nServicesGrid.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n    delay: PropTypes.number,\n};\n\nServicesGrid.defaultProps = BlockBase.defaultProps;\n\nServicesGrid.kind = ServicesGridBlockKind;\n","import ServicesGrid from './ServicesGrid';\n\nexport default ServicesGrid;\n","import { useState } from 'react';\nimport { useDebounce, useMountedState } from 'react-use';\n\nimport { handleError, productsApi } from '@mssgme/lib';\nimport { useFetching } from '@mssgme/hooks';\n\nexport const useProductsApi = ({ workspaceId, websiteId, query }) => {\n    const isMounted = useMountedState();\n    const [store, setStore] = useState({ hasNext: false, next: null, publishedCount: 0, items: [], isFetching: true });\n    const { pending: isFetching, run: getProducts } = useFetching(\n        async (resetStore) => {\n            const { results, next, ...productsStore } = await productsApi.list(workspaceId, {\n                limit: query.limit,\n                next: resetStore ? null : store.next,\n                collection: query.collections.include,\n                website: websiteId,\n                published: true,\n            });\n\n            if (!isMounted()) {\n                return;\n            }\n\n            setStore((prevProducts) => {\n                const items = resetStore ? results : prevProducts.items.concat(results);\n                const hasNext = productsStore.hasNext && !(query.total && items.length >= query.total);\n\n                return {\n                    ...productsStore,\n                    next: (hasNext && next) || null,\n                    items: query.total ? items.slice(0, query.total) : items,\n                    hasNext,\n                };\n            });\n        },\n        [store.next, query]\n    );\n\n    useDebounce(() => void getProducts(true).catch(handleError), 100, [query]);\n\n    return {\n        ...store,\n        isFetching: store.isFetching || isFetching,\n        getProducts,\n    };\n};\n","import { useEffect } from 'react';\nimport useTimeoutFn from './useTimeoutFn';\nexport default function useDebounce(fn, ms, deps) {\n    if (ms === void 0) { ms = 0; }\n    if (deps === void 0) { deps = []; }\n    var _a = useTimeoutFn(fn, ms), isReady = _a[0], cancel = _a[1], reset = _a[2];\n    useEffect(reset, deps);\n    return [isReady, cancel];\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_3dvk4qMK\",\"item\":\"_3awBxbh9\",\"active\":\"zyqy27XG\",\"list\":\"_2agEy5u-\",\"clipLeft\":\"_1gV7--Yd\",\"clipRight\":\"_3kz8zbIR\",\"controlContainerLeft\":\"_25EQ80Ed\",\"controlContainerRight\":\"_3JnavzXx\",\"control\":\"hhPWLPiY\"};","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { __t } from '@mssgme/shared';\nimport { resolvePathname } from '@mssgme/helpers';\nimport { useHorizontalTabbedScroll } from '@mssgme/ui';\nimport { useBasePageColor } from '../../../../hooks';\n\nimport styles from './ButtonsMenu.scss';\n\nexport const ButtonsMenu = ({ items, interactive, activeCollectionId, theme, onSelect, ...rest }) => {\n    const location = useLocation();\n    const { root, hasLeftBtn, moveLeft, list, hasRightBtn, moveRight, moveTo } = useHorizontalTabbedScroll(\n        items.length\n    );\n    const { backgroundColor, backgroundDimmed, isLightBG } = useBasePageColor();\n    const baseUrl = useMemo(() => resolvePathname(location.pathname, 'c'), [location.pathname]);\n    const themeStyle = useMemo(\n        () => ({\n            button: {\n                backgroundColor: theme.backgroundColor,\n                color: theme.productsCategoryTextColor || theme.color,\n                borderRadius: theme.borderRadius,\n            },\n            buttonActive: {\n                backgroundColor: theme.buttonBackground,\n                color: theme.buttonTextColor,\n                borderRadius: theme.borderRadius,\n            },\n            arrowButton: { color: theme.color },\n            arrowBg: { color: backgroundColor },\n        }),\n        [theme, backgroundColor, backgroundDimmed, isLightBG]\n    );\n\n    const isTabbed = theme.filterMode === 'tabs';\n    const ItemTag = interactive ? Link : 'div';\n    const handleClick = useCallback(\n        (e) => {\n            if (!isTabbed) {\n                return;\n            }\n\n            e.preventDefault();\n\n            const slug = e.target.dataset?.slug;\n            const index = items.findIndex((item) => item.slug === slug);\n            const id = items[index]?._id;\n\n            if (id === activeCollectionId) {\n                // onSelect(null);\n            } else {\n                moveTo(index);\n                onSelect(id);\n            }\n        },\n        [isTabbed, activeCollectionId, items, moveTo, onSelect]\n    );\n\n    useDeepCompareEffect(() => {\n        if (items.length) {\n            moveTo(0);\n            onSelect(items[0]._id);\n        }\n    }, [items]);\n\n    return (\n        <div className={styles.root} ref={root} {...rest}>\n            {hasLeftBtn && (\n                <div key={`le-${backgroundColor}`} className={styles.controlContainerLeft} onClick={moveLeft}>\n                    <div className={styles.control} style={themeStyle.arrowButton}>\n                        &larr;\n                    </div>\n                </div>\n            )}\n\n            <ul className={cn(styles.list, hasLeftBtn && styles.clipLeft, hasRightBtn && styles.clipRight)} ref={list}>\n                {items.map((col, index) => {\n                    const isActive = isTabbed && activeCollectionId === col._id;\n\n                    return (\n                        <li\n                            key={col._id}\n                            data-index={index}\n                            className={cn({ [styles.item]: true, [styles.active]: isActive })}\n                        >\n                            <ItemTag\n                                style={isActive ? themeStyle.buttonActive : themeStyle.button}\n                                data-slug={col.slug}\n                                onClick={handleClick}\n                                {...interactive && { to: `${baseUrl}/${col.slug}` }}\n                            >\n                                {col.default ? __t('all_products') : col.name}\n                            </ItemTag>\n                        </li>\n                    );\n                })}\n            </ul>\n\n            {hasRightBtn && (\n                <div key={`ri-${backgroundColor}`} className={styles.controlContainerRight} onClick={moveRight}>\n                    <div className={styles.control} style={themeStyle.arrowButton}>\n                        &rarr;\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nButtonsMenu.propTypes = {\n    items: PropTypes.array.isRequired,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"_1cheHu2s\",\"startIcon\":\"_3QTRIM5a\",\"endIcon\":\"bgPcNmEE\"};","import React from 'react';\nimport PureButton from './PureButton';\n\nimport styles from './TextButton.scss';\n\nexport default function TextButton(props) {\n    return <PureButton styles={styles} {...props} />;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2dUvypCw\",\"select\":\"_5GfWMbLF\",\"button\":\"_1RWnUF4N\",\"label\":\"_146sE58Z\",\"arrow\":\"_17yoFmZR\",\"option\":\"_3-EPpWFr\",\"active\":\"_2mmR5s76\",\"optionLabel\":\"Hm8d5GxS\",\"badge\":\"yfPVOd0T\",\"dropdown\":\"_3ViuLY5O\"};","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef } from 'react';\nimport { useClickAway, useToggle } from 'react-use';\n\nimport { __t } from '@mssgme/shared';\nimport { isMatchId } from '@mssgme/helpers';\nimport { ChevronDownIcon } from '@mssgme/icons';\nimport { Fade, TextButton } from '@mssgme/ui';\n\nimport styles from './FilterMenu.scss';\n\nexport const FilterMenuItem = ({ collection, active, onSelect }) => {\n    const handleClick = useCallback(() => onSelect(collection._id), [onSelect, collection]);\n\n    return (\n        <div className={cn(styles.option, active && styles.active)} onClick={handleClick}>\n            <span className={styles.optionLabel}>{collection.default ? __t('all_products') : collection.name}</span>\n            <span className={styles.badge}>{collection.publishedProductsCount}</span>\n        </div>\n    );\n};\n\nFilterMenuItem.propTypes = {\n    collection: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n};\n\nexport const FilterMenu = ({ items, activeCollectionId, theme, interactive, onSelect, ...rest }) => {\n    const root = useRef();\n    const [isOpen, toggle] = useToggle();\n    const selected = items.find(isMatchId(activeCollectionId));\n\n    useClickAway(root, () => toggle(false));\n\n    const handleSelect = useCallback((id) => {\n        onSelect(id);\n        toggle(false);\n    });\n\n    return (\n        <div className={styles.root} {...rest}>\n            <div className={styles.select} ref={root}>\n                <TextButton aria-pressed={isOpen} className={styles.button} onClick={toggle}>\n                    <span className={styles.label}>\n                        {selected && (selected.default ? __t('all_products') : selected.name)}\n                        {selected && <span>&nbsp;({selected?.publishedProductsCount})</span>}\n                    </span>\n                    <ChevronDownIcon size={16} className={styles.arrow} />\n                </TextButton>\n\n                <Fade in={isOpen}>\n                    <div className={styles.dropdown}>\n                        {items.map((collection) => (\n                            <FilterMenuItem\n                                key={collection._id}\n                                active={collection._id === activeCollectionId}\n                                collection={collection}\n                                onSelect={handleSelect}\n                            />\n                        ))}\n                    </div>\n                </Fade>\n            </div>\n        </div>\n    );\n};\n\nFilterMenu.propTypes = {\n    items: PropTypes.array.isRequired,\n    baseUrl: PropTypes.string.isRequired,\n    buttonStyle: PropTypes.object,\n    arrowsStyle: PropTypes.object,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { ButtonsMenu } from './ButtonsMenu';\nimport { FilterMenu } from './FilterMenu';\n\nexport function CollectionsBar({ theme, ...rest }) {\n    return theme.filterMode === 'filter' ? (\n        <FilterMenu theme={theme} {...rest} />\n    ) : (\n        <ButtonsMenu theme={theme} {...rest} />\n    );\n}\n\nCollectionsBar.propTypes = {\n    items: PropTypes.array.isRequired,\n    interactive: PropTypes.bool,\n    activeCollectionId: PropTypes.string,\n    theme: PropTypes.object.isRequired,\n    onSelect: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"zqQ_UzIa\",\"title\":\"_2YZlafSS\",\"list\":\"v4gRAsY4\",\"mobileMode\":\"_2d3Wg2J0\",\"empty\":\"_8ORnZ2Rf\",\"icon\":\"_149SoVjF\",\"description\":\"l6CXojOX\",\"moreBtnContainer\":\"_3OrypCfY\",\"moreBtn\":\"_3N_b-4yz\"};","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useMountedState } from 'react-use';\nimport { get, pick } from 'lodash';\n\nimport { __t, ProductsBlockKind } from '@mssgme/shared';\nimport { cls, isMatchId, isMobile, keyHash } from '@mssgme/helpers';\nimport { useNavigationUtils } from '@mssgme/hooks';\nimport { LandingsPropTypes, Spinner } from '@mssgme/ui';\nimport { SearchIcon } from '@mssgme/icons';\nimport { ProductItem } from '../../../../products';\nimport { useBlockTheme, useProductsApi, useWebsiteData } from '../../../hooks';\nimport { MoreButton } from '../../../UI';\nimport { BlockBase } from '../BlockBase';\nimport { CollectionsBar } from './CollectionsBar';\n\nimport styles from './Products.scss';\n\nexport const Item = ({ product, baseProductUrl, fromCollection, interactive, ...rest }) => {\n    const to = useMemo(\n        () =>\n            interactive\n                ? {\n                    pathname: `${baseProductUrl}/${product.slug}`,\n                    state: { fromCollection },\n                }\n                : undefined,\n        [baseProductUrl, interactive, product]\n    );\n\n    return <ProductItem product={product} tag={interactive ? Link : 'div'} to={to} {...rest} />;\n};\n\nItem.propTypes = {\n    product: PropTypes.object.isRequired,\n    interactive: PropTypes.bool,\n    fromCollection: PropTypes.string,\n    baseProductUrl: PropTypes.string,\n    style: PropTypes.object,\n};\n\nexport default function Products({ block, interactive, isMobileMode, ...rest }) {\n    const website = useWebsiteData();\n    const isMounted = useMountedState();\n    const location = useLocation();\n    const { generateUrl } = useNavigationUtils();\n    const { theme, style } = useBlockTheme(block);\n    const collectionIds = get(block, 'collections.include', []);\n    const activeCollections = website.collections.filter((col) => col.published && col.publishedProductsCount);\n    const showCollections = collectionIds.length\n        ? collectionIds.map((id) => activeCollections.find(isMatchId(id))).filter(Boolean)\n        : activeCollections;\n    const isTabbed = theme.filterMode !== 'buttons';\n    const [activeCollectionId, setActiveCollectionId] = useState(showCollections[0]?._id || null);\n\n    const options = pick(block, ['products', 'total', 'sort']);\n    const query = useMemo(\n        () => ({\n            ...options,\n            limit: isMobile() ? 6 : 12,\n            collections: activeCollectionId && isTabbed ? { include: [activeCollectionId] } : block.collections,\n        }),\n        [website.collections, keyHash(options), activeCollectionId, isTabbed]\n    );\n    const { hasNext, isFetching, items, getProducts } = useProductsApi({\n        workspaceId: website.workspace,\n        websiteId: website._id,\n        query,\n    });\n    const handleMore = useCallback(() => getProducts(), [getProducts]);\n    const baseProductUrl = useMemo(() => generateUrl('p'), [location.pathname]);\n    const defaultStyle = useMemo(() => ({ color: theme.color }), [theme]);\n    const getFromCollection = (product) => Object.keys(product.cols || {}).find((id) => collectionIds.includes(id));\n\n    useEffect(() => {\n        const firstId = showCollections[0]?._id;\n\n        if (firstId !== activeCollectionId && !showCollections.find(isMatchId(activeCollectionId))) {\n            if (isMounted()) {\n                setActiveCollectionId(firstId);\n            }\n        }\n    }, [activeCollectionId, showCollections]);\n\n    return (\n        <BlockBase {...cls([styles.root, isMobileMode && styles.mobileMode], rest)}>\n            {!!block.title && (\n                <div className={styles.title} style={defaultStyle}>\n                    {block.title}\n                </div>\n            )}\n\n            {showCollections.length > 1 && (\n                <CollectionsBar\n                    theme={theme}\n                    style={defaultStyle}\n                    items={showCollections}\n                    interactive={interactive}\n                    activeCollectionId={activeCollectionId}\n                    onSelect={setActiveCollectionId}\n                />\n            )}\n\n            <ul className={styles.list}>\n                {items.map((product) => (\n                    <li key={product._id}>\n                        <Item\n                            product={product}\n                            interactive={interactive}\n                            baseProductUrl={baseProductUrl}\n                            fromCollection={activeCollectionId || getFromCollection(product)}\n                            themeStyles={theme}\n                            style={defaultStyle}\n                        />\n                    </li>\n                ))}\n\n                {!(items.length || isFetching) && (\n                    <li key=\"empty-list\" className={styles.empty} style={defaultStyle}>\n                        <SearchIcon className={styles.icon} size={48} />\n                        <div className={styles.description}>{__t('no_products')}</div>\n                    </li>\n                )}\n            </ul>\n\n            {isFetching ? (\n                <Spinner />\n            ) : (\n                hasNext && (\n                    <div className={styles.moreBtnContainer}>\n                        <MoreButton\n                            className={styles.moreBtn}\n                            style={style}\n                            onClick={handleMore}\n                            disabled={isFetching}\n                        />\n                    </div>\n                )\n            )}\n        </BlockBase>\n    );\n}\n\nProducts.propTypes = {\n    ...BlockBase.propTypes,\n    block: LandingsPropTypes.block.isRequired,\n};\n\nProducts.defaultProps = BlockBase.defaultProps;\n\nProducts.kind = ProductsBlockKind;\n","import Products from './Products';\n\nexport default Products;\n","import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { Route } from 'react-router-dom';\n\nexport const PassthroughRoute = ({ path, exact, component: Component, makeProps = (p) => p }) => {\n    const render = useCallback(\n        ({ match }) => {\n            const props = makeProps(match.params);\n\n            return props && <Component {...props} />;\n        },\n        [Component, makeProps]\n    );\n\n    return <Route exact={exact} path={path} render={render} />;\n};\n\nPassthroughRoute.propTypes = {\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n    exact: PropTypes.bool,\n    component: PropTypes.any.isRequired,\n    makeProps: PropTypes.func,\n};\n","import React, { useMemo } from 'react';\n\nimport { useWebsiteData } from '../../hooks';\nimport { CollectionView, ProductView } from '../../Product';\nimport { OrderPage, PaymentStatusPage, UserOrderPage, UserOrdersPage } from '../../Order';\nimport { PassthroughRoute } from '../PassthroughRoute';\n\nexport default function PageProductsRouting() {\n    const website = useWebsiteData();\n    const contexts = useMemo(\n        () => ({\n            product: ({ productSlug, collectionSlug }) => ({\n                productSlug,\n                collectionSlug,\n                workspaceId: website.workspace,\n                defaultCollectionId: website.defaultCollectionId,\n            }),\n            collection: ({ collectionSlug }) => {\n                const collection = collectionSlug && website.collections.find(({ slug }) => slug === collectionSlug);\n\n                if (!collection) {\n                    return null;\n                }\n\n                return {\n                    workspaceId: website.workspace,\n                    websiteId: website._id,\n                    collection,\n                };\n            },\n        }),\n        [website.workspace, website.defaultCollectionId, website.collections]\n    );\n\n    return (\n        <>\n            <PassthroughRoute path=\"/c/:collectionSlug\" makeProps={contexts.collection} component={CollectionView} />\n\n            <PassthroughRoute\n                path={['/p/:productSlug', '/c/:collectionSlug/p/:productSlug']}\n                makeProps={contexts.product}\n                component={ProductView}\n            />\n\n            <PassthroughRoute path=\"/user-orders\" component={UserOrdersPage} />\n            <PassthroughRoute path=\"/user-orders/:orderId\" exact component={UserOrderPage} />\n            <PassthroughRoute\n                path={[\n                    '/orders/:orderId',\n                    '/p/:productSlug/orders/:orderId',\n                    '/c/:collectionSlug/p/:productSlug/orders/:orderId',\n                ]}\n                exact\n                component={OrderPage}\n            />\n            <PassthroughRoute path=\"/orders/:orderId/payment/:status\" component={PaymentStatusPage} />\n        </>\n    );\n}\n"],"sourceRoot":""}